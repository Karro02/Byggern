
PingPong.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000254  00800100  00001fe4  00002078  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001fe4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800354  00800354  000022cc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000022cc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002328  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000220  00000000  00000000  00002364  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002921  00000000  00000000  00002584  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fc2  00000000  00000000  00004ea5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000139f  00000000  00000000  00005e67  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000006f4  00000000  00000000  00007208  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008d5  00000000  00000000  000078fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001b24  00000000  00000000  000081d1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000250  00000000  00000000  00009cf5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <OLED_menu+0xc8>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	13 e0       	ldi	r17, 0x03	; 3
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	e4 ee       	ldi	r30, 0xE4	; 228
     37c:	ff e1       	ldi	r31, 0x1F	; 31
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	a4 35       	cpi	r26, 0x54	; 84
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	23 e0       	ldi	r18, 0x03	; 3
     38c:	a4 e5       	ldi	r26, 0x54	; 84
     38e:	b3 e0       	ldi	r27, 0x03	; 3
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	ae 35       	cpi	r26, 0x5E	; 94
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 4e 02 	call	0x49c	; 0x49c <main>
     39e:	0c 94 f0 0f 	jmp	0x1fe0	; 0x1fe0 <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <SRAM_test>:
#include "spi.h"
#include "fonts.h"
#include "mcp2515.h"

void SRAM_test(void)
{
     3a6:	ef 92       	push	r14
     3a8:	ff 92       	push	r15
     3aa:	0f 93       	push	r16
     3ac:	1f 93       	push	r17
     3ae:	cf 93       	push	r28
     3b0:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\n");
     3b2:	8c e1       	ldi	r24, 0x1C	; 28
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	0e 94 51 0b 	call	0x16a2	; 0x16a2 <puts>
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
     3ba:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <rand>
     3be:	7c 01       	movw	r14, r24
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
     3c0:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     3c4:	c0 e0       	ldi	r28, 0x00	; 0
     3c6:	d0 e0       	ldi	r29, 0x00	; 0

void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
     3c8:	00 e0       	ldi	r16, 0x00	; 0
     3ca:	10 e0       	ldi	r17, 0x00	; 0
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     3cc:	20 c0       	rjmp	.+64     	; 0x40e <__DATA_REGION_LENGTH__+0xe>
		uint8_t some_value = rand();
     3ce:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <rand>
		ext_ram[i] = some_value;
     3d2:	fe 01       	movw	r30, r28
     3d4:	f8 5e       	subi	r31, 0xE8	; 232
     3d6:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
     3d8:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
     3da:	28 17       	cp	r18, r24
     3dc:	b9 f0       	breq	.+46     	; 0x40c <__DATA_REGION_LENGTH__+0xc>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     3de:	99 27       	eor	r25, r25
     3e0:	9f 93       	push	r25
     3e2:	8f 93       	push	r24
     3e4:	1f 92       	push	r1
     3e6:	2f 93       	push	r18
     3e8:	df 93       	push	r29
     3ea:	cf 93       	push	r28
     3ec:	82 e3       	ldi	r24, 0x32	; 50
     3ee:	91 e0       	ldi	r25, 0x01	; 1
     3f0:	9f 93       	push	r25
     3f2:	8f 93       	push	r24
     3f4:	0e 94 3b 0b 	call	0x1676	; 0x1676 <printf>
			write_errors++;
     3f8:	0f 5f       	subi	r16, 0xFF	; 255
     3fa:	1f 4f       	sbci	r17, 0xFF	; 255
     3fc:	8d b7       	in	r24, 0x3d	; 61
     3fe:	9e b7       	in	r25, 0x3e	; 62
     400:	08 96       	adiw	r24, 0x08	; 8
     402:	0f b6       	in	r0, 0x3f	; 63
     404:	f8 94       	cli
     406:	9e bf       	out	0x3e, r25	; 62
     408:	0f be       	out	0x3f, r0	; 63
     40a:	8d bf       	out	0x3d, r24	; 61
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     40c:	21 96       	adiw	r28, 0x01	; 1
     40e:	c1 15       	cp	r28, r1
     410:	98 e0       	ldi	r25, 0x08	; 8
     412:	d9 07       	cpc	r29, r25
     414:	e0 f2       	brcs	.-72     	; 0x3ce <SRAM_test+0x28>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
     416:	c7 01       	movw	r24, r14
     418:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <srand>
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     41c:	c0 e0       	ldi	r28, 0x00	; 0
     41e:	d0 e0       	ldi	r29, 0x00	; 0
void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
     420:	e1 2c       	mov	r14, r1
     422:	f1 2c       	mov	r15, r1
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     424:	20 c0       	rjmp	.+64     	; 0x466 <__DATA_REGION_LENGTH__+0x66>
		uint8_t some_value = rand();
     426:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <rand>
		uint8_t retreived_value = ext_ram[i];
     42a:	fe 01       	movw	r30, r28
     42c:	f8 5e       	subi	r31, 0xE8	; 232
     42e:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
     430:	28 17       	cp	r18, r24
     432:	c1 f0       	breq	.+48     	; 0x464 <__DATA_REGION_LENGTH__+0x64>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
     434:	99 27       	eor	r25, r25
     436:	9f 93       	push	r25
     438:	8f 93       	push	r24
     43a:	1f 92       	push	r1
     43c:	2f 93       	push	r18
     43e:	df 93       	push	r29
     440:	cf 93       	push	r28
     442:	8b e6       	ldi	r24, 0x6B	; 107
     444:	91 e0       	ldi	r25, 0x01	; 1
     446:	9f 93       	push	r25
     448:	8f 93       	push	r24
     44a:	0e 94 3b 0b 	call	0x1676	; 0x1676 <printf>
			retrieval_errors++;
     44e:	8f ef       	ldi	r24, 0xFF	; 255
     450:	e8 1a       	sub	r14, r24
     452:	f8 0a       	sbc	r15, r24
     454:	8d b7       	in	r24, 0x3d	; 61
     456:	9e b7       	in	r25, 0x3e	; 62
     458:	08 96       	adiw	r24, 0x08	; 8
     45a:	0f b6       	in	r0, 0x3f	; 63
     45c:	f8 94       	cli
     45e:	9e bf       	out	0x3e, r25	; 62
     460:	0f be       	out	0x3f, r0	; 63
     462:	8d bf       	out	0x3d, r24	; 61
		}
	}
	// Retrieval phase: Check that no values were changed during or after the write phase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
     464:	21 96       	adiw	r28, 0x01	; 1
     466:	c1 15       	cp	r28, r1
     468:	98 e0       	ldi	r25, 0x08	; 8
     46a:	d9 07       	cpc	r29, r25
     46c:	e0 f2       	brcs	.-72     	; 0x426 <__DATA_REGION_LENGTH__+0x26>
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
     46e:	ff 92       	push	r15
     470:	ef 92       	push	r14
     472:	1f 93       	push	r17
     474:	0f 93       	push	r16
     476:	88 ea       	ldi	r24, 0xA8	; 168
     478:	91 e0       	ldi	r25, 0x01	; 1
     47a:	9f 93       	push	r25
     47c:	8f 93       	push	r24
     47e:	0e 94 3b 0b 	call	0x1676	; 0x1676 <printf>
}
     482:	0f 90       	pop	r0
     484:	0f 90       	pop	r0
     486:	0f 90       	pop	r0
     488:	0f 90       	pop	r0
     48a:	0f 90       	pop	r0
     48c:	0f 90       	pop	r0
     48e:	df 91       	pop	r29
     490:	cf 91       	pop	r28
     492:	1f 91       	pop	r17
     494:	0f 91       	pop	r16
     496:	ff 90       	pop	r15
     498:	ef 90       	pop	r14
     49a:	08 95       	ret

0000049c <main>:

int main(void)
{	
	USART_Init(MYUBRR);
     49c:	8f e1       	ldi	r24, 0x1F	; 31
     49e:	90 e0       	ldi	r25, 0x00	; 0
     4a0:	0e 94 b7 06 	call	0xd6e	; 0xd6e <USART_Init>
	printf_init();
     4a4:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <printf_init>
	printf("UART initialized!\n");
     4a8:	81 e0       	ldi	r24, 0x01	; 1
     4aa:	92 e0       	ldi	r25, 0x02	; 2
     4ac:	0e 94 51 0b 	call	0x16a2	; 0x16a2 <puts>
	xmem_init();
     4b0:	0e 94 df 06 	call	0xdbe	; 0xdbe <xmem_init>
	printf("xmem initialized! \n");
     4b4:	83 e1       	ldi	r24, 0x13	; 19
     4b6:	92 e0       	ldi	r25, 0x02	; 2
     4b8:	0e 94 51 0b 	call	0x16a2	; 0x16a2 <puts>
	OLED_init();
     4bc:	0e 94 2b 04 	call	0x856	; 0x856 <OLED_init>
	
	if (!mcp2515_init()) {
     4c0:	0e 94 13 03 	call	0x626	; 0x626 <mcp2515_init>
     4c4:	81 11       	cpse	r24, r1
     4c6:	04 c0       	rjmp	.+8      	; 0x4d0 <main+0x34>
		printf("mcpc2515 initialized! \n");
     4c8:	86 e2       	ldi	r24, 0x26	; 38
     4ca:	92 e0       	ldi	r25, 0x02	; 2
     4cc:	0e 94 51 0b 	call	0x16a2	; 0x16a2 <puts>
	}
	
	
	SRAM_test();
     4d0:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <SRAM_test>
	
	
	
	signedPos offset = get_stick_offset();
     4d4:	0e 94 47 07 	call	0xe8e	; 0xe8e <get_stick_offset>
     4d8:	06 2f       	mov	r16, r22
     4da:	17 2f       	mov	r17, r23
     4dc:	d8 2f       	mov	r29, r24
     4de:	c9 2f       	mov	r28, r25
	printf("X: %4d Y: %4d \n", offset.X, offset.Y);
     4e0:	9f 93       	push	r25
     4e2:	8f 93       	push	r24
     4e4:	7f 93       	push	r23
     4e6:	6f 93       	push	r22
     4e8:	8d e3       	ldi	r24, 0x3D	; 61
     4ea:	92 e0       	ldi	r25, 0x02	; 2
     4ec:	9f 93       	push	r25
     4ee:	8f 93       	push	r24
     4f0:	0e 94 3b 0b 	call	0x1676	; 0x1676 <printf>
	
	mcp2515_test_loopBack();
     4f4:	0e 94 b3 03 	call	0x766	; 0x766 <mcp2515_test_loopBack>
	
	//OLED_clear();
	OLED_run(offset);
     4f8:	60 2f       	mov	r22, r16
     4fa:	71 2f       	mov	r23, r17
     4fc:	8d 2f       	mov	r24, r29
     4fe:	9c 2f       	mov	r25, r28
     500:	0e 94 0f 06 	call	0xc1e	; 0xc1e <OLED_run>
     504:	0f 90       	pop	r0
     506:	0f 90       	pop	r0
     508:	0f 90       	pop	r0
     50a:	0f 90       	pop	r0
     50c:	0f 90       	pop	r0
     50e:	0f 90       	pop	r0
     510:	ff cf       	rjmp	.-2      	; 0x510 <__stack+0x11>

00000512 <mcp2515_reset>:
	PORTB &= ~(1 << CAN_CS);
	SPI_MasterWrite(0b10010010);
	uint8_t data = SPI_MasterRead();
	PORTB |= (1 << CAN_CS);
	return data;
}
     512:	88 b3       	in	r24, 0x18	; 24
     514:	8f 7e       	andi	r24, 0xEF	; 239
     516:	88 bb       	out	0x18, r24	; 24
     518:	80 ec       	ldi	r24, 0xC0	; 192
     51a:	0e 94 af 06 	call	0xd5e	; 0xd5e <SPI_MasterWrite>
     51e:	88 b3       	in	r24, 0x18	; 24
     520:	80 61       	ori	r24, 0x10	; 16
     522:	88 bb       	out	0x18, r24	; 24
     524:	08 95       	ret

00000526 <mcp2515_read>:
     526:	cf 93       	push	r28
     528:	c8 2f       	mov	r28, r24
     52a:	88 b3       	in	r24, 0x18	; 24
     52c:	8f 7e       	andi	r24, 0xEF	; 239
     52e:	88 bb       	out	0x18, r24	; 24
     530:	83 e0       	ldi	r24, 0x03	; 3
     532:	0e 94 af 06 	call	0xd5e	; 0xd5e <SPI_MasterWrite>
     536:	8c 2f       	mov	r24, r28
     538:	0e 94 af 06 	call	0xd5e	; 0xd5e <SPI_MasterWrite>
     53c:	0e 94 b2 06 	call	0xd64	; 0xd64 <SPI_MasterRead>
     540:	98 b3       	in	r25, 0x18	; 24
     542:	90 61       	ori	r25, 0x10	; 16
     544:	98 bb       	out	0x18, r25	; 24
     546:	cf 91       	pop	r28
     548:	08 95       	ret

0000054a <mcp2515_write>:
     54a:	cf 93       	push	r28
     54c:	df 93       	push	r29
     54e:	d8 2f       	mov	r29, r24
     550:	c6 2f       	mov	r28, r22
     552:	88 b3       	in	r24, 0x18	; 24
     554:	8f 7e       	andi	r24, 0xEF	; 239
     556:	88 bb       	out	0x18, r24	; 24
     558:	82 e0       	ldi	r24, 0x02	; 2
     55a:	0e 94 af 06 	call	0xd5e	; 0xd5e <SPI_MasterWrite>
     55e:	8d 2f       	mov	r24, r29
     560:	0e 94 af 06 	call	0xd5e	; 0xd5e <SPI_MasterWrite>
     564:	8c 2f       	mov	r24, r28
     566:	0e 94 af 06 	call	0xd5e	; 0xd5e <SPI_MasterWrite>
     56a:	88 b3       	in	r24, 0x18	; 24
     56c:	80 61       	ori	r24, 0x10	; 16
     56e:	88 bb       	out	0x18, r24	; 24
     570:	df 91       	pop	r29
     572:	cf 91       	pop	r28
     574:	08 95       	ret

00000576 <mcp2515_set_mode>:
     576:	cf 93       	push	r28
     578:	c8 2f       	mov	r28, r24
     57a:	68 2f       	mov	r22, r24
     57c:	8f e0       	ldi	r24, 0x0F	; 15
     57e:	0e 94 a5 02 	call	0x54a	; 0x54a <mcp2515_write>
     582:	8e e0       	ldi	r24, 0x0E	; 14
     584:	0e 94 93 02 	call	0x526	; 0x526 <mcp2515_read>
     588:	80 7e       	andi	r24, 0xE0	; 224
     58a:	c8 17       	cp	r28, r24
     58c:	31 f0       	breq	.+12     	; 0x59a <mcp2515_set_mode+0x24>
     58e:	8d e4       	ldi	r24, 0x4D	; 77
     590:	92 e0       	ldi	r25, 0x02	; 2
     592:	0e 94 51 0b 	call	0x16a2	; 0x16a2 <puts>
     596:	81 e0       	ldi	r24, 0x01	; 1
     598:	01 c0       	rjmp	.+2      	; 0x59c <mcp2515_set_mode+0x26>
     59a:	80 e0       	ldi	r24, 0x00	; 0
     59c:	cf 91       	pop	r28
     59e:	08 95       	ret

000005a0 <mcp2515_request_to_send>:
     5a0:	98 b3       	in	r25, 0x18	; 24
     5a2:	9f 7e       	andi	r25, 0xEF	; 239
     5a4:	98 bb       	out	0x18, r25	; 24
     5a6:	81 30       	cpi	r24, 0x01	; 1
     5a8:	41 f0       	breq	.+16     	; 0x5ba <mcp2515_request_to_send+0x1a>
     5aa:	18 f0       	brcs	.+6      	; 0x5b2 <mcp2515_request_to_send+0x12>
     5ac:	82 30       	cpi	r24, 0x02	; 2
     5ae:	49 f0       	breq	.+18     	; 0x5c2 <mcp2515_request_to_send+0x22>
     5b0:	0b c0       	rjmp	.+22     	; 0x5c8 <mcp2515_request_to_send+0x28>
     5b2:	81 e8       	ldi	r24, 0x81	; 129
     5b4:	0e 94 af 06 	call	0xd5e	; 0xd5e <SPI_MasterWrite>
     5b8:	07 c0       	rjmp	.+14     	; 0x5c8 <mcp2515_request_to_send+0x28>
     5ba:	82 e8       	ldi	r24, 0x82	; 130
     5bc:	0e 94 af 06 	call	0xd5e	; 0xd5e <SPI_MasterWrite>
     5c0:	03 c0       	rjmp	.+6      	; 0x5c8 <mcp2515_request_to_send+0x28>
     5c2:	84 e8       	ldi	r24, 0x84	; 132
     5c4:	0e 94 af 06 	call	0xd5e	; 0xd5e <SPI_MasterWrite>
     5c8:	80 e3       	ldi	r24, 0x30	; 48
     5ca:	0e 94 93 02 	call	0x526	; 0x526 <mcp2515_read>
     5ce:	1f 92       	push	r1
     5d0:	8f 93       	push	r24
     5d2:	8f e6       	ldi	r24, 0x6F	; 111
     5d4:	92 e0       	ldi	r25, 0x02	; 2
     5d6:	9f 93       	push	r25
     5d8:	8f 93       	push	r24
     5da:	0e 94 3b 0b 	call	0x1676	; 0x1676 <printf>
     5de:	88 b3       	in	r24, 0x18	; 24
     5e0:	80 61       	ori	r24, 0x10	; 16
     5e2:	88 bb       	out	0x18, r24	; 24
     5e4:	0f 90       	pop	r0
     5e6:	0f 90       	pop	r0
     5e8:	0f 90       	pop	r0
     5ea:	0f 90       	pop	r0
     5ec:	08 95       	ret

000005ee <mcp2515_bit_modify>:
     5ee:	1f 93       	push	r17
     5f0:	cf 93       	push	r28
     5f2:	df 93       	push	r29
     5f4:	18 2f       	mov	r17, r24
     5f6:	d6 2f       	mov	r29, r22
     5f8:	c4 2f       	mov	r28, r20
     5fa:	88 b3       	in	r24, 0x18	; 24
     5fc:	8f 7e       	andi	r24, 0xEF	; 239
     5fe:	88 bb       	out	0x18, r24	; 24
     600:	85 e0       	ldi	r24, 0x05	; 5
     602:	0e 94 af 06 	call	0xd5e	; 0xd5e <SPI_MasterWrite>
     606:	81 2f       	mov	r24, r17
     608:	0e 94 af 06 	call	0xd5e	; 0xd5e <SPI_MasterWrite>
     60c:	8d 2f       	mov	r24, r29
     60e:	0e 94 af 06 	call	0xd5e	; 0xd5e <SPI_MasterWrite>
     612:	8c 2f       	mov	r24, r28
     614:	0e 94 af 06 	call	0xd5e	; 0xd5e <SPI_MasterWrite>
     618:	88 b3       	in	r24, 0x18	; 24
     61a:	80 61       	ori	r24, 0x10	; 16
     61c:	88 bb       	out	0x18, r24	; 24
     61e:	df 91       	pop	r29
     620:	cf 91       	pop	r28
     622:	1f 91       	pop	r17
     624:	08 95       	ret

00000626 <mcp2515_init>:
     626:	0e 94 a1 06 	call	0xd42	; 0xd42 <SPI_MasterInit>
     62a:	0e 94 89 02 	call	0x512	; 0x512 <mcp2515_reset>
     62e:	8e e0       	ldi	r24, 0x0E	; 14
     630:	0e 94 93 02 	call	0x526	; 0x526 <mcp2515_read>
     634:	80 7e       	andi	r24, 0xE0	; 224
     636:	80 38       	cpi	r24, 0x80	; 128
     638:	31 f0       	breq	.+12     	; 0x646 <mcp2515_init+0x20>
     63a:	8c e8       	ldi	r24, 0x8C	; 140
     63c:	92 e0       	ldi	r25, 0x02	; 2
     63e:	0e 94 51 0b 	call	0x16a2	; 0x16a2 <puts>
     642:	81 e0       	ldi	r24, 0x01	; 1
     644:	08 95       	ret
     646:	64 e0       	ldi	r22, 0x04	; 4
     648:	8a e2       	ldi	r24, 0x2A	; 42
     64a:	0e 94 a5 02 	call	0x54a	; 0x54a <mcp2515_write>
     64e:	6f e9       	ldi	r22, 0x9F	; 159
     650:	89 e2       	ldi	r24, 0x29	; 41
     652:	0e 94 a5 02 	call	0x54a	; 0x54a <mcp2515_write>
     656:	63 e4       	ldi	r22, 0x43	; 67
     658:	88 e2       	ldi	r24, 0x28	; 40
     65a:	0e 94 a5 02 	call	0x54a	; 0x54a <mcp2515_write>
     65e:	40 e2       	ldi	r20, 0x20	; 32
     660:	60 e6       	ldi	r22, 0x60	; 96
     662:	80 e6       	ldi	r24, 0x60	; 96
     664:	0e 94 f7 02 	call	0x5ee	; 0x5ee <mcp2515_bit_modify>
     668:	40 e2       	ldi	r20, 0x20	; 32
     66a:	60 ee       	ldi	r22, 0xE0	; 224
     66c:	81 e0       	ldi	r24, 0x01	; 1
     66e:	0e 94 f7 02 	call	0x5ee	; 0x5ee <mcp2515_bit_modify>
     672:	40 e0       	ldi	r20, 0x00	; 0
     674:	6f ef       	ldi	r22, 0xFF	; 255
     676:	80 e0       	ldi	r24, 0x00	; 0
     678:	0e 94 f7 02 	call	0x5ee	; 0x5ee <mcp2515_bit_modify>
     67c:	40 ee       	ldi	r20, 0xE0	; 224
     67e:	60 ee       	ldi	r22, 0xE0	; 224
     680:	81 e2       	ldi	r24, 0x21	; 33
     682:	0e 94 f7 02 	call	0x5ee	; 0x5ee <mcp2515_bit_modify>
     686:	4f ef       	ldi	r20, 0xFF	; 255
     688:	6f ef       	ldi	r22, 0xFF	; 255
     68a:	80 e2       	ldi	r24, 0x20	; 32
     68c:	0e 94 f7 02 	call	0x5ee	; 0x5ee <mcp2515_bit_modify>
     690:	40 e0       	ldi	r20, 0x00	; 0
     692:	61 e0       	ldi	r22, 0x01	; 1
     694:	80 e6       	ldi	r24, 0x60	; 96
     696:	0e 94 f7 02 	call	0x5ee	; 0x5ee <mcp2515_bit_modify>
     69a:	80 e4       	ldi	r24, 0x40	; 64
     69c:	0e 94 bb 02 	call	0x576	; 0x576 <mcp2515_set_mode>
     6a0:	80 e0       	ldi	r24, 0x00	; 0
     6a2:	08 95       	ret

000006a4 <mcp2515_load_TX>:
     6a4:	0f 93       	push	r16
     6a6:	1f 93       	push	r17
     6a8:	cf 93       	push	r28
     6aa:	c6 2f       	mov	r28, r22
     6ac:	8a 01       	movw	r16, r20
     6ae:	81 30       	cpi	r24, 0x01	; 1
     6b0:	e9 f0       	breq	.+58     	; 0x6ec <mcp2515_load_TX+0x48>
     6b2:	18 f0       	brcs	.+6      	; 0x6ba <mcp2515_load_TX+0x16>
     6b4:	82 30       	cpi	r24, 0x02	; 2
     6b6:	f1 f0       	breq	.+60     	; 0x6f4 <mcp2515_load_TX+0x50>
     6b8:	20 c0       	rjmp	.+64     	; 0x6fa <mcp2515_load_TX+0x56>
     6ba:	ba 01       	movw	r22, r20
     6bc:	76 95       	lsr	r23
     6be:	67 95       	ror	r22
     6c0:	76 95       	lsr	r23
     6c2:	67 95       	ror	r22
     6c4:	76 95       	lsr	r23
     6c6:	67 95       	ror	r22
     6c8:	81 e3       	ldi	r24, 0x31	; 49
     6ca:	0e 94 a5 02 	call	0x54a	; 0x54a <mcp2515_write>
     6ce:	01 2b       	or	r16, r17
     6d0:	11 f0       	breq	.+4      	; 0x6d6 <mcp2515_load_TX+0x32>
     6d2:	60 e2       	ldi	r22, 0x20	; 32
     6d4:	01 c0       	rjmp	.+2      	; 0x6d8 <mcp2515_load_TX+0x34>
     6d6:	60 e0       	ldi	r22, 0x00	; 0
     6d8:	82 e3       	ldi	r24, 0x32	; 50
     6da:	0e 94 a5 02 	call	0x54a	; 0x54a <mcp2515_write>
     6de:	88 b3       	in	r24, 0x18	; 24
     6e0:	8f 7e       	andi	r24, 0xEF	; 239
     6e2:	88 bb       	out	0x18, r24	; 24
     6e4:	81 e4       	ldi	r24, 0x41	; 65
     6e6:	0e 94 af 06 	call	0xd5e	; 0xd5e <SPI_MasterWrite>
     6ea:	07 c0       	rjmp	.+14     	; 0x6fa <mcp2515_load_TX+0x56>
     6ec:	83 e4       	ldi	r24, 0x43	; 67
     6ee:	0e 94 af 06 	call	0xd5e	; 0xd5e <SPI_MasterWrite>
     6f2:	03 c0       	rjmp	.+6      	; 0x6fa <mcp2515_load_TX+0x56>
     6f4:	85 e4       	ldi	r24, 0x45	; 69
     6f6:	0e 94 af 06 	call	0xd5e	; 0xd5e <SPI_MasterWrite>
     6fa:	8c 2f       	mov	r24, r28
     6fc:	0e 94 af 06 	call	0xd5e	; 0xd5e <SPI_MasterWrite>
     700:	88 b3       	in	r24, 0x18	; 24
     702:	80 61       	ori	r24, 0x10	; 16
     704:	88 bb       	out	0x18, r24	; 24
     706:	cf 91       	pop	r28
     708:	1f 91       	pop	r17
     70a:	0f 91       	pop	r16
     70c:	08 95       	ret

0000070e <mcp2515_read_RX>:

uint8_t mcp2515_read_RX(RXBUFFER buffer, uint8_t id) {
     70e:	cf 93       	push	r28
     710:	c8 2f       	mov	r28, r24
	PORTB &= ~(1 << CAN_CS); // Select CAN - controller
     712:	88 b3       	in	r24, 0x18	; 24
     714:	8f 7e       	andi	r24, 0xEF	; 239
     716:	88 bb       	out	0x18, r24	; 24
	switch (buffer) {
     718:	cc 23       	and	r28, r28
     71a:	19 f0       	breq	.+6      	; 0x722 <mcp2515_read_RX+0x14>
     71c:	c1 30       	cpi	r28, 0x01	; 1
     71e:	29 f0       	breq	.+10     	; 0x72a <mcp2515_read_RX+0x1c>
     720:	07 c0       	rjmp	.+14     	; 0x730 <mcp2515_read_RX+0x22>
		case RX0:
		SPI_MasterWrite(MCP_READ_RX0);
     722:	80 e9       	ldi	r24, 0x90	; 144
     724:	0e 94 af 06 	call	0xd5e	; 0xd5e <SPI_MasterWrite>
		break;
     728:	03 c0       	rjmp	.+6      	; 0x730 <mcp2515_read_RX+0x22>
		case RX1:
		SPI_MasterWrite(MCP_READ_RX1);
     72a:	84 e9       	ldi	r24, 0x94	; 148
     72c:	0e 94 af 06 	call	0xd5e	; 0xd5e <SPI_MasterWrite>
		break;
	}
	uint8_t id_read = SPI_MasterRead();
     730:	0e 94 b2 06 	call	0xd64	; 0xd64 <SPI_MasterRead>
	PORTB |= (1 << CAN_CS); // Deselect CAN - controller
     734:	88 b3       	in	r24, 0x18	; 24
     736:	80 61       	ori	r24, 0x10	; 16
     738:	88 bb       	out	0x18, r24	; 24
	
	if (/*id_read == id*/ 1) {
		PORTB &= ~(1 << CAN_CS); // Select CAN - controller
     73a:	88 b3       	in	r24, 0x18	; 24
     73c:	8f 7e       	andi	r24, 0xEF	; 239
     73e:	88 bb       	out	0x18, r24	; 24
	switch (buffer) {
     740:	cc 23       	and	r28, r28
     742:	19 f0       	breq	.+6      	; 0x74a <mcp2515_read_RX+0x3c>
     744:	c1 30       	cpi	r28, 0x01	; 1
     746:	29 f0       	breq	.+10     	; 0x752 <mcp2515_read_RX+0x44>
     748:	07 c0       	rjmp	.+14     	; 0x758 <mcp2515_read_RX+0x4a>
		case RX0:
			SPI_MasterWrite(MCP_READ_RX0 + 0x2);
     74a:	82 e9       	ldi	r24, 0x92	; 146
     74c:	0e 94 af 06 	call	0xd5e	; 0xd5e <SPI_MasterWrite>
			break;
     750:	03 c0       	rjmp	.+6      	; 0x758 <mcp2515_read_RX+0x4a>
		case RX1:
			SPI_MasterWrite(MCP_READ_RX1 + 0x2);
     752:	86 e9       	ldi	r24, 0x96	; 150
     754:	0e 94 af 06 	call	0xd5e	; 0xd5e <SPI_MasterWrite>
			break;
	}
	uint8_t data = SPI_MasterRead();
     758:	0e 94 b2 06 	call	0xd64	; 0xd64 <SPI_MasterRead>
	PORTB |= (1 << CAN_CS); // Deselect CAN - controller
     75c:	98 b3       	in	r25, 0x18	; 24
     75e:	90 61       	ori	r25, 0x10	; 16
     760:	98 bb       	out	0x18, r25	; 24
	}
	
	return 0;
	
	
}
     762:	cf 91       	pop	r28
     764:	08 95       	ret

00000766 <mcp2515_test_loopBack>:

void mcp2515_test_loopBack() {
     766:	cf 93       	push	r28
     768:	df 93       	push	r29
	mcp2515_set_mode(MODE_LOOPBACK);
     76a:	80 e4       	ldi	r24, 0x40	; 64
     76c:	0e 94 bb 02 	call	0x576	; 0x576 <mcp2515_set_mode>
	TXBUFFER test_buffer = TX0;
	RXBUFFER read_buffer = RX0;
	//tx_transmit_message(0x30, 0xef);
	
	mcp2515_load_TX(test_buffer, 0xb4, 0b00000000001);
     770:	41 e0       	ldi	r20, 0x01	; 1
     772:	50 e0       	ldi	r21, 0x00	; 0
     774:	64 eb       	ldi	r22, 0xB4	; 180
     776:	80 e0       	ldi	r24, 0x00	; 0
     778:	0e 94 52 03 	call	0x6a4	; 0x6a4 <mcp2515_load_TX>
	
	mcp2515_request_to_send(test_buffer);
     77c:	80 e0       	ldi	r24, 0x00	; 0
     77e:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <mcp2515_request_to_send>
	uint8_t data = mcp2515_read_RX(read_buffer, 1);
     782:	61 e0       	ldi	r22, 0x01	; 1
     784:	80 e0       	ldi	r24, 0x00	; 0
     786:	0e 94 87 03 	call	0x70e	; 0x70e <mcp2515_read_RX>
	printf("0x%02X\n", data);
     78a:	1f 92       	push	r1
     78c:	8f 93       	push	r24
     78e:	c0 ec       	ldi	r28, 0xC0	; 192
     790:	d2 e0       	ldi	r29, 0x02	; 2
     792:	df 93       	push	r29
     794:	cf 93       	push	r28
     796:	0e 94 3b 0b 	call	0x1676	; 0x1676 <printf>
	
	mcp2515_load_TX(test_buffer, 0xca, 1);
     79a:	41 e0       	ldi	r20, 0x01	; 1
     79c:	50 e0       	ldi	r21, 0x00	; 0
     79e:	6a ec       	ldi	r22, 0xCA	; 202
     7a0:	80 e0       	ldi	r24, 0x00	; 0
     7a2:	0e 94 52 03 	call	0x6a4	; 0x6a4 <mcp2515_load_TX>
	
	mcp2515_request_to_send(test_buffer);
     7a6:	80 e0       	ldi	r24, 0x00	; 0
     7a8:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <mcp2515_request_to_send>
	data = mcp2515_read_RX(read_buffer, 1);
     7ac:	61 e0       	ldi	r22, 0x01	; 1
     7ae:	80 e0       	ldi	r24, 0x00	; 0
     7b0:	0e 94 87 03 	call	0x70e	; 0x70e <mcp2515_read_RX>
	printf("0x%02X\n", data);
     7b4:	1f 92       	push	r1
     7b6:	8f 93       	push	r24
     7b8:	df 93       	push	r29
     7ba:	cf 93       	push	r28
     7bc:	0e 94 3b 0b 	call	0x1676	; 0x1676 <printf>
	
	mcp2515_load_TX(test_buffer, 0x6c, 0b00000000000);
     7c0:	40 e0       	ldi	r20, 0x00	; 0
     7c2:	50 e0       	ldi	r21, 0x00	; 0
     7c4:	6c e6       	ldi	r22, 0x6C	; 108
     7c6:	80 e0       	ldi	r24, 0x00	; 0
     7c8:	0e 94 52 03 	call	0x6a4	; 0x6a4 <mcp2515_load_TX>
	
	mcp2515_request_to_send(test_buffer);
     7cc:	80 e0       	ldi	r24, 0x00	; 0
     7ce:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <mcp2515_request_to_send>
	data = mcp2515_read_RX(read_buffer, 1);
     7d2:	61 e0       	ldi	r22, 0x01	; 1
     7d4:	80 e0       	ldi	r24, 0x00	; 0
     7d6:	0e 94 87 03 	call	0x70e	; 0x70e <mcp2515_read_RX>
	printf("0x%02X\n", data);
     7da:	1f 92       	push	r1
     7dc:	8f 93       	push	r24
     7de:	df 93       	push	r29
     7e0:	cf 93       	push	r28
     7e2:	0e 94 3b 0b 	call	0x1676	; 0x1676 <printf>
     7e6:	8d b7       	in	r24, 0x3d	; 61
     7e8:	9e b7       	in	r25, 0x3e	; 62
     7ea:	0c 96       	adiw	r24, 0x0c	; 12
     7ec:	0f b6       	in	r0, 0x3f	; 63
     7ee:	f8 94       	cli
     7f0:	9e bf       	out	0x3e, r25	; 62
     7f2:	0f be       	out	0x3f, r0	; 63
     7f4:	8d bf       	out	0x3d, r24	; 61
     7f6:	df 91       	pop	r29
     7f8:	cf 91       	pop	r28
     7fa:	08 95       	ret

000007fc <OLED_clear>:
void OLED_set_brightness(int lvl)
{
	unsigned char lvls[] = {0x1A, 0x34, 0x4E, 0x68, 0x82, 0x9C, 0xB6, 0xD0, 0xEA, 0xFF};
	xmem_write(0x81, COMMAND_OFFSET);
	xmem_write(lvls[lvl], COMMAND_OFFSET);
}
     7fc:	0f 93       	push	r16
     7fe:	1f 93       	push	r17
     800:	cf 93       	push	r28
     802:	df 93       	push	r29
     804:	00 e0       	ldi	r16, 0x00	; 0
     806:	10 e0       	ldi	r17, 0x00	; 0
     808:	1e c0       	rjmp	.+60     	; 0x846 <OLED_clear+0x4a>
     80a:	60 e0       	ldi	r22, 0x00	; 0
     80c:	70 e0       	ldi	r23, 0x00	; 0
     80e:	80 eb       	ldi	r24, 0xB0	; 176
     810:	80 0f       	add	r24, r16
     812:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     816:	60 e0       	ldi	r22, 0x00	; 0
     818:	70 e0       	ldi	r23, 0x00	; 0
     81a:	80 e0       	ldi	r24, 0x00	; 0
     81c:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     820:	60 e0       	ldi	r22, 0x00	; 0
     822:	70 e0       	ldi	r23, 0x00	; 0
     824:	80 e1       	ldi	r24, 0x10	; 16
     826:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     82a:	c0 e0       	ldi	r28, 0x00	; 0
     82c:	d0 e0       	ldi	r29, 0x00	; 0
     82e:	06 c0       	rjmp	.+12     	; 0x83c <OLED_clear+0x40>
     830:	60 e0       	ldi	r22, 0x00	; 0
     832:	72 e0       	ldi	r23, 0x02	; 2
     834:	80 e0       	ldi	r24, 0x00	; 0
     836:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     83a:	21 96       	adiw	r28, 0x01	; 1
     83c:	c0 38       	cpi	r28, 0x80	; 128
     83e:	d1 05       	cpc	r29, r1
     840:	bc f3       	brlt	.-18     	; 0x830 <OLED_clear+0x34>
     842:	0f 5f       	subi	r16, 0xFF	; 255
     844:	1f 4f       	sbci	r17, 0xFF	; 255
     846:	08 30       	cpi	r16, 0x08	; 8
     848:	11 05       	cpc	r17, r1
     84a:	fc f2       	brlt	.-66     	; 0x80a <OLED_clear+0xe>
     84c:	df 91       	pop	r29
     84e:	cf 91       	pop	r28
     850:	1f 91       	pop	r17
     852:	0f 91       	pop	r16
     854:	08 95       	ret

00000856 <OLED_init>:
     856:	60 e0       	ldi	r22, 0x00	; 0
     858:	70 e0       	ldi	r23, 0x00	; 0
     85a:	8e ea       	ldi	r24, 0xAE	; 174
     85c:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     860:	60 e0       	ldi	r22, 0x00	; 0
     862:	70 e0       	ldi	r23, 0x00	; 0
     864:	81 ea       	ldi	r24, 0xA1	; 161
     866:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     86a:	60 e0       	ldi	r22, 0x00	; 0
     86c:	70 e0       	ldi	r23, 0x00	; 0
     86e:	8a ed       	ldi	r24, 0xDA	; 218
     870:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     874:	60 e0       	ldi	r22, 0x00	; 0
     876:	70 e0       	ldi	r23, 0x00	; 0
     878:	82 e1       	ldi	r24, 0x12	; 18
     87a:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     87e:	60 e0       	ldi	r22, 0x00	; 0
     880:	70 e0       	ldi	r23, 0x00	; 0
     882:	88 ec       	ldi	r24, 0xC8	; 200
     884:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     888:	60 e0       	ldi	r22, 0x00	; 0
     88a:	70 e0       	ldi	r23, 0x00	; 0
     88c:	88 ea       	ldi	r24, 0xA8	; 168
     88e:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     892:	60 e0       	ldi	r22, 0x00	; 0
     894:	70 e0       	ldi	r23, 0x00	; 0
     896:	8f e3       	ldi	r24, 0x3F	; 63
     898:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     89c:	60 e0       	ldi	r22, 0x00	; 0
     89e:	70 e0       	ldi	r23, 0x00	; 0
     8a0:	85 ed       	ldi	r24, 0xD5	; 213
     8a2:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     8a6:	60 e0       	ldi	r22, 0x00	; 0
     8a8:	70 e0       	ldi	r23, 0x00	; 0
     8aa:	80 e8       	ldi	r24, 0x80	; 128
     8ac:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     8b0:	60 e0       	ldi	r22, 0x00	; 0
     8b2:	70 e0       	ldi	r23, 0x00	; 0
     8b4:	81 e8       	ldi	r24, 0x81	; 129
     8b6:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     8ba:	60 e0       	ldi	r22, 0x00	; 0
     8bc:	70 e0       	ldi	r23, 0x00	; 0
     8be:	80 e5       	ldi	r24, 0x50	; 80
     8c0:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     8c4:	60 e0       	ldi	r22, 0x00	; 0
     8c6:	70 e0       	ldi	r23, 0x00	; 0
     8c8:	89 ed       	ldi	r24, 0xD9	; 217
     8ca:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     8ce:	60 e0       	ldi	r22, 0x00	; 0
     8d0:	70 e0       	ldi	r23, 0x00	; 0
     8d2:	81 e2       	ldi	r24, 0x21	; 33
     8d4:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     8d8:	60 e0       	ldi	r22, 0x00	; 0
     8da:	70 e0       	ldi	r23, 0x00	; 0
     8dc:	80 e2       	ldi	r24, 0x20	; 32
     8de:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     8e2:	60 e0       	ldi	r22, 0x00	; 0
     8e4:	70 e0       	ldi	r23, 0x00	; 0
     8e6:	82 e0       	ldi	r24, 0x02	; 2
     8e8:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     8ec:	60 e0       	ldi	r22, 0x00	; 0
     8ee:	70 e0       	ldi	r23, 0x00	; 0
     8f0:	8b ed       	ldi	r24, 0xDB	; 219
     8f2:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     8f6:	60 e0       	ldi	r22, 0x00	; 0
     8f8:	70 e0       	ldi	r23, 0x00	; 0
     8fa:	80 e3       	ldi	r24, 0x30	; 48
     8fc:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     900:	60 e0       	ldi	r22, 0x00	; 0
     902:	70 e0       	ldi	r23, 0x00	; 0
     904:	8d ea       	ldi	r24, 0xAD	; 173
     906:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     90a:	60 e0       	ldi	r22, 0x00	; 0
     90c:	70 e0       	ldi	r23, 0x00	; 0
     90e:	80 e0       	ldi	r24, 0x00	; 0
     910:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     914:	60 e0       	ldi	r22, 0x00	; 0
     916:	70 e0       	ldi	r23, 0x00	; 0
     918:	84 ea       	ldi	r24, 0xA4	; 164
     91a:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     91e:	60 e0       	ldi	r22, 0x00	; 0
     920:	70 e0       	ldi	r23, 0x00	; 0
     922:	86 ea       	ldi	r24, 0xA6	; 166
     924:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     928:	60 e0       	ldi	r22, 0x00	; 0
     92a:	70 e0       	ldi	r23, 0x00	; 0
     92c:	8f ea       	ldi	r24, 0xAF	; 175
     92e:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     932:	0e 94 fe 03 	call	0x7fc	; 0x7fc <OLED_clear>
     936:	08 95       	ret

00000938 <OLED_write_data>:
     938:	ef 92       	push	r14
     93a:	ff 92       	push	r15
     93c:	0f 93       	push	r16
     93e:	1f 93       	push	r17
     940:	cf 93       	push	r28
     942:	df 93       	push	r29
     944:	7b 01       	movw	r14, r22
     946:	08 2f       	mov	r16, r24
     948:	10 e0       	ldi	r17, 0x00	; 0
     94a:	00 52       	subi	r16, 0x20	; 32
     94c:	11 09       	sbc	r17, r1
     94e:	c0 e0       	ldi	r28, 0x00	; 0
     950:	d0 e0       	ldi	r29, 0x00	; 0
     952:	26 c0       	rjmp	.+76     	; 0x9a0 <OLED_write_data+0x68>
     954:	e1 14       	cp	r14, r1
     956:	f1 04       	cpc	r15, r1
     958:	91 f0       	breq	.+36     	; 0x97e <OLED_write_data+0x46>
     95a:	f8 01       	movw	r30, r16
     95c:	ee 0f       	add	r30, r30
     95e:	ff 1f       	adc	r31, r31
     960:	ee 0f       	add	r30, r30
     962:	ff 1f       	adc	r31, r31
     964:	ee 0f       	add	r30, r30
     966:	ff 1f       	adc	r31, r31
     968:	ec 0f       	add	r30, r28
     96a:	fd 1f       	adc	r31, r29
     96c:	e0 59       	subi	r30, 0x90	; 144
     96e:	ff 4f       	sbci	r31, 0xFF	; 255
     970:	84 91       	lpm	r24, Z
     972:	60 e0       	ldi	r22, 0x00	; 0
     974:	72 e0       	ldi	r23, 0x02	; 2
     976:	80 95       	com	r24
     978:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     97c:	10 c0       	rjmp	.+32     	; 0x99e <OLED_write_data+0x66>
     97e:	f8 01       	movw	r30, r16
     980:	ee 0f       	add	r30, r30
     982:	ff 1f       	adc	r31, r31
     984:	ee 0f       	add	r30, r30
     986:	ff 1f       	adc	r31, r31
     988:	ee 0f       	add	r30, r30
     98a:	ff 1f       	adc	r31, r31
     98c:	ec 0f       	add	r30, r28
     98e:	fd 1f       	adc	r31, r29
     990:	e0 59       	subi	r30, 0x90	; 144
     992:	ff 4f       	sbci	r31, 0xFF	; 255
     994:	84 91       	lpm	r24, Z
     996:	60 e0       	ldi	r22, 0x00	; 0
     998:	72 e0       	ldi	r23, 0x02	; 2
     99a:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     99e:	21 96       	adiw	r28, 0x01	; 1
     9a0:	c8 30       	cpi	r28, 0x08	; 8
     9a2:	d1 05       	cpc	r29, r1
     9a4:	bc f2       	brlt	.-82     	; 0x954 <OLED_write_data+0x1c>
     9a6:	df 91       	pop	r29
     9a8:	cf 91       	pop	r28
     9aa:	1f 91       	pop	r17
     9ac:	0f 91       	pop	r16
     9ae:	ff 90       	pop	r15
     9b0:	ef 90       	pop	r14
     9b2:	08 95       	ret

000009b4 <OLED_print>:
     9b4:	cf 93       	push	r28
     9b6:	df 93       	push	r29
     9b8:	ec 01       	movw	r28, r24
     9ba:	05 c0       	rjmp	.+10     	; 0x9c6 <OLED_print+0x12>
     9bc:	60 e0       	ldi	r22, 0x00	; 0
     9be:	70 e0       	ldi	r23, 0x00	; 0
     9c0:	0e 94 9c 04 	call	0x938	; 0x938 <OLED_write_data>
     9c4:	21 96       	adiw	r28, 0x01	; 1
     9c6:	88 81       	ld	r24, Y
     9c8:	81 11       	cpse	r24, r1
     9ca:	f8 cf       	rjmp	.-16     	; 0x9bc <OLED_print+0x8>
     9cc:	df 91       	pop	r29
     9ce:	cf 91       	pop	r28
     9d0:	08 95       	ret

000009d2 <OLED_print_invert>:
     9d2:	cf 93       	push	r28
     9d4:	df 93       	push	r29
     9d6:	ec 01       	movw	r28, r24
     9d8:	05 c0       	rjmp	.+10     	; 0x9e4 <OLED_print_invert+0x12>
     9da:	61 e0       	ldi	r22, 0x01	; 1
     9dc:	70 e0       	ldi	r23, 0x00	; 0
     9de:	0e 94 9c 04 	call	0x938	; 0x938 <OLED_write_data>
     9e2:	21 96       	adiw	r28, 0x01	; 1
     9e4:	88 81       	ld	r24, Y
     9e6:	81 11       	cpse	r24, r1
     9e8:	f8 cf       	rjmp	.-16     	; 0x9da <OLED_print_invert+0x8>
     9ea:	df 91       	pop	r29
     9ec:	cf 91       	pop	r28
     9ee:	08 95       	ret

000009f0 <OLED_go_to_line>:
     9f0:	cf 93       	push	r28
     9f2:	df 93       	push	r29
     9f4:	cd b7       	in	r28, 0x3d	; 61
     9f6:	de b7       	in	r29, 0x3e	; 62
     9f8:	28 97       	sbiw	r28, 0x08	; 8
     9fa:	0f b6       	in	r0, 0x3f	; 63
     9fc:	f8 94       	cli
     9fe:	de bf       	out	0x3e, r29	; 62
     a00:	0f be       	out	0x3f, r0	; 63
     a02:	cd bf       	out	0x3d, r28	; 61
     a04:	28 e0       	ldi	r18, 0x08	; 8
     a06:	ea e0       	ldi	r30, 0x0A	; 10
     a08:	f1 e0       	ldi	r31, 0x01	; 1
     a0a:	de 01       	movw	r26, r28
     a0c:	11 96       	adiw	r26, 0x01	; 1
     a0e:	01 90       	ld	r0, Z+
     a10:	0d 92       	st	X+, r0
     a12:	2a 95       	dec	r18
     a14:	e1 f7       	brne	.-8      	; 0xa0e <OLED_go_to_line+0x1e>
     a16:	21 e0       	ldi	r18, 0x01	; 1
     a18:	30 e0       	ldi	r19, 0x00	; 0
     a1a:	2c 0f       	add	r18, r28
     a1c:	3d 1f       	adc	r19, r29
     a1e:	82 0f       	add	r24, r18
     a20:	93 1f       	adc	r25, r19
     a22:	60 e0       	ldi	r22, 0x00	; 0
     a24:	70 e0       	ldi	r23, 0x00	; 0
     a26:	fc 01       	movw	r30, r24
     a28:	80 81       	ld	r24, Z
     a2a:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     a2e:	28 96       	adiw	r28, 0x08	; 8
     a30:	0f b6       	in	r0, 0x3f	; 63
     a32:	f8 94       	cli
     a34:	de bf       	out	0x3e, r29	; 62
     a36:	0f be       	out	0x3f, r0	; 63
     a38:	cd bf       	out	0x3d, r28	; 61
     a3a:	df 91       	pop	r29
     a3c:	cf 91       	pop	r28
     a3e:	08 95       	ret

00000a40 <OLED_print_screen>:
     a40:	0f 93       	push	r16
     a42:	1f 93       	push	r17
     a44:	cf 93       	push	r28
     a46:	df 93       	push	r29
     a48:	8c 01       	movw	r16, r24
     a4a:	c0 e0       	ldi	r28, 0x00	; 0
     a4c:	d0 e0       	ldi	r29, 0x00	; 0
     a4e:	0d c0       	rjmp	.+26     	; 0xa6a <OLED_print_screen+0x2a>
     a50:	ce 01       	movw	r24, r28
     a52:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <OLED_go_to_line>
     a56:	fe 01       	movw	r30, r28
     a58:	ee 0f       	add	r30, r30
     a5a:	ff 1f       	adc	r31, r31
     a5c:	e0 0f       	add	r30, r16
     a5e:	f1 1f       	adc	r31, r17
     a60:	80 81       	ld	r24, Z
     a62:	91 81       	ldd	r25, Z+1	; 0x01
     a64:	0e 94 da 04 	call	0x9b4	; 0x9b4 <OLED_print>
     a68:	21 96       	adiw	r28, 0x01	; 1
     a6a:	c8 30       	cpi	r28, 0x08	; 8
     a6c:	d1 05       	cpc	r29, r1
     a6e:	84 f3       	brlt	.-32     	; 0xa50 <OLED_print_screen+0x10>
     a70:	df 91       	pop	r29
     a72:	cf 91       	pop	r28
     a74:	1f 91       	pop	r17
     a76:	0f 91       	pop	r16
     a78:	08 95       	ret

00000a7a <OLED_menu>:
     a7a:	3f 92       	push	r3
     a7c:	4f 92       	push	r4
     a7e:	5f 92       	push	r5
     a80:	6f 92       	push	r6
     a82:	7f 92       	push	r7
     a84:	8f 92       	push	r8
     a86:	9f 92       	push	r9
     a88:	af 92       	push	r10
     a8a:	bf 92       	push	r11
     a8c:	cf 92       	push	r12
     a8e:	df 92       	push	r13
     a90:	ef 92       	push	r14
     a92:	ff 92       	push	r15
     a94:	0f 93       	push	r16
     a96:	1f 93       	push	r17
     a98:	cf 93       	push	r28
     a9a:	df 93       	push	r29
     a9c:	00 d0       	rcall	.+0      	; 0xa9e <OLED_menu+0x24>
     a9e:	00 d0       	rcall	.+0      	; 0xaa0 <OLED_menu+0x26>
     aa0:	00 d0       	rcall	.+0      	; 0xaa2 <OLED_menu+0x28>
     aa2:	cd b7       	in	r28, 0x3d	; 61
     aa4:	de b7       	in	r29, 0x3e	; 62
     aa6:	2b 01       	movw	r4, r22
     aa8:	3c 01       	movw	r6, r24
     aaa:	6a 01       	movw	r12, r20
     aac:	49 01       	movw	r8, r18
     aae:	ca 01       	movw	r24, r20
     ab0:	0e 94 20 05 	call	0xa40	; 0xa40 <OLED_print_screen>
     ab4:	f4 01       	movw	r30, r8
     ab6:	00 81       	ld	r16, Z
     ab8:	11 81       	ldd	r17, Z+1	; 0x01
     aba:	a1 2c       	mov	r10, r1
     abc:	b1 2c       	mov	r11, r1
     abe:	80 e0       	ldi	r24, 0x00	; 0
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	e1 2c       	mov	r14, r1
     ac4:	f1 2c       	mov	r15, r1
     ac6:	81 31       	cpi	r24, 0x11	; 17
     ac8:	f7 e2       	ldi	r31, 0x27	; 39
     aca:	9f 07       	cpc	r25, r31
     acc:	0c f4       	brge	.+2      	; 0xad0 <OLED_menu+0x56>
     ace:	8c c0       	rjmp	.+280    	; 0xbe8 <OLED_menu+0x16e>
     ad0:	c3 01       	movw	r24, r6
     ad2:	b2 01       	movw	r22, r4
     ad4:	0e 94 63 08 	call	0x10c6	; 0x10c6 <get_discrete_direction>
     ad8:	38 2e       	mov	r3, r24
     ada:	e1 14       	cp	r14, r1
     adc:	f1 04       	cpc	r15, r1
     ade:	09 f4       	brne	.+2      	; 0xae2 <OLED_menu+0x68>
     ae0:	4e c0       	rjmp	.+156    	; 0xb7e <OLED_menu+0x104>
     ae2:	22 e0       	ldi	r18, 0x02	; 2
     ae4:	82 13       	cpse	r24, r18
     ae6:	1e c0       	rjmp	.+60     	; 0xb24 <OLED_menu+0xaa>
     ae8:	00 0f       	add	r16, r16
     aea:	11 1f       	adc	r17, r17
     aec:	f6 01       	movw	r30, r12
     aee:	e0 0f       	add	r30, r16
     af0:	f1 1f       	adc	r31, r17
     af2:	80 81       	ld	r24, Z
     af4:	91 81       	ldd	r25, Z+1	; 0x01
     af6:	0e 94 da 04 	call	0x9b4	; 0x9b4 <OLED_print>
     afa:	1a 14       	cp	r1, r10
     afc:	1b 04       	cpc	r1, r11
     afe:	5c f4       	brge	.+22     	; 0xb16 <OLED_menu+0x9c>
     b00:	81 e0       	ldi	r24, 0x01	; 1
     b02:	a8 1a       	sub	r10, r24
     b04:	b1 08       	sbc	r11, r1
     b06:	f5 01       	movw	r30, r10
     b08:	ee 0f       	add	r30, r30
     b0a:	ff 1f       	adc	r31, r31
     b0c:	e8 0d       	add	r30, r8
     b0e:	f9 1d       	adc	r31, r9
     b10:	00 81       	ld	r16, Z
     b12:	11 81       	ldd	r17, Z+1	; 0x01
     b14:	26 c0       	rjmp	.+76     	; 0xb62 <OLED_menu+0xe8>
     b16:	f4 01       	movw	r30, r8
     b18:	02 81       	ldd	r16, Z+2	; 0x02
     b1a:	13 81       	ldd	r17, Z+3	; 0x03
     b1c:	aa 24       	eor	r10, r10
     b1e:	a3 94       	inc	r10
     b20:	b1 2c       	mov	r11, r1
     b22:	1f c0       	rjmp	.+62     	; 0xb62 <OLED_menu+0xe8>
     b24:	f3 e0       	ldi	r31, 0x03	; 3
     b26:	8f 13       	cpse	r24, r31
     b28:	1c c0       	rjmp	.+56     	; 0xb62 <OLED_menu+0xe8>
     b2a:	00 0f       	add	r16, r16
     b2c:	11 1f       	adc	r17, r17
     b2e:	f6 01       	movw	r30, r12
     b30:	e0 0f       	add	r30, r16
     b32:	f1 1f       	adc	r31, r17
     b34:	80 81       	ld	r24, Z
     b36:	91 81       	ldd	r25, Z+1	; 0x01
     b38:	0e 94 da 04 	call	0x9b4	; 0x9b4 <OLED_print>
     b3c:	a1 14       	cp	r10, r1
     b3e:	b1 04       	cpc	r11, r1
     b40:	59 f4       	brne	.+22     	; 0xb58 <OLED_menu+0xde>
     b42:	2f ef       	ldi	r18, 0xFF	; 255
     b44:	a2 1a       	sub	r10, r18
     b46:	b2 0a       	sbc	r11, r18
     b48:	f5 01       	movw	r30, r10
     b4a:	ee 0f       	add	r30, r30
     b4c:	ff 1f       	adc	r31, r31
     b4e:	e8 0d       	add	r30, r8
     b50:	f9 1d       	adc	r31, r9
     b52:	00 81       	ld	r16, Z
     b54:	11 81       	ldd	r17, Z+1	; 0x01
     b56:	05 c0       	rjmp	.+10     	; 0xb62 <OLED_menu+0xe8>
     b58:	f4 01       	movw	r30, r8
     b5a:	00 81       	ld	r16, Z
     b5c:	11 81       	ldd	r17, Z+1	; 0x01
     b5e:	a1 2c       	mov	r10, r1
     b60:	b1 2c       	mov	r11, r1
     b62:	c8 01       	movw	r24, r16
     b64:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <OLED_go_to_line>
     b68:	f8 01       	movw	r30, r16
     b6a:	ee 0f       	add	r30, r30
     b6c:	ff 1f       	adc	r31, r31
     b6e:	ec 0d       	add	r30, r12
     b70:	fd 1d       	adc	r31, r13
     b72:	80 81       	ld	r24, Z
     b74:	91 81       	ldd	r25, Z+1	; 0x01
     b76:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <OLED_print_invert>
     b7a:	e1 2c       	mov	r14, r1
     b7c:	f1 2c       	mov	r15, r1
     b7e:	f4 e0       	ldi	r31, 0x04	; 4
     b80:	3f 12       	cpse	r3, r31
     b82:	30 c0       	rjmp	.+96     	; 0xbe4 <OLED_menu+0x16a>
     b84:	0e 94 b6 08 	call	0x116c	; 0x116c <get_button_data>
     b88:	29 83       	std	Y+1, r18	; 0x01
     b8a:	3a 83       	std	Y+2, r19	; 0x02
     b8c:	4b 83       	std	Y+3, r20	; 0x03
     b8e:	5c 83       	std	Y+4, r21	; 0x04
     b90:	6d 83       	std	Y+5, r22	; 0x05
     b92:	7e 83       	std	Y+6, r23	; 0x06
     b94:	89 81       	ldd	r24, Y+1	; 0x01
     b96:	9a 81       	ldd	r25, Y+2	; 0x02
     b98:	89 2b       	or	r24, r25
     b9a:	49 f4       	brne	.+18     	; 0xbae <OLED_menu+0x134>
     b9c:	1d c0       	rjmp	.+58     	; 0xbd8 <OLED_menu+0x15e>
     b9e:	0e 94 b6 08 	call	0x116c	; 0x116c <get_button_data>
     ba2:	29 83       	std	Y+1, r18	; 0x01
     ba4:	3a 83       	std	Y+2, r19	; 0x02
     ba6:	4b 83       	std	Y+3, r20	; 0x03
     ba8:	5c 83       	std	Y+4, r21	; 0x04
     baa:	6d 83       	std	Y+5, r22	; 0x05
     bac:	7e 83       	std	Y+6, r23	; 0x06
     bae:	89 81       	ldd	r24, Y+1	; 0x01
     bb0:	9a 81       	ldd	r25, Y+2	; 0x02
     bb2:	89 2b       	or	r24, r25
     bb4:	a1 f7       	brne	.-24     	; 0xb9e <OLED_menu+0x124>
     bb6:	80 e0       	ldi	r24, 0x00	; 0
     bb8:	90 e0       	ldi	r25, 0x00	; 0
     bba:	0b c0       	rjmp	.+22     	; 0xbd2 <OLED_menu+0x158>
     bbc:	fc 01       	movw	r30, r24
     bbe:	ee 0f       	add	r30, r30
     bc0:	ff 1f       	adc	r31, r31
     bc2:	e8 0d       	add	r30, r8
     bc4:	f9 1d       	adc	r31, r9
     bc6:	20 81       	ld	r18, Z
     bc8:	31 81       	ldd	r19, Z+1	; 0x01
     bca:	02 17       	cp	r16, r18
     bcc:	13 07       	cpc	r17, r19
     bce:	71 f0       	breq	.+28     	; 0xbec <OLED_menu+0x172>
     bd0:	01 96       	adiw	r24, 0x01	; 1
     bd2:	82 30       	cpi	r24, 0x02	; 2
     bd4:	91 05       	cpc	r25, r1
     bd6:	90 f3       	brcs	.-28     	; 0xbbc <OLED_menu+0x142>
     bd8:	80 e0       	ldi	r24, 0x00	; 0
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	ee 24       	eor	r14, r14
     bde:	e3 94       	inc	r14
     be0:	f1 2c       	mov	r15, r1
     be2:	02 c0       	rjmp	.+4      	; 0xbe8 <OLED_menu+0x16e>
     be4:	80 e0       	ldi	r24, 0x00	; 0
     be6:	90 e0       	ldi	r25, 0x00	; 0
     be8:	01 96       	adiw	r24, 0x01	; 1
     bea:	6d cf       	rjmp	.-294    	; 0xac6 <OLED_menu+0x4c>
     bec:	c8 01       	movw	r24, r16
     bee:	26 96       	adiw	r28, 0x06	; 6
     bf0:	0f b6       	in	r0, 0x3f	; 63
     bf2:	f8 94       	cli
     bf4:	de bf       	out	0x3e, r29	; 62
     bf6:	0f be       	out	0x3f, r0	; 63
     bf8:	cd bf       	out	0x3d, r28	; 61
     bfa:	df 91       	pop	r29
     bfc:	cf 91       	pop	r28
     bfe:	1f 91       	pop	r17
     c00:	0f 91       	pop	r16
     c02:	ff 90       	pop	r15
     c04:	ef 90       	pop	r14
     c06:	df 90       	pop	r13
     c08:	cf 90       	pop	r12
     c0a:	bf 90       	pop	r11
     c0c:	af 90       	pop	r10
     c0e:	9f 90       	pop	r9
     c10:	8f 90       	pop	r8
     c12:	7f 90       	pop	r7
     c14:	6f 90       	pop	r6
     c16:	5f 90       	pop	r5
     c18:	4f 90       	pop	r4
     c1a:	3f 90       	pop	r3
     c1c:	08 95       	ret

00000c1e <OLED_run>:



void OLED_run(signedPos offset) {
     c1e:	cf 93       	push	r28
     c20:	df 93       	push	r29
     c22:	cd b7       	in	r28, 0x3d	; 61
     c24:	de b7       	in	r29, 0x3e	; 62
     c26:	a8 97       	sbiw	r28, 0x28	; 40
     c28:	0f b6       	in	r0, 0x3f	; 63
     c2a:	f8 94       	cli
     c2c:	de bf       	out	0x3e, r29	; 62
     c2e:	0f be       	out	0x3f, r0	; 63
     c30:	cd bf       	out	0x3d, r28	; 61
     c32:	4b 01       	movw	r8, r22
     c34:	5c 01       	movw	r10, r24
	OLED_clear();
     c36:	0e 94 fe 03 	call	0x7fc	; 0x7fc <OLED_clear>
	SCREEN_GUI gui = HOME;
	screen_data home;
	home[0] = "----------------";
     c3a:	2b ef       	ldi	r18, 0xFB	; 251
     c3c:	32 e0       	ldi	r19, 0x02	; 2
     c3e:	3a 83       	std	Y+2, r19	; 0x02
     c40:	29 83       	std	Y+1, r18	; 0x01
	home[1] = "                ";
     c42:	88 ec       	ldi	r24, 0xC8	; 200
     c44:	92 e0       	ldi	r25, 0x02	; 2
     c46:	9c 83       	std	Y+4, r25	; 0x04
     c48:	8b 83       	std	Y+3, r24	; 0x03
	home[2] = "  welcome home  ";
     c4a:	4e e2       	ldi	r20, 0x2E	; 46
     c4c:	53 e0       	ldi	r21, 0x03	; 3
     c4e:	5e 83       	std	Y+6, r21	; 0x06
     c50:	4d 83       	std	Y+5, r20	; 0x05
	home[3] = "                ";
     c52:	98 87       	std	Y+8, r25	; 0x08
     c54:	8f 83       	std	Y+7, r24	; 0x07
	home[4] = "      menu      ";
     c56:	4f e3       	ldi	r20, 0x3F	; 63
     c58:	53 e0       	ldi	r21, 0x03	; 3
     c5a:	5a 87       	std	Y+10, r21	; 0x0a
     c5c:	49 87       	std	Y+9, r20	; 0x09
	home[5] = "                ";
     c5e:	9c 87       	std	Y+12, r25	; 0x0c
     c60:	8b 87       	std	Y+11, r24	; 0x0b
	home[6] = "                ";
     c62:	9e 87       	std	Y+14, r25	; 0x0e
     c64:	8d 87       	std	Y+13, r24	; 0x0d
	home[7] = "----------------";
     c66:	38 8b       	std	Y+16, r19	; 0x10
     c68:	2f 87       	std	Y+15, r18	; 0x0f
			
	int wanted_pos_home[] = {4, 4};
     c6a:	24 e0       	ldi	r18, 0x04	; 4
     c6c:	30 e0       	ldi	r19, 0x00	; 0
     c6e:	3a 8b       	std	Y+18, r19	; 0x12
     c70:	29 8b       	std	Y+17, r18	; 0x11
     c72:	3c 8b       	std	Y+20, r19	; 0x14
     c74:	2b 8b       	std	Y+19, r18	; 0x13
	screen_data menu;
	menu[0] = "                ";
     c76:	9e 8b       	std	Y+22, r25	; 0x16
     c78:	8d 8b       	std	Y+21, r24	; 0x15
	menu[1] = "                ";
     c7a:	98 8f       	std	Y+24, r25	; 0x18
     c7c:	8f 8b       	std	Y+23, r24	; 0x17
	menu[2] = "   Start Game   ";
     c7e:	49 ed       	ldi	r20, 0xD9	; 217
     c80:	52 e0       	ldi	r21, 0x02	; 2
     c82:	5a 8f       	std	Y+26, r21	; 0x1a
     c84:	49 8f       	std	Y+25, r20	; 0x19
	menu[3] = "                ";
     c86:	9c 8f       	std	Y+28, r25	; 0x1c
     c88:	8b 8f       	std	Y+27, r24	; 0x1b
	menu[4] = "  Back to Home  ";
     c8a:	4a ee       	ldi	r20, 0xEA	; 234
     c8c:	52 e0       	ldi	r21, 0x02	; 2
     c8e:	5e 8f       	std	Y+30, r21	; 0x1e
     c90:	4d 8f       	std	Y+29, r20	; 0x1d
	menu[5] = "                ";
     c92:	98 a3       	std	Y+32, r25	; 0x20
     c94:	8f 8f       	std	Y+31, r24	; 0x1f
	menu[6] = "                ";
     c96:	9a a3       	std	Y+34, r25	; 0x22
     c98:	89 a3       	std	Y+33, r24	; 0x21
	menu[7] = "                ";
     c9a:	9c a3       	std	Y+36, r25	; 0x24
     c9c:	8b a3       	std	Y+35, r24	; 0x23
	
	int wanted_pos_menu[] = {2, 4};
     c9e:	82 e0       	ldi	r24, 0x02	; 2
     ca0:	90 e0       	ldi	r25, 0x00	; 0
     ca2:	9e a3       	std	Y+38, r25	; 0x26
     ca4:	8d a3       	std	Y+37, r24	; 0x25
     ca6:	38 a7       	std	Y+40, r19	; 0x28
     ca8:	2f a3       	std	Y+39, r18	; 0x27



void OLED_run(signedPos offset) {
	OLED_clear();
	SCREEN_GUI gui = HOME;
     caa:	10 e0       	ldi	r17, 0x00	; 0
     cac:	01 c0       	rjmp	.+2      	; 0xcb0 <OLED_run+0x92>
			
			
			int pos = OLED_menu(offset, menu, wanted_pos_menu);
			printf("%d", pos);
			if(pos == 4) {
				gui = HOME;
     cae:	10 e0       	ldi	r17, 0x00	; 0
	menu[7] = "                ";
	
	int wanted_pos_menu[] = {2, 4};
	while (1) {
		
		if (gui == HOME)
     cb0:	11 11       	cpse	r17, r1
     cb2:	1c c0       	rjmp	.+56     	; 0xcec <OLED_run+0xce>
		{	
			
			
			int pos = OLED_menu(offset, home, wanted_pos_home);
     cb4:	9e 01       	movw	r18, r28
     cb6:	2f 5e       	subi	r18, 0xEF	; 239
     cb8:	3f 4f       	sbci	r19, 0xFF	; 255
     cba:	ae 01       	movw	r20, r28
     cbc:	4f 5f       	subi	r20, 0xFF	; 255
     cbe:	5f 4f       	sbci	r21, 0xFF	; 255
     cc0:	c5 01       	movw	r24, r10
     cc2:	b4 01       	movw	r22, r8
     cc4:	0e 94 3d 05 	call	0xa7a	; 0xa7a <OLED_menu>
     cc8:	7c 01       	movw	r14, r24
			printf("%d", pos);
     cca:	ff 92       	push	r15
     ccc:	8f 93       	push	r24
     cce:	80 e5       	ldi	r24, 0x50	; 80
     cd0:	93 e0       	ldi	r25, 0x03	; 3
     cd2:	9f 93       	push	r25
     cd4:	8f 93       	push	r24
     cd6:	0e 94 3b 0b 	call	0x1676	; 0x1676 <printf>
			if(pos == 4) {
     cda:	0f 90       	pop	r0
     cdc:	0f 90       	pop	r0
     cde:	0f 90       	pop	r0
     ce0:	0f 90       	pop	r0
     ce2:	84 e0       	ldi	r24, 0x04	; 4
     ce4:	e8 16       	cp	r14, r24
     ce6:	f1 04       	cpc	r15, r1
     ce8:	09 f4       	brne	.+2      	; 0xcec <OLED_run+0xce>
				gui = MENU;
     cea:	11 e0       	ldi	r17, 0x01	; 1
			}
			//gui = OLED_home(offset, wanted_pos);  //including while loop returning new condition			
		}
		
		printf("%d", gui);
     cec:	1f 92       	push	r1
     cee:	1f 93       	push	r17
     cf0:	80 e5       	ldi	r24, 0x50	; 80
     cf2:	93 e0       	ldi	r25, 0x03	; 3
     cf4:	9f 93       	push	r25
     cf6:	8f 93       	push	r24
     cf8:	0e 94 3b 0b 	call	0x1676	; 0x1676 <printf>
		
		if (gui == MENU)
     cfc:	0f 90       	pop	r0
     cfe:	0f 90       	pop	r0
     d00:	0f 90       	pop	r0
     d02:	0f 90       	pop	r0
     d04:	11 30       	cpi	r17, 0x01	; 1
     d06:	a1 f6       	brne	.-88     	; 0xcb0 <OLED_run+0x92>
		{	
			
			
			int pos = OLED_menu(offset, menu, wanted_pos_menu);
     d08:	9e 01       	movw	r18, r28
     d0a:	2b 5d       	subi	r18, 0xDB	; 219
     d0c:	3f 4f       	sbci	r19, 0xFF	; 255
     d0e:	ae 01       	movw	r20, r28
     d10:	4b 5e       	subi	r20, 0xEB	; 235
     d12:	5f 4f       	sbci	r21, 0xFF	; 255
     d14:	c5 01       	movw	r24, r10
     d16:	b4 01       	movw	r22, r8
     d18:	0e 94 3d 05 	call	0xa7a	; 0xa7a <OLED_menu>
     d1c:	7c 01       	movw	r14, r24
			printf("%d", pos);
     d1e:	ff 92       	push	r15
     d20:	8f 93       	push	r24
     d22:	80 e5       	ldi	r24, 0x50	; 80
     d24:	93 e0       	ldi	r25, 0x03	; 3
     d26:	9f 93       	push	r25
     d28:	8f 93       	push	r24
     d2a:	0e 94 3b 0b 	call	0x1676	; 0x1676 <printf>
			if(pos == 4) {
     d2e:	0f 90       	pop	r0
     d30:	0f 90       	pop	r0
     d32:	0f 90       	pop	r0
     d34:	0f 90       	pop	r0
     d36:	84 e0       	ldi	r24, 0x04	; 4
     d38:	e8 16       	cp	r14, r24
     d3a:	f1 04       	cpc	r15, r1
     d3c:	09 f0       	breq	.+2      	; 0xd40 <OLED_run+0x122>
     d3e:	b8 cf       	rjmp	.-144    	; 0xcb0 <OLED_run+0x92>
     d40:	b6 cf       	rjmp	.-148    	; 0xcae <OLED_run+0x90>

00000d42 <SPI_MasterInit>:

void SPI_MasterInit(void)
{
	/* Set MOSI and SCK output, all others input */
	//DDR_SPI = (1<<DD_MOSI)|(1<<DD_SCK);
	DDRB |= (1 << DDB4) | (1 << DDB5) | (1 << DDB7); //(1<<DDB5)|(1<<DDB7);
     d42:	87 b3       	in	r24, 0x17	; 23
     d44:	80 6b       	ori	r24, 0xB0	; 176
     d46:	87 bb       	out	0x17, r24	; 23
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR |= (1<<SPE)|(1<<MSTR)|(1<<SPR0); //|(1<<CPOL);
     d48:	8d b1       	in	r24, 0x0d	; 13
     d4a:	81 65       	ori	r24, 0x51	; 81
     d4c:	8d b9       	out	0x0d, r24	; 13
	PORTB |= 1 << PB4;
     d4e:	88 b3       	in	r24, 0x18	; 24
     d50:	80 61       	ori	r24, 0x10	; 16
     d52:	88 bb       	out	0x18, r24	; 24
     d54:	08 95       	ret

00000d56 <SPI_MasterTransmit>:
}
void SPI_MasterTransmit(char cData)
{	
	//PORTB &= ~(1 << PB4);
	/* Start transmission */
	SPDR = cData;
     d56:	8f b9       	out	0x0f, r24	; 15
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)));
     d58:	77 9b       	sbis	0x0e, 7	; 14
     d5a:	fe cf       	rjmp	.-4      	; 0xd58 <SPI_MasterTransmit+0x2>
	//PORTB |= 1 << PB4;
}
     d5c:	08 95       	ret

00000d5e <SPI_MasterWrite>:

void SPI_MasterWrite(char cData) {
	SPI_MasterTransmit(cData);
     d5e:	0e 94 ab 06 	call	0xd56	; 0xd56 <SPI_MasterTransmit>
     d62:	08 95       	ret

00000d64 <SPI_MasterRead>:
}
uint8_t SPI_MasterRead() {
	SPI_MasterTransmit(0b00000000);  //send dummy bits
     d64:	80 e0       	ldi	r24, 0x00	; 0
     d66:	0e 94 ab 06 	call	0xd56	; 0xd56 <SPI_MasterTransmit>
	return SPDR;
     d6a:	8f b1       	in	r24, 0x0f	; 15
}
     d6c:	08 95       	ret

00000d6e <USART_Init>:
#include <avr/io.h>


void USART_Init(unsigned int ubrr) { //For uart0
	//set baud rate
	UBRR0H = (unsigned char)(ubrr>>8);
     d6e:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
     d70:	89 b9       	out	0x09, r24	; 9
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     d72:	88 e1       	ldi	r24, 0x18	; 24
     d74:	8a b9       	out	0x0a, r24	; 10
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<URSEL0)|(0<<USBS0)|(3<<UCSZ00);
     d76:	86 e8       	ldi	r24, 0x86	; 134
     d78:	80 bd       	out	0x20, r24	; 32
     d7a:	08 95       	ret

00000d7c <USART_Transmit>:
}

void USART_Transmit(unsigned char data)
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) );
     d7c:	5d 9b       	sbis	0x0b, 5	; 11
     d7e:	fe cf       	rjmp	.-4      	; 0xd7c <USART_Transmit>
	/* Put data into buffer, sends the data */
	UDR0 = data;
     d80:	8c b9       	out	0x0c, r24	; 12
     d82:	08 95       	ret

00000d84 <uart_putchar>:
	/* Get and return received data from buffer */
	return UDR0;
}
//Maybe implement if else to return only the thing in the register

int uart_putchar(char c, FILE *stream) {
     d84:	cf 93       	push	r28
     d86:	c8 2f       	mov	r28, r24
	if (c == '\n') {
     d88:	8a 30       	cpi	r24, 0x0A	; 10
     d8a:	19 f4       	brne	.+6      	; 0xd92 <uart_putchar+0xe>
		USART_Transmit('\r');  // Send carriage return before newline
     d8c:	8d e0       	ldi	r24, 0x0D	; 13
     d8e:	0e 94 be 06 	call	0xd7c	; 0xd7c <USART_Transmit>
	}
	USART_Transmit(c);
     d92:	8c 2f       	mov	r24, r28
     d94:	0e 94 be 06 	call	0xd7c	; 0xd7c <USART_Transmit>
	return 0;
}
     d98:	80 e0       	ldi	r24, 0x00	; 0
     d9a:	90 e0       	ldi	r25, 0x00	; 0
     d9c:	cf 91       	pop	r28
     d9e:	08 95       	ret

00000da0 <USART_Receive>:
}

unsigned char USART_Receive(void)
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) );
     da0:	5f 9b       	sbis	0x0b, 7	; 11
     da2:	fe cf       	rjmp	.-4      	; 0xda0 <USART_Receive>
	/* Get and return received data from buffer */
	return UDR0;
     da4:	8c b1       	in	r24, 0x0c	; 12
}
     da6:	08 95       	ret

00000da8 <uart_getchar>:
	return 0;
}

// Custom receive function (optional, for scanf or similar)
int uart_getchar(FILE *stream) {
	return USART_Receive();
     da8:	0e 94 d0 06 	call	0xda0	; 0xda0 <USART_Receive>
}
     dac:	90 e0       	ldi	r25, 0x00	; 0
     dae:	08 95       	ret

00000db0 <printf_init>:

void printf_init() {
	fdevopen(uart_putchar, uart_getchar); //kan trenge referanse til funksjonen
     db0:	64 ed       	ldi	r22, 0xD4	; 212
     db2:	76 e0       	ldi	r23, 0x06	; 6
     db4:	82 ec       	ldi	r24, 0xC2	; 194
     db6:	96 e0       	ldi	r25, 0x06	; 6
     db8:	0e 94 f0 0a 	call	0x15e0	; 0x15e0 <fdevopen>
     dbc:	08 95       	ret

00000dbe <xmem_init>:
sliderPos get_slider_pos(joystickAndSliderPos pos) {  //returns in percent
	sliderPos S;
	S.R = (int16_t) (((double) (pos.R_slider)) / 255 * 100.0);
	S.L = (int16_t) (((double) (pos.L_slider)) / 255 * 100.0);
	return S;
}
     dbe:	85 b7       	in	r24, 0x35	; 53
     dc0:	80 68       	ori	r24, 0x80	; 128
     dc2:	85 bf       	out	0x35, r24	; 53
     dc4:	80 b7       	in	r24, 0x30	; 48
     dc6:	87 7e       	andi	r24, 0xE7	; 231
     dc8:	80 bf       	out	0x30, r24	; 48
     dca:	80 b7       	in	r24, 0x30	; 48
     dcc:	80 62       	ori	r24, 0x20	; 32
     dce:	80 bf       	out	0x30, r24	; 48
     dd0:	80 e1       	ldi	r24, 0x10	; 16
     dd2:	81 bb       	out	0x11, r24	; 17
     dd4:	eb e8       	ldi	r30, 0x8B	; 139
     dd6:	f0 e0       	ldi	r31, 0x00	; 0
     dd8:	80 81       	ld	r24, Z
     dda:	81 68       	ori	r24, 0x81	; 129
     ddc:	80 83       	st	Z, r24
     dde:	ea e8       	ldi	r30, 0x8A	; 138
     de0:	f0 e0       	ldi	r31, 0x00	; 0
     de2:	80 81       	ld	r24, Z
     de4:	89 60       	ori	r24, 0x09	; 9
     de6:	80 83       	st	Z, r24
     de8:	87 b3       	in	r24, 0x17	; 23
     dea:	87 bb       	out	0x17, r24	; 23
     dec:	88 b3       	in	r24, 0x18	; 24
     dee:	82 60       	ori	r24, 0x02	; 2
     df0:	88 bb       	out	0x18, r24	; 24
     df2:	08 95       	ret

00000df4 <xmem_write>:
     df4:	fb 01       	movw	r30, r22
     df6:	f0 5f       	subi	r31, 0xF0	; 240
     df8:	80 83       	st	Z, r24
     dfa:	08 95       	ret

00000dfc <xmem_read>:
     dfc:	90 5f       	subi	r25, 0xF0	; 240
     dfe:	fc 01       	movw	r30, r24
     e00:	80 81       	ld	r24, Z
     e02:	08 95       	ret

00000e04 <get_board_data>:
     e04:	cf 93       	push	r28
     e06:	df 93       	push	r29
     e08:	cd b7       	in	r28, 0x3d	; 61
     e0a:	de b7       	in	r29, 0x3e	; 62
     e0c:	60 97       	sbiw	r28, 0x10	; 16
     e0e:	0f b6       	in	r0, 0x3f	; 63
     e10:	f8 94       	cli
     e12:	de bf       	out	0x3e, r29	; 62
     e14:	0f be       	out	0x3f, r0	; 63
     e16:	cd bf       	out	0x3d, r28	; 61
     e18:	60 e0       	ldi	r22, 0x00	; 0
     e1a:	74 e0       	ldi	r23, 0x04	; 4
     e1c:	81 e0       	ldi	r24, 0x01	; 1
     e1e:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <xmem_write>
     e22:	80 e0       	ldi	r24, 0x00	; 0
     e24:	94 e0       	ldi	r25, 0x04	; 4
     e26:	0e 94 fe 06 	call	0xdfc	; 0xdfc <xmem_read>
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	9e 87       	std	Y+14, r25	; 0x0e
     e2e:	8d 87       	std	Y+13, r24	; 0x0d
     e30:	80 e0       	ldi	r24, 0x00	; 0
     e32:	94 e0       	ldi	r25, 0x04	; 4
     e34:	0e 94 fe 06 	call	0xdfc	; 0xdfc <xmem_read>
     e38:	90 e0       	ldi	r25, 0x00	; 0
     e3a:	9c 87       	std	Y+12, r25	; 0x0c
     e3c:	8b 87       	std	Y+11, r24	; 0x0b
     e3e:	80 e0       	ldi	r24, 0x00	; 0
     e40:	94 e0       	ldi	r25, 0x04	; 4
     e42:	0e 94 fe 06 	call	0xdfc	; 0xdfc <xmem_read>
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	9a 87       	std	Y+10, r25	; 0x0a
     e4a:	89 87       	std	Y+9, r24	; 0x09
     e4c:	80 e0       	ldi	r24, 0x00	; 0
     e4e:	94 e0       	ldi	r25, 0x04	; 4
     e50:	0e 94 fe 06 	call	0xdfc	; 0xdfc <xmem_read>
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	98 8b       	std	Y+16, r25	; 0x10
     e58:	8f 87       	std	Y+15, r24	; 0x0f
     e5a:	88 e0       	ldi	r24, 0x08	; 8
     e5c:	fe 01       	movw	r30, r28
     e5e:	39 96       	adiw	r30, 0x09	; 9
     e60:	de 01       	movw	r26, r28
     e62:	11 96       	adiw	r26, 0x01	; 1
     e64:	01 90       	ld	r0, Z+
     e66:	0d 92       	st	X+, r0
     e68:	8a 95       	dec	r24
     e6a:	e1 f7       	brne	.-8      	; 0xe64 <get_board_data+0x60>
     e6c:	29 81       	ldd	r18, Y+1	; 0x01
     e6e:	3a 81       	ldd	r19, Y+2	; 0x02
     e70:	4b 81       	ldd	r20, Y+3	; 0x03
     e72:	5c 81       	ldd	r21, Y+4	; 0x04
     e74:	6d 81       	ldd	r22, Y+5	; 0x05
     e76:	7e 81       	ldd	r23, Y+6	; 0x06
     e78:	8f 81       	ldd	r24, Y+7	; 0x07
     e7a:	98 85       	ldd	r25, Y+8	; 0x08
     e7c:	60 96       	adiw	r28, 0x10	; 16
     e7e:	0f b6       	in	r0, 0x3f	; 63
     e80:	f8 94       	cli
     e82:	de bf       	out	0x3e, r29	; 62
     e84:	0f be       	out	0x3f, r0	; 63
     e86:	cd bf       	out	0x3d, r28	; 61
     e88:	df 91       	pop	r29
     e8a:	cf 91       	pop	r28
     e8c:	08 95       	ret

00000e8e <get_stick_offset>:
     e8e:	cf 93       	push	r28
     e90:	df 93       	push	r29
     e92:	cd b7       	in	r28, 0x3d	; 61
     e94:	de b7       	in	r29, 0x3e	; 62
     e96:	28 97       	sbiw	r28, 0x08	; 8
     e98:	0f b6       	in	r0, 0x3f	; 63
     e9a:	f8 94       	cli
     e9c:	de bf       	out	0x3e, r29	; 62
     e9e:	0f be       	out	0x3f, r0	; 63
     ea0:	cd bf       	out	0x3d, r28	; 61
     ea2:	80 e0       	ldi	r24, 0x00	; 0
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	dc 01       	movw	r26, r24
     ea8:	03 c0       	rjmp	.+6      	; 0xeb0 <get_stick_offset+0x22>
     eaa:	01 96       	adiw	r24, 0x01	; 1
     eac:	a1 1d       	adc	r26, r1
     eae:	b1 1d       	adc	r27, r1
     eb0:	80 3a       	cpi	r24, 0xA0	; 160
     eb2:	26 e8       	ldi	r18, 0x86	; 134
     eb4:	92 07       	cpc	r25, r18
     eb6:	21 e0       	ldi	r18, 0x01	; 1
     eb8:	a2 07       	cpc	r26, r18
     eba:	b1 05       	cpc	r27, r1
     ebc:	b0 f3       	brcs	.-20     	; 0xeaa <get_stick_offset+0x1c>
     ebe:	0e 94 02 07 	call	0xe04	; 0xe04 <get_board_data>
     ec2:	29 83       	std	Y+1, r18	; 0x01
     ec4:	3a 83       	std	Y+2, r19	; 0x02
     ec6:	4b 83       	std	Y+3, r20	; 0x03
     ec8:	5c 83       	std	Y+4, r21	; 0x04
     eca:	6d 83       	std	Y+5, r22	; 0x05
     ecc:	7e 83       	std	Y+6, r23	; 0x06
     ece:	8f 83       	std	Y+7, r24	; 0x07
     ed0:	98 87       	std	Y+8, r25	; 0x08
     ed2:	29 81       	ldd	r18, Y+1	; 0x01
     ed4:	3a 81       	ldd	r19, Y+2	; 0x02
     ed6:	b9 01       	movw	r22, r18
     ed8:	60 58       	subi	r22, 0x80	; 128
     eda:	71 09       	sbc	r23, r1
     edc:	2b 81       	ldd	r18, Y+3	; 0x03
     ede:	3c 81       	ldd	r19, Y+4	; 0x04
     ee0:	c9 01       	movw	r24, r18
     ee2:	80 58       	subi	r24, 0x80	; 128
     ee4:	91 09       	sbc	r25, r1
     ee6:	28 96       	adiw	r28, 0x08	; 8
     ee8:	0f b6       	in	r0, 0x3f	; 63
     eea:	f8 94       	cli
     eec:	de bf       	out	0x3e, r29	; 62
     eee:	0f be       	out	0x3f, r0	; 63
     ef0:	cd bf       	out	0x3d, r28	; 61
     ef2:	df 91       	pop	r29
     ef4:	cf 91       	pop	r28
     ef6:	08 95       	ret

00000ef8 <get_percent_pos>:
     ef8:	4f 92       	push	r4
     efa:	5f 92       	push	r5
     efc:	6f 92       	push	r6
     efe:	7f 92       	push	r7
     f00:	8f 92       	push	r8
     f02:	9f 92       	push	r9
     f04:	af 92       	push	r10
     f06:	bf 92       	push	r11
     f08:	cf 92       	push	r12
     f0a:	df 92       	push	r13
     f0c:	ef 92       	push	r14
     f0e:	ff 92       	push	r15
     f10:	0f 93       	push	r16
     f12:	1f 93       	push	r17
     f14:	cf 93       	push	r28
     f16:	df 93       	push	r29
     f18:	cd b7       	in	r28, 0x3d	; 61
     f1a:	de b7       	in	r29, 0x3e	; 62
     f1c:	28 97       	sbiw	r28, 0x08	; 8
     f1e:	0f b6       	in	r0, 0x3f	; 63
     f20:	f8 94       	cli
     f22:	de bf       	out	0x3e, r29	; 62
     f24:	0f be       	out	0x3f, r0	; 63
     f26:	cd bf       	out	0x3d, r28	; 61
     f28:	29 83       	std	Y+1, r18	; 0x01
     f2a:	3a 83       	std	Y+2, r19	; 0x02
     f2c:	4b 83       	std	Y+3, r20	; 0x03
     f2e:	5c 83       	std	Y+4, r21	; 0x04
     f30:	6d 83       	std	Y+5, r22	; 0x05
     f32:	7e 83       	std	Y+6, r23	; 0x06
     f34:	8f 83       	std	Y+7, r24	; 0x07
     f36:	98 87       	std	Y+8, r25	; 0x08
     f38:	67 01       	movw	r12, r14
     f3a:	78 01       	movw	r14, r16
     f3c:	29 81       	ldd	r18, Y+1	; 0x01
     f3e:	3a 81       	ldd	r19, Y+2	; 0x02
     f40:	c6 01       	movw	r24, r12
     f42:	80 58       	subi	r24, 0x80	; 128
     f44:	9f 4f       	sbci	r25, 0xFF	; 255
     f46:	82 17       	cp	r24, r18
     f48:	93 07       	cpc	r25, r19
     f4a:	44 f5       	brge	.+80     	; 0xf9c <get_percent_pos+0xa4>
     f4c:	69 81       	ldd	r22, Y+1	; 0x01
     f4e:	7a 81       	ldd	r23, Y+2	; 0x02
     f50:	6c 19       	sub	r22, r12
     f52:	7d 09       	sbc	r23, r13
     f54:	60 58       	subi	r22, 0x80	; 128
     f56:	71 09       	sbc	r23, r1
     f58:	07 2e       	mov	r0, r23
     f5a:	00 0c       	add	r0, r0
     f5c:	88 0b       	sbc	r24, r24
     f5e:	99 0b       	sbc	r25, r25
     f60:	0e 94 9b 09 	call	0x1336	; 0x1336 <__floatsisf>
     f64:	4b 01       	movw	r8, r22
     f66:	5c 01       	movw	r10, r24
     f68:	60 e8       	ldi	r22, 0x80	; 128
     f6a:	70 e0       	ldi	r23, 0x00	; 0
     f6c:	6c 19       	sub	r22, r12
     f6e:	7d 09       	sbc	r23, r13
     f70:	07 2e       	mov	r0, r23
     f72:	00 0c       	add	r0, r0
     f74:	88 0b       	sbc	r24, r24
     f76:	99 0b       	sbc	r25, r25
     f78:	0e 94 9b 09 	call	0x1336	; 0x1336 <__floatsisf>
     f7c:	9b 01       	movw	r18, r22
     f7e:	ac 01       	movw	r20, r24
     f80:	c5 01       	movw	r24, r10
     f82:	b4 01       	movw	r22, r8
     f84:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <__divsf3>
     f88:	20 e0       	ldi	r18, 0x00	; 0
     f8a:	30 e0       	ldi	r19, 0x00	; 0
     f8c:	48 ec       	ldi	r20, 0xC8	; 200
     f8e:	52 e4       	ldi	r21, 0x42	; 66
     f90:	0e 94 27 0a 	call	0x144e	; 0x144e <__mulsf3>
     f94:	0e 94 63 09 	call	0x12c6	; 0x12c6 <__fixsfsi>
     f98:	4b 01       	movw	r8, r22
     f9a:	26 c0       	rjmp	.+76     	; 0xfe8 <get_percent_pos+0xf0>
     f9c:	69 81       	ldd	r22, Y+1	; 0x01
     f9e:	7a 81       	ldd	r23, Y+2	; 0x02
     fa0:	6c 19       	sub	r22, r12
     fa2:	7d 09       	sbc	r23, r13
     fa4:	60 58       	subi	r22, 0x80	; 128
     fa6:	71 09       	sbc	r23, r1
     fa8:	07 2e       	mov	r0, r23
     faa:	00 0c       	add	r0, r0
     fac:	88 0b       	sbc	r24, r24
     fae:	99 0b       	sbc	r25, r25
     fb0:	0e 94 9b 09 	call	0x1336	; 0x1336 <__floatsisf>
     fb4:	4b 01       	movw	r8, r22
     fb6:	5c 01       	movw	r10, r24
     fb8:	b6 01       	movw	r22, r12
     fba:	60 58       	subi	r22, 0x80	; 128
     fbc:	7f 4f       	sbci	r23, 0xFF	; 255
     fbe:	07 2e       	mov	r0, r23
     fc0:	00 0c       	add	r0, r0
     fc2:	88 0b       	sbc	r24, r24
     fc4:	99 0b       	sbc	r25, r25
     fc6:	0e 94 9b 09 	call	0x1336	; 0x1336 <__floatsisf>
     fca:	9b 01       	movw	r18, r22
     fcc:	ac 01       	movw	r20, r24
     fce:	c5 01       	movw	r24, r10
     fd0:	b4 01       	movw	r22, r8
     fd2:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <__divsf3>
     fd6:	20 e0       	ldi	r18, 0x00	; 0
     fd8:	30 e0       	ldi	r19, 0x00	; 0
     fda:	48 ec       	ldi	r20, 0xC8	; 200
     fdc:	52 e4       	ldi	r21, 0x42	; 66
     fde:	0e 94 27 0a 	call	0x144e	; 0x144e <__mulsf3>
     fe2:	0e 94 63 09 	call	0x12c6	; 0x12c6 <__fixsfsi>
     fe6:	4b 01       	movw	r8, r22
     fe8:	2b 81       	ldd	r18, Y+3	; 0x03
     fea:	3c 81       	ldd	r19, Y+4	; 0x04
     fec:	c7 01       	movw	r24, r14
     fee:	80 58       	subi	r24, 0x80	; 128
     ff0:	9f 4f       	sbci	r25, 0xFF	; 255
     ff2:	82 17       	cp	r24, r18
     ff4:	93 07       	cpc	r25, r19
     ff6:	44 f5       	brge	.+80     	; 0x1048 <get_percent_pos+0x150>
     ff8:	6b 81       	ldd	r22, Y+3	; 0x03
     ffa:	7c 81       	ldd	r23, Y+4	; 0x04
     ffc:	6e 19       	sub	r22, r14
     ffe:	7f 09       	sbc	r23, r15
    1000:	60 58       	subi	r22, 0x80	; 128
    1002:	71 09       	sbc	r23, r1
    1004:	07 2e       	mov	r0, r23
    1006:	00 0c       	add	r0, r0
    1008:	88 0b       	sbc	r24, r24
    100a:	99 0b       	sbc	r25, r25
    100c:	0e 94 9b 09 	call	0x1336	; 0x1336 <__floatsisf>
    1010:	2b 01       	movw	r4, r22
    1012:	3c 01       	movw	r6, r24
    1014:	60 e8       	ldi	r22, 0x80	; 128
    1016:	70 e0       	ldi	r23, 0x00	; 0
    1018:	6e 19       	sub	r22, r14
    101a:	7f 09       	sbc	r23, r15
    101c:	07 2e       	mov	r0, r23
    101e:	00 0c       	add	r0, r0
    1020:	88 0b       	sbc	r24, r24
    1022:	99 0b       	sbc	r25, r25
    1024:	0e 94 9b 09 	call	0x1336	; 0x1336 <__floatsisf>
    1028:	9b 01       	movw	r18, r22
    102a:	ac 01       	movw	r20, r24
    102c:	c3 01       	movw	r24, r6
    102e:	b2 01       	movw	r22, r4
    1030:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <__divsf3>
    1034:	20 e0       	ldi	r18, 0x00	; 0
    1036:	30 e0       	ldi	r19, 0x00	; 0
    1038:	48 ec       	ldi	r20, 0xC8	; 200
    103a:	52 e4       	ldi	r21, 0x42	; 66
    103c:	0e 94 27 0a 	call	0x144e	; 0x144e <__mulsf3>
    1040:	0e 94 63 09 	call	0x12c6	; 0x12c6 <__fixsfsi>
    1044:	5b 01       	movw	r10, r22
    1046:	26 c0       	rjmp	.+76     	; 0x1094 <get_percent_pos+0x19c>
    1048:	6b 81       	ldd	r22, Y+3	; 0x03
    104a:	7c 81       	ldd	r23, Y+4	; 0x04
    104c:	6e 19       	sub	r22, r14
    104e:	7f 09       	sbc	r23, r15
    1050:	60 58       	subi	r22, 0x80	; 128
    1052:	71 09       	sbc	r23, r1
    1054:	07 2e       	mov	r0, r23
    1056:	00 0c       	add	r0, r0
    1058:	88 0b       	sbc	r24, r24
    105a:	99 0b       	sbc	r25, r25
    105c:	0e 94 9b 09 	call	0x1336	; 0x1336 <__floatsisf>
    1060:	2b 01       	movw	r4, r22
    1062:	3c 01       	movw	r6, r24
    1064:	b7 01       	movw	r22, r14
    1066:	60 58       	subi	r22, 0x80	; 128
    1068:	7f 4f       	sbci	r23, 0xFF	; 255
    106a:	07 2e       	mov	r0, r23
    106c:	00 0c       	add	r0, r0
    106e:	88 0b       	sbc	r24, r24
    1070:	99 0b       	sbc	r25, r25
    1072:	0e 94 9b 09 	call	0x1336	; 0x1336 <__floatsisf>
    1076:	9b 01       	movw	r18, r22
    1078:	ac 01       	movw	r20, r24
    107a:	c3 01       	movw	r24, r6
    107c:	b2 01       	movw	r22, r4
    107e:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <__divsf3>
    1082:	20 e0       	ldi	r18, 0x00	; 0
    1084:	30 e0       	ldi	r19, 0x00	; 0
    1086:	48 ec       	ldi	r20, 0xC8	; 200
    1088:	52 e4       	ldi	r21, 0x42	; 66
    108a:	0e 94 27 0a 	call	0x144e	; 0x144e <__mulsf3>
    108e:	0e 94 63 09 	call	0x12c6	; 0x12c6 <__fixsfsi>
    1092:	5b 01       	movw	r10, r22
    1094:	c5 01       	movw	r24, r10
    1096:	b4 01       	movw	r22, r8
    1098:	28 96       	adiw	r28, 0x08	; 8
    109a:	0f b6       	in	r0, 0x3f	; 63
    109c:	f8 94       	cli
    109e:	de bf       	out	0x3e, r29	; 62
    10a0:	0f be       	out	0x3f, r0	; 63
    10a2:	cd bf       	out	0x3d, r28	; 61
    10a4:	df 91       	pop	r29
    10a6:	cf 91       	pop	r28
    10a8:	1f 91       	pop	r17
    10aa:	0f 91       	pop	r16
    10ac:	ff 90       	pop	r15
    10ae:	ef 90       	pop	r14
    10b0:	df 90       	pop	r13
    10b2:	cf 90       	pop	r12
    10b4:	bf 90       	pop	r11
    10b6:	af 90       	pop	r10
    10b8:	9f 90       	pop	r9
    10ba:	8f 90       	pop	r8
    10bc:	7f 90       	pop	r7
    10be:	6f 90       	pop	r6
    10c0:	5f 90       	pop	r5
    10c2:	4f 90       	pop	r4
    10c4:	08 95       	ret

000010c6 <get_discrete_direction>:

JOYSTICKPOS get_discrete_direction(signedPos offset) {
    10c6:	cf 92       	push	r12
    10c8:	df 92       	push	r13
    10ca:	ef 92       	push	r14
    10cc:	ff 92       	push	r15
    10ce:	0f 93       	push	r16
    10d0:	1f 93       	push	r17
    10d2:	cf 93       	push	r28
    10d4:	df 93       	push	r29
    10d6:	cd b7       	in	r28, 0x3d	; 61
    10d8:	de b7       	in	r29, 0x3e	; 62
    10da:	28 97       	sbiw	r28, 0x08	; 8
    10dc:	0f b6       	in	r0, 0x3f	; 63
    10de:	f8 94       	cli
    10e0:	de bf       	out	0x3e, r29	; 62
    10e2:	0f be       	out	0x3f, r0	; 63
    10e4:	cd bf       	out	0x3d, r28	; 61
    10e6:	6b 01       	movw	r12, r22
    10e8:	7c 01       	movw	r14, r24
	signedPos percent = get_percent_pos(get_board_data(), offset);
    10ea:	0e 94 02 07 	call	0xe04	; 0xe04 <get_board_data>
    10ee:	87 01       	movw	r16, r14
    10f0:	76 01       	movw	r14, r12
    10f2:	0e 94 7c 07 	call	0xef8	; 0xef8 <get_percent_pos>
	if (percent.X > -80 && percent.X < 80 && percent.Y > -80 && percent.Y < 80) {  //change value for sensitivity
    10f6:	61 3b       	cpi	r22, 0xB1	; 177
    10f8:	2f ef       	ldi	r18, 0xFF	; 255
    10fa:	72 07       	cpc	r23, r18
    10fc:	54 f0       	brlt	.+20     	; 0x1112 <get_discrete_direction+0x4c>
    10fe:	60 35       	cpi	r22, 0x50	; 80
    1100:	71 05       	cpc	r23, r1
    1102:	3c f4       	brge	.+14     	; 0x1112 <get_discrete_direction+0x4c>
    1104:	81 3b       	cpi	r24, 0xB1	; 177
    1106:	2f ef       	ldi	r18, 0xFF	; 255
    1108:	92 07       	cpc	r25, r18
    110a:	1c f0       	brlt	.+6      	; 0x1112 <get_discrete_direction+0x4c>
    110c:	80 35       	cpi	r24, 0x50	; 80
    110e:	91 05       	cpc	r25, r1
    1110:	cc f0       	brlt	.+50     	; 0x1144 <get_discrete_direction+0x7e>
		return NEUTRAL;
	}
	if (abs(percent.X) > abs(percent.Y))  {
    1112:	9b 01       	movw	r18, r22
    1114:	77 23       	and	r23, r23
    1116:	24 f4       	brge	.+8      	; 0x1120 <get_discrete_direction+0x5a>
    1118:	22 27       	eor	r18, r18
    111a:	33 27       	eor	r19, r19
    111c:	26 1b       	sub	r18, r22
    111e:	37 0b       	sbc	r19, r23
    1120:	ac 01       	movw	r20, r24
    1122:	99 23       	and	r25, r25
    1124:	24 f4       	brge	.+8      	; 0x112e <get_discrete_direction+0x68>
    1126:	44 27       	eor	r20, r20
    1128:	55 27       	eor	r21, r21
    112a:	48 1b       	sub	r20, r24
    112c:	59 0b       	sbc	r21, r25
    112e:	42 17       	cp	r20, r18
    1130:	53 07       	cpc	r21, r19
    1132:	24 f4       	brge	.+8      	; 0x113c <get_discrete_direction+0x76>
		if (percent.X < 0) {
    1134:	77 23       	and	r23, r23
    1136:	44 f4       	brge	.+16     	; 0x1148 <get_discrete_direction+0x82>
			return LEFT;
    1138:	80 e0       	ldi	r24, 0x00	; 0
    113a:	09 c0       	rjmp	.+18     	; 0x114e <get_discrete_direction+0x88>
		} else {
			return RIGHT;
		}
	} else {
		if (percent.Y < 0) {
    113c:	99 23       	and	r25, r25
    113e:	34 f4       	brge	.+12     	; 0x114c <get_discrete_direction+0x86>
			return DOWN;
    1140:	83 e0       	ldi	r24, 0x03	; 3
    1142:	05 c0       	rjmp	.+10     	; 0x114e <get_discrete_direction+0x88>
}

JOYSTICKPOS get_discrete_direction(signedPos offset) {
	signedPos percent = get_percent_pos(get_board_data(), offset);
	if (percent.X > -80 && percent.X < 80 && percent.Y > -80 && percent.Y < 80) {  //change value for sensitivity
		return NEUTRAL;
    1144:	84 e0       	ldi	r24, 0x04	; 4
    1146:	03 c0       	rjmp	.+6      	; 0x114e <get_discrete_direction+0x88>
	}
	if (abs(percent.X) > abs(percent.Y))  {
		if (percent.X < 0) {
			return LEFT;
		} else {
			return RIGHT;
    1148:	81 e0       	ldi	r24, 0x01	; 1
    114a:	01 c0       	rjmp	.+2      	; 0x114e <get_discrete_direction+0x88>
		}
	} else {
		if (percent.Y < 0) {
			return DOWN;
		} else {
			return UP;
    114c:	82 e0       	ldi	r24, 0x02	; 2
		}
	}
}
    114e:	28 96       	adiw	r28, 0x08	; 8
    1150:	0f b6       	in	r0, 0x3f	; 63
    1152:	f8 94       	cli
    1154:	de bf       	out	0x3e, r29	; 62
    1156:	0f be       	out	0x3f, r0	; 63
    1158:	cd bf       	out	0x3d, r28	; 61
    115a:	df 91       	pop	r29
    115c:	cf 91       	pop	r28
    115e:	1f 91       	pop	r17
    1160:	0f 91       	pop	r16
    1162:	ff 90       	pop	r15
    1164:	ef 90       	pop	r14
    1166:	df 90       	pop	r13
    1168:	cf 90       	pop	r12
    116a:	08 95       	ret

0000116c <get_button_data>:


buttonData get_button_data() {
    116c:	cf 93       	push	r28
    116e:	df 93       	push	r29
    1170:	cd b7       	in	r28, 0x3d	; 61
    1172:	de b7       	in	r29, 0x3e	; 62
    1174:	2c 97       	sbiw	r28, 0x0c	; 12
    1176:	0f b6       	in	r0, 0x3f	; 63
    1178:	f8 94       	cli
    117a:	de bf       	out	0x3e, r29	; 62
    117c:	0f be       	out	0x3f, r0	; 63
    117e:	cd bf       	out	0x3d, r28	; 61
	int data = PINB;
    1180:	86 b3       	in	r24, 0x16	; 22
	buttonData button_data;
	button_data.joy_button = !((PINB >> 1) & 0b1);  //At pb2
    1182:	86 b3       	in	r24, 0x16	; 22
    1184:	86 95       	lsr	r24
    1186:	91 e0       	ldi	r25, 0x01	; 1
    1188:	89 27       	eor	r24, r25
    118a:	68 2f       	mov	r22, r24
    118c:	61 70       	andi	r22, 0x01	; 1
    118e:	70 e0       	ldi	r23, 0x00	; 0
    1190:	78 87       	std	Y+8, r23	; 0x08
    1192:	6f 83       	std	Y+7, r22	; 0x07
	button_data.l_button = (PINB >> 0) & 0b1;	 //At pb1
    1194:	86 b3       	in	r24, 0x16	; 22
    1196:	48 2f       	mov	r20, r24
    1198:	41 70       	andi	r20, 0x01	; 1
    119a:	50 e0       	ldi	r21, 0x00	; 0
    119c:	5a 87       	std	Y+10, r21	; 0x0a
    119e:	49 87       	std	Y+9, r20	; 0x09
	button_data.r_button = (PINB >> 2) & 0b1;	 //At pb0
    11a0:	86 b3       	in	r24, 0x16	; 22
    11a2:	82 fb       	bst	r24, 2
    11a4:	22 27       	eor	r18, r18
    11a6:	20 f9       	bld	r18, 0
    11a8:	30 e0       	ldi	r19, 0x00	; 0
    11aa:	3c 87       	std	Y+12, r19	; 0x0c
    11ac:	2b 87       	std	Y+11, r18	; 0x0b
	return button_data;
    11ae:	86 e0       	ldi	r24, 0x06	; 6
    11b0:	fe 01       	movw	r30, r28
    11b2:	37 96       	adiw	r30, 0x07	; 7
    11b4:	de 01       	movw	r26, r28
    11b6:	11 96       	adiw	r26, 0x01	; 1
    11b8:	01 90       	ld	r0, Z+
    11ba:	0d 92       	st	X+, r0
    11bc:	8a 95       	dec	r24
    11be:	e1 f7       	brne	.-8      	; 0x11b8 <get_button_data+0x4c>
    11c0:	29 81       	ldd	r18, Y+1	; 0x01
    11c2:	3a 81       	ldd	r19, Y+2	; 0x02
    11c4:	4b 81       	ldd	r20, Y+3	; 0x03
    11c6:	5c 81       	ldd	r21, Y+4	; 0x04
    11c8:	6d 81       	ldd	r22, Y+5	; 0x05
    11ca:	7e 81       	ldd	r23, Y+6	; 0x06
    11cc:	80 e0       	ldi	r24, 0x00	; 0
    11ce:	90 e0       	ldi	r25, 0x00	; 0
    11d0:	2c 96       	adiw	r28, 0x0c	; 12
    11d2:	0f b6       	in	r0, 0x3f	; 63
    11d4:	f8 94       	cli
    11d6:	de bf       	out	0x3e, r29	; 62
    11d8:	0f be       	out	0x3f, r0	; 63
    11da:	cd bf       	out	0x3d, r28	; 61
    11dc:	df 91       	pop	r29
    11de:	cf 91       	pop	r28
    11e0:	08 95       	ret

000011e2 <__divsf3>:
    11e2:	0e 94 05 09 	call	0x120a	; 0x120a <__divsf3x>
    11e6:	0c 94 ed 09 	jmp	0x13da	; 0x13da <__fp_round>
    11ea:	0e 94 e6 09 	call	0x13cc	; 0x13cc <__fp_pscB>
    11ee:	58 f0       	brcs	.+22     	; 0x1206 <__divsf3+0x24>
    11f0:	0e 94 df 09 	call	0x13be	; 0x13be <__fp_pscA>
    11f4:	40 f0       	brcs	.+16     	; 0x1206 <__divsf3+0x24>
    11f6:	29 f4       	brne	.+10     	; 0x1202 <__divsf3+0x20>
    11f8:	5f 3f       	cpi	r21, 0xFF	; 255
    11fa:	29 f0       	breq	.+10     	; 0x1206 <__divsf3+0x24>
    11fc:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__fp_inf>
    1200:	51 11       	cpse	r21, r1
    1202:	0c 94 21 0a 	jmp	0x1442	; 0x1442 <__fp_szero>
    1206:	0c 94 dc 09 	jmp	0x13b8	; 0x13b8 <__fp_nan>

0000120a <__divsf3x>:
    120a:	0e 94 fe 09 	call	0x13fc	; 0x13fc <__fp_split3>
    120e:	68 f3       	brcs	.-38     	; 0x11ea <__divsf3+0x8>

00001210 <__divsf3_pse>:
    1210:	99 23       	and	r25, r25
    1212:	b1 f3       	breq	.-20     	; 0x1200 <__divsf3+0x1e>
    1214:	55 23       	and	r21, r21
    1216:	91 f3       	breq	.-28     	; 0x11fc <__divsf3+0x1a>
    1218:	95 1b       	sub	r25, r21
    121a:	55 0b       	sbc	r21, r21
    121c:	bb 27       	eor	r27, r27
    121e:	aa 27       	eor	r26, r26
    1220:	62 17       	cp	r22, r18
    1222:	73 07       	cpc	r23, r19
    1224:	84 07       	cpc	r24, r20
    1226:	38 f0       	brcs	.+14     	; 0x1236 <__divsf3_pse+0x26>
    1228:	9f 5f       	subi	r25, 0xFF	; 255
    122a:	5f 4f       	sbci	r21, 0xFF	; 255
    122c:	22 0f       	add	r18, r18
    122e:	33 1f       	adc	r19, r19
    1230:	44 1f       	adc	r20, r20
    1232:	aa 1f       	adc	r26, r26
    1234:	a9 f3       	breq	.-22     	; 0x1220 <__divsf3_pse+0x10>
    1236:	35 d0       	rcall	.+106    	; 0x12a2 <__divsf3_pse+0x92>
    1238:	0e 2e       	mov	r0, r30
    123a:	3a f0       	brmi	.+14     	; 0x124a <__divsf3_pse+0x3a>
    123c:	e0 e8       	ldi	r30, 0x80	; 128
    123e:	32 d0       	rcall	.+100    	; 0x12a4 <__divsf3_pse+0x94>
    1240:	91 50       	subi	r25, 0x01	; 1
    1242:	50 40       	sbci	r21, 0x00	; 0
    1244:	e6 95       	lsr	r30
    1246:	00 1c       	adc	r0, r0
    1248:	ca f7       	brpl	.-14     	; 0x123c <__divsf3_pse+0x2c>
    124a:	2b d0       	rcall	.+86     	; 0x12a2 <__divsf3_pse+0x92>
    124c:	fe 2f       	mov	r31, r30
    124e:	29 d0       	rcall	.+82     	; 0x12a2 <__divsf3_pse+0x92>
    1250:	66 0f       	add	r22, r22
    1252:	77 1f       	adc	r23, r23
    1254:	88 1f       	adc	r24, r24
    1256:	bb 1f       	adc	r27, r27
    1258:	26 17       	cp	r18, r22
    125a:	37 07       	cpc	r19, r23
    125c:	48 07       	cpc	r20, r24
    125e:	ab 07       	cpc	r26, r27
    1260:	b0 e8       	ldi	r27, 0x80	; 128
    1262:	09 f0       	breq	.+2      	; 0x1266 <__divsf3_pse+0x56>
    1264:	bb 0b       	sbc	r27, r27
    1266:	80 2d       	mov	r24, r0
    1268:	bf 01       	movw	r22, r30
    126a:	ff 27       	eor	r31, r31
    126c:	93 58       	subi	r25, 0x83	; 131
    126e:	5f 4f       	sbci	r21, 0xFF	; 255
    1270:	3a f0       	brmi	.+14     	; 0x1280 <__divsf3_pse+0x70>
    1272:	9e 3f       	cpi	r25, 0xFE	; 254
    1274:	51 05       	cpc	r21, r1
    1276:	78 f0       	brcs	.+30     	; 0x1296 <__divsf3_pse+0x86>
    1278:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__fp_inf>
    127c:	0c 94 21 0a 	jmp	0x1442	; 0x1442 <__fp_szero>
    1280:	5f 3f       	cpi	r21, 0xFF	; 255
    1282:	e4 f3       	brlt	.-8      	; 0x127c <__divsf3_pse+0x6c>
    1284:	98 3e       	cpi	r25, 0xE8	; 232
    1286:	d4 f3       	brlt	.-12     	; 0x127c <__divsf3_pse+0x6c>
    1288:	86 95       	lsr	r24
    128a:	77 95       	ror	r23
    128c:	67 95       	ror	r22
    128e:	b7 95       	ror	r27
    1290:	f7 95       	ror	r31
    1292:	9f 5f       	subi	r25, 0xFF	; 255
    1294:	c9 f7       	brne	.-14     	; 0x1288 <__divsf3_pse+0x78>
    1296:	88 0f       	add	r24, r24
    1298:	91 1d       	adc	r25, r1
    129a:	96 95       	lsr	r25
    129c:	87 95       	ror	r24
    129e:	97 f9       	bld	r25, 7
    12a0:	08 95       	ret
    12a2:	e1 e0       	ldi	r30, 0x01	; 1
    12a4:	66 0f       	add	r22, r22
    12a6:	77 1f       	adc	r23, r23
    12a8:	88 1f       	adc	r24, r24
    12aa:	bb 1f       	adc	r27, r27
    12ac:	62 17       	cp	r22, r18
    12ae:	73 07       	cpc	r23, r19
    12b0:	84 07       	cpc	r24, r20
    12b2:	ba 07       	cpc	r27, r26
    12b4:	20 f0       	brcs	.+8      	; 0x12be <__divsf3_pse+0xae>
    12b6:	62 1b       	sub	r22, r18
    12b8:	73 0b       	sbc	r23, r19
    12ba:	84 0b       	sbc	r24, r20
    12bc:	ba 0b       	sbc	r27, r26
    12be:	ee 1f       	adc	r30, r30
    12c0:	88 f7       	brcc	.-30     	; 0x12a4 <__divsf3_pse+0x94>
    12c2:	e0 95       	com	r30
    12c4:	08 95       	ret

000012c6 <__fixsfsi>:
    12c6:	0e 94 6a 09 	call	0x12d4	; 0x12d4 <__fixunssfsi>
    12ca:	68 94       	set
    12cc:	b1 11       	cpse	r27, r1
    12ce:	0c 94 21 0a 	jmp	0x1442	; 0x1442 <__fp_szero>
    12d2:	08 95       	ret

000012d4 <__fixunssfsi>:
    12d4:	0e 94 06 0a 	call	0x140c	; 0x140c <__fp_splitA>
    12d8:	88 f0       	brcs	.+34     	; 0x12fc <__fixunssfsi+0x28>
    12da:	9f 57       	subi	r25, 0x7F	; 127
    12dc:	98 f0       	brcs	.+38     	; 0x1304 <__fixunssfsi+0x30>
    12de:	b9 2f       	mov	r27, r25
    12e0:	99 27       	eor	r25, r25
    12e2:	b7 51       	subi	r27, 0x17	; 23
    12e4:	b0 f0       	brcs	.+44     	; 0x1312 <__fixunssfsi+0x3e>
    12e6:	e1 f0       	breq	.+56     	; 0x1320 <__fixunssfsi+0x4c>
    12e8:	66 0f       	add	r22, r22
    12ea:	77 1f       	adc	r23, r23
    12ec:	88 1f       	adc	r24, r24
    12ee:	99 1f       	adc	r25, r25
    12f0:	1a f0       	brmi	.+6      	; 0x12f8 <__fixunssfsi+0x24>
    12f2:	ba 95       	dec	r27
    12f4:	c9 f7       	brne	.-14     	; 0x12e8 <__fixunssfsi+0x14>
    12f6:	14 c0       	rjmp	.+40     	; 0x1320 <__fixunssfsi+0x4c>
    12f8:	b1 30       	cpi	r27, 0x01	; 1
    12fa:	91 f0       	breq	.+36     	; 0x1320 <__fixunssfsi+0x4c>
    12fc:	0e 94 20 0a 	call	0x1440	; 0x1440 <__fp_zero>
    1300:	b1 e0       	ldi	r27, 0x01	; 1
    1302:	08 95       	ret
    1304:	0c 94 20 0a 	jmp	0x1440	; 0x1440 <__fp_zero>
    1308:	67 2f       	mov	r22, r23
    130a:	78 2f       	mov	r23, r24
    130c:	88 27       	eor	r24, r24
    130e:	b8 5f       	subi	r27, 0xF8	; 248
    1310:	39 f0       	breq	.+14     	; 0x1320 <__fixunssfsi+0x4c>
    1312:	b9 3f       	cpi	r27, 0xF9	; 249
    1314:	cc f3       	brlt	.-14     	; 0x1308 <__fixunssfsi+0x34>
    1316:	86 95       	lsr	r24
    1318:	77 95       	ror	r23
    131a:	67 95       	ror	r22
    131c:	b3 95       	inc	r27
    131e:	d9 f7       	brne	.-10     	; 0x1316 <__fixunssfsi+0x42>
    1320:	3e f4       	brtc	.+14     	; 0x1330 <__fixunssfsi+0x5c>
    1322:	90 95       	com	r25
    1324:	80 95       	com	r24
    1326:	70 95       	com	r23
    1328:	61 95       	neg	r22
    132a:	7f 4f       	sbci	r23, 0xFF	; 255
    132c:	8f 4f       	sbci	r24, 0xFF	; 255
    132e:	9f 4f       	sbci	r25, 0xFF	; 255
    1330:	08 95       	ret

00001332 <__floatunsisf>:
    1332:	e8 94       	clt
    1334:	09 c0       	rjmp	.+18     	; 0x1348 <__floatsisf+0x12>

00001336 <__floatsisf>:
    1336:	97 fb       	bst	r25, 7
    1338:	3e f4       	brtc	.+14     	; 0x1348 <__floatsisf+0x12>
    133a:	90 95       	com	r25
    133c:	80 95       	com	r24
    133e:	70 95       	com	r23
    1340:	61 95       	neg	r22
    1342:	7f 4f       	sbci	r23, 0xFF	; 255
    1344:	8f 4f       	sbci	r24, 0xFF	; 255
    1346:	9f 4f       	sbci	r25, 0xFF	; 255
    1348:	99 23       	and	r25, r25
    134a:	a9 f0       	breq	.+42     	; 0x1376 <__floatsisf+0x40>
    134c:	f9 2f       	mov	r31, r25
    134e:	96 e9       	ldi	r25, 0x96	; 150
    1350:	bb 27       	eor	r27, r27
    1352:	93 95       	inc	r25
    1354:	f6 95       	lsr	r31
    1356:	87 95       	ror	r24
    1358:	77 95       	ror	r23
    135a:	67 95       	ror	r22
    135c:	b7 95       	ror	r27
    135e:	f1 11       	cpse	r31, r1
    1360:	f8 cf       	rjmp	.-16     	; 0x1352 <__floatsisf+0x1c>
    1362:	fa f4       	brpl	.+62     	; 0x13a2 <__floatsisf+0x6c>
    1364:	bb 0f       	add	r27, r27
    1366:	11 f4       	brne	.+4      	; 0x136c <__floatsisf+0x36>
    1368:	60 ff       	sbrs	r22, 0
    136a:	1b c0       	rjmp	.+54     	; 0x13a2 <__floatsisf+0x6c>
    136c:	6f 5f       	subi	r22, 0xFF	; 255
    136e:	7f 4f       	sbci	r23, 0xFF	; 255
    1370:	8f 4f       	sbci	r24, 0xFF	; 255
    1372:	9f 4f       	sbci	r25, 0xFF	; 255
    1374:	16 c0       	rjmp	.+44     	; 0x13a2 <__floatsisf+0x6c>
    1376:	88 23       	and	r24, r24
    1378:	11 f0       	breq	.+4      	; 0x137e <__floatsisf+0x48>
    137a:	96 e9       	ldi	r25, 0x96	; 150
    137c:	11 c0       	rjmp	.+34     	; 0x13a0 <__floatsisf+0x6a>
    137e:	77 23       	and	r23, r23
    1380:	21 f0       	breq	.+8      	; 0x138a <__floatsisf+0x54>
    1382:	9e e8       	ldi	r25, 0x8E	; 142
    1384:	87 2f       	mov	r24, r23
    1386:	76 2f       	mov	r23, r22
    1388:	05 c0       	rjmp	.+10     	; 0x1394 <__floatsisf+0x5e>
    138a:	66 23       	and	r22, r22
    138c:	71 f0       	breq	.+28     	; 0x13aa <__floatsisf+0x74>
    138e:	96 e8       	ldi	r25, 0x86	; 134
    1390:	86 2f       	mov	r24, r22
    1392:	70 e0       	ldi	r23, 0x00	; 0
    1394:	60 e0       	ldi	r22, 0x00	; 0
    1396:	2a f0       	brmi	.+10     	; 0x13a2 <__floatsisf+0x6c>
    1398:	9a 95       	dec	r25
    139a:	66 0f       	add	r22, r22
    139c:	77 1f       	adc	r23, r23
    139e:	88 1f       	adc	r24, r24
    13a0:	da f7       	brpl	.-10     	; 0x1398 <__floatsisf+0x62>
    13a2:	88 0f       	add	r24, r24
    13a4:	96 95       	lsr	r25
    13a6:	87 95       	ror	r24
    13a8:	97 f9       	bld	r25, 7
    13aa:	08 95       	ret

000013ac <__fp_inf>:
    13ac:	97 f9       	bld	r25, 7
    13ae:	9f 67       	ori	r25, 0x7F	; 127
    13b0:	80 e8       	ldi	r24, 0x80	; 128
    13b2:	70 e0       	ldi	r23, 0x00	; 0
    13b4:	60 e0       	ldi	r22, 0x00	; 0
    13b6:	08 95       	ret

000013b8 <__fp_nan>:
    13b8:	9f ef       	ldi	r25, 0xFF	; 255
    13ba:	80 ec       	ldi	r24, 0xC0	; 192
    13bc:	08 95       	ret

000013be <__fp_pscA>:
    13be:	00 24       	eor	r0, r0
    13c0:	0a 94       	dec	r0
    13c2:	16 16       	cp	r1, r22
    13c4:	17 06       	cpc	r1, r23
    13c6:	18 06       	cpc	r1, r24
    13c8:	09 06       	cpc	r0, r25
    13ca:	08 95       	ret

000013cc <__fp_pscB>:
    13cc:	00 24       	eor	r0, r0
    13ce:	0a 94       	dec	r0
    13d0:	12 16       	cp	r1, r18
    13d2:	13 06       	cpc	r1, r19
    13d4:	14 06       	cpc	r1, r20
    13d6:	05 06       	cpc	r0, r21
    13d8:	08 95       	ret

000013da <__fp_round>:
    13da:	09 2e       	mov	r0, r25
    13dc:	03 94       	inc	r0
    13de:	00 0c       	add	r0, r0
    13e0:	11 f4       	brne	.+4      	; 0x13e6 <__fp_round+0xc>
    13e2:	88 23       	and	r24, r24
    13e4:	52 f0       	brmi	.+20     	; 0x13fa <__fp_round+0x20>
    13e6:	bb 0f       	add	r27, r27
    13e8:	40 f4       	brcc	.+16     	; 0x13fa <__fp_round+0x20>
    13ea:	bf 2b       	or	r27, r31
    13ec:	11 f4       	brne	.+4      	; 0x13f2 <__fp_round+0x18>
    13ee:	60 ff       	sbrs	r22, 0
    13f0:	04 c0       	rjmp	.+8      	; 0x13fa <__fp_round+0x20>
    13f2:	6f 5f       	subi	r22, 0xFF	; 255
    13f4:	7f 4f       	sbci	r23, 0xFF	; 255
    13f6:	8f 4f       	sbci	r24, 0xFF	; 255
    13f8:	9f 4f       	sbci	r25, 0xFF	; 255
    13fa:	08 95       	ret

000013fc <__fp_split3>:
    13fc:	57 fd       	sbrc	r21, 7
    13fe:	90 58       	subi	r25, 0x80	; 128
    1400:	44 0f       	add	r20, r20
    1402:	55 1f       	adc	r21, r21
    1404:	59 f0       	breq	.+22     	; 0x141c <__fp_splitA+0x10>
    1406:	5f 3f       	cpi	r21, 0xFF	; 255
    1408:	71 f0       	breq	.+28     	; 0x1426 <__fp_splitA+0x1a>
    140a:	47 95       	ror	r20

0000140c <__fp_splitA>:
    140c:	88 0f       	add	r24, r24
    140e:	97 fb       	bst	r25, 7
    1410:	99 1f       	adc	r25, r25
    1412:	61 f0       	breq	.+24     	; 0x142c <__fp_splitA+0x20>
    1414:	9f 3f       	cpi	r25, 0xFF	; 255
    1416:	79 f0       	breq	.+30     	; 0x1436 <__fp_splitA+0x2a>
    1418:	87 95       	ror	r24
    141a:	08 95       	ret
    141c:	12 16       	cp	r1, r18
    141e:	13 06       	cpc	r1, r19
    1420:	14 06       	cpc	r1, r20
    1422:	55 1f       	adc	r21, r21
    1424:	f2 cf       	rjmp	.-28     	; 0x140a <__fp_split3+0xe>
    1426:	46 95       	lsr	r20
    1428:	f1 df       	rcall	.-30     	; 0x140c <__fp_splitA>
    142a:	08 c0       	rjmp	.+16     	; 0x143c <__fp_splitA+0x30>
    142c:	16 16       	cp	r1, r22
    142e:	17 06       	cpc	r1, r23
    1430:	18 06       	cpc	r1, r24
    1432:	99 1f       	adc	r25, r25
    1434:	f1 cf       	rjmp	.-30     	; 0x1418 <__fp_splitA+0xc>
    1436:	86 95       	lsr	r24
    1438:	71 05       	cpc	r23, r1
    143a:	61 05       	cpc	r22, r1
    143c:	08 94       	sec
    143e:	08 95       	ret

00001440 <__fp_zero>:
    1440:	e8 94       	clt

00001442 <__fp_szero>:
    1442:	bb 27       	eor	r27, r27
    1444:	66 27       	eor	r22, r22
    1446:	77 27       	eor	r23, r23
    1448:	cb 01       	movw	r24, r22
    144a:	97 f9       	bld	r25, 7
    144c:	08 95       	ret

0000144e <__mulsf3>:
    144e:	0e 94 3a 0a 	call	0x1474	; 0x1474 <__mulsf3x>
    1452:	0c 94 ed 09 	jmp	0x13da	; 0x13da <__fp_round>
    1456:	0e 94 df 09 	call	0x13be	; 0x13be <__fp_pscA>
    145a:	38 f0       	brcs	.+14     	; 0x146a <__mulsf3+0x1c>
    145c:	0e 94 e6 09 	call	0x13cc	; 0x13cc <__fp_pscB>
    1460:	20 f0       	brcs	.+8      	; 0x146a <__mulsf3+0x1c>
    1462:	95 23       	and	r25, r21
    1464:	11 f0       	breq	.+4      	; 0x146a <__mulsf3+0x1c>
    1466:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__fp_inf>
    146a:	0c 94 dc 09 	jmp	0x13b8	; 0x13b8 <__fp_nan>
    146e:	11 24       	eor	r1, r1
    1470:	0c 94 21 0a 	jmp	0x1442	; 0x1442 <__fp_szero>

00001474 <__mulsf3x>:
    1474:	0e 94 fe 09 	call	0x13fc	; 0x13fc <__fp_split3>
    1478:	70 f3       	brcs	.-36     	; 0x1456 <__mulsf3+0x8>

0000147a <__mulsf3_pse>:
    147a:	95 9f       	mul	r25, r21
    147c:	c1 f3       	breq	.-16     	; 0x146e <__mulsf3+0x20>
    147e:	95 0f       	add	r25, r21
    1480:	50 e0       	ldi	r21, 0x00	; 0
    1482:	55 1f       	adc	r21, r21
    1484:	62 9f       	mul	r22, r18
    1486:	f0 01       	movw	r30, r0
    1488:	72 9f       	mul	r23, r18
    148a:	bb 27       	eor	r27, r27
    148c:	f0 0d       	add	r31, r0
    148e:	b1 1d       	adc	r27, r1
    1490:	63 9f       	mul	r22, r19
    1492:	aa 27       	eor	r26, r26
    1494:	f0 0d       	add	r31, r0
    1496:	b1 1d       	adc	r27, r1
    1498:	aa 1f       	adc	r26, r26
    149a:	64 9f       	mul	r22, r20
    149c:	66 27       	eor	r22, r22
    149e:	b0 0d       	add	r27, r0
    14a0:	a1 1d       	adc	r26, r1
    14a2:	66 1f       	adc	r22, r22
    14a4:	82 9f       	mul	r24, r18
    14a6:	22 27       	eor	r18, r18
    14a8:	b0 0d       	add	r27, r0
    14aa:	a1 1d       	adc	r26, r1
    14ac:	62 1f       	adc	r22, r18
    14ae:	73 9f       	mul	r23, r19
    14b0:	b0 0d       	add	r27, r0
    14b2:	a1 1d       	adc	r26, r1
    14b4:	62 1f       	adc	r22, r18
    14b6:	83 9f       	mul	r24, r19
    14b8:	a0 0d       	add	r26, r0
    14ba:	61 1d       	adc	r22, r1
    14bc:	22 1f       	adc	r18, r18
    14be:	74 9f       	mul	r23, r20
    14c0:	33 27       	eor	r19, r19
    14c2:	a0 0d       	add	r26, r0
    14c4:	61 1d       	adc	r22, r1
    14c6:	23 1f       	adc	r18, r19
    14c8:	84 9f       	mul	r24, r20
    14ca:	60 0d       	add	r22, r0
    14cc:	21 1d       	adc	r18, r1
    14ce:	82 2f       	mov	r24, r18
    14d0:	76 2f       	mov	r23, r22
    14d2:	6a 2f       	mov	r22, r26
    14d4:	11 24       	eor	r1, r1
    14d6:	9f 57       	subi	r25, 0x7F	; 127
    14d8:	50 40       	sbci	r21, 0x00	; 0
    14da:	9a f0       	brmi	.+38     	; 0x1502 <__mulsf3_pse+0x88>
    14dc:	f1 f0       	breq	.+60     	; 0x151a <__mulsf3_pse+0xa0>
    14de:	88 23       	and	r24, r24
    14e0:	4a f0       	brmi	.+18     	; 0x14f4 <__mulsf3_pse+0x7a>
    14e2:	ee 0f       	add	r30, r30
    14e4:	ff 1f       	adc	r31, r31
    14e6:	bb 1f       	adc	r27, r27
    14e8:	66 1f       	adc	r22, r22
    14ea:	77 1f       	adc	r23, r23
    14ec:	88 1f       	adc	r24, r24
    14ee:	91 50       	subi	r25, 0x01	; 1
    14f0:	50 40       	sbci	r21, 0x00	; 0
    14f2:	a9 f7       	brne	.-22     	; 0x14de <__mulsf3_pse+0x64>
    14f4:	9e 3f       	cpi	r25, 0xFE	; 254
    14f6:	51 05       	cpc	r21, r1
    14f8:	80 f0       	brcs	.+32     	; 0x151a <__mulsf3_pse+0xa0>
    14fa:	0c 94 d6 09 	jmp	0x13ac	; 0x13ac <__fp_inf>
    14fe:	0c 94 21 0a 	jmp	0x1442	; 0x1442 <__fp_szero>
    1502:	5f 3f       	cpi	r21, 0xFF	; 255
    1504:	e4 f3       	brlt	.-8      	; 0x14fe <__mulsf3_pse+0x84>
    1506:	98 3e       	cpi	r25, 0xE8	; 232
    1508:	d4 f3       	brlt	.-12     	; 0x14fe <__mulsf3_pse+0x84>
    150a:	86 95       	lsr	r24
    150c:	77 95       	ror	r23
    150e:	67 95       	ror	r22
    1510:	b7 95       	ror	r27
    1512:	f7 95       	ror	r31
    1514:	e7 95       	ror	r30
    1516:	9f 5f       	subi	r25, 0xFF	; 255
    1518:	c1 f7       	brne	.-16     	; 0x150a <__mulsf3_pse+0x90>
    151a:	fe 2b       	or	r31, r30
    151c:	88 0f       	add	r24, r24
    151e:	91 1d       	adc	r25, r1
    1520:	96 95       	lsr	r25
    1522:	87 95       	ror	r24
    1524:	97 f9       	bld	r25, 7
    1526:	08 95       	ret

00001528 <do_rand>:
    1528:	8f 92       	push	r8
    152a:	9f 92       	push	r9
    152c:	af 92       	push	r10
    152e:	bf 92       	push	r11
    1530:	cf 92       	push	r12
    1532:	df 92       	push	r13
    1534:	ef 92       	push	r14
    1536:	ff 92       	push	r15
    1538:	cf 93       	push	r28
    153a:	df 93       	push	r29
    153c:	ec 01       	movw	r28, r24
    153e:	68 81       	ld	r22, Y
    1540:	79 81       	ldd	r23, Y+1	; 0x01
    1542:	8a 81       	ldd	r24, Y+2	; 0x02
    1544:	9b 81       	ldd	r25, Y+3	; 0x03
    1546:	61 15       	cp	r22, r1
    1548:	71 05       	cpc	r23, r1
    154a:	81 05       	cpc	r24, r1
    154c:	91 05       	cpc	r25, r1
    154e:	21 f4       	brne	.+8      	; 0x1558 <do_rand+0x30>
    1550:	64 e2       	ldi	r22, 0x24	; 36
    1552:	79 ed       	ldi	r23, 0xD9	; 217
    1554:	8b e5       	ldi	r24, 0x5B	; 91
    1556:	97 e0       	ldi	r25, 0x07	; 7
    1558:	2d e1       	ldi	r18, 0x1D	; 29
    155a:	33 ef       	ldi	r19, 0xF3	; 243
    155c:	41 e0       	ldi	r20, 0x01	; 1
    155e:	50 e0       	ldi	r21, 0x00	; 0
    1560:	0e 94 56 0f 	call	0x1eac	; 0x1eac <__divmodsi4>
    1564:	49 01       	movw	r8, r18
    1566:	5a 01       	movw	r10, r20
    1568:	9b 01       	movw	r18, r22
    156a:	ac 01       	movw	r20, r24
    156c:	a7 ea       	ldi	r26, 0xA7	; 167
    156e:	b1 e4       	ldi	r27, 0x41	; 65
    1570:	0e 94 75 0f 	call	0x1eea	; 0x1eea <__muluhisi3>
    1574:	6b 01       	movw	r12, r22
    1576:	7c 01       	movw	r14, r24
    1578:	ac ee       	ldi	r26, 0xEC	; 236
    157a:	b4 ef       	ldi	r27, 0xF4	; 244
    157c:	a5 01       	movw	r20, r10
    157e:	94 01       	movw	r18, r8
    1580:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulohisi3>
    1584:	dc 01       	movw	r26, r24
    1586:	cb 01       	movw	r24, r22
    1588:	8c 0d       	add	r24, r12
    158a:	9d 1d       	adc	r25, r13
    158c:	ae 1d       	adc	r26, r14
    158e:	bf 1d       	adc	r27, r15
    1590:	b7 ff       	sbrs	r27, 7
    1592:	03 c0       	rjmp	.+6      	; 0x159a <do_rand+0x72>
    1594:	01 97       	sbiw	r24, 0x01	; 1
    1596:	a1 09       	sbc	r26, r1
    1598:	b0 48       	sbci	r27, 0x80	; 128
    159a:	88 83       	st	Y, r24
    159c:	99 83       	std	Y+1, r25	; 0x01
    159e:	aa 83       	std	Y+2, r26	; 0x02
    15a0:	bb 83       	std	Y+3, r27	; 0x03
    15a2:	9f 77       	andi	r25, 0x7F	; 127
    15a4:	df 91       	pop	r29
    15a6:	cf 91       	pop	r28
    15a8:	ff 90       	pop	r15
    15aa:	ef 90       	pop	r14
    15ac:	df 90       	pop	r13
    15ae:	cf 90       	pop	r12
    15b0:	bf 90       	pop	r11
    15b2:	af 90       	pop	r10
    15b4:	9f 90       	pop	r9
    15b6:	8f 90       	pop	r8
    15b8:	08 95       	ret

000015ba <rand_r>:
    15ba:	0e 94 94 0a 	call	0x1528	; 0x1528 <do_rand>
    15be:	08 95       	ret

000015c0 <rand>:
    15c0:	80 e0       	ldi	r24, 0x00	; 0
    15c2:	91 e0       	ldi	r25, 0x01	; 1
    15c4:	0e 94 94 0a 	call	0x1528	; 0x1528 <do_rand>
    15c8:	08 95       	ret

000015ca <srand>:
    15ca:	a0 e0       	ldi	r26, 0x00	; 0
    15cc:	b0 e0       	ldi	r27, 0x00	; 0
    15ce:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
    15d2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    15d6:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
    15da:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
    15de:	08 95       	ret

000015e0 <fdevopen>:
    15e0:	0f 93       	push	r16
    15e2:	1f 93       	push	r17
    15e4:	cf 93       	push	r28
    15e6:	df 93       	push	r29
    15e8:	00 97       	sbiw	r24, 0x00	; 0
    15ea:	31 f4       	brne	.+12     	; 0x15f8 <fdevopen+0x18>
    15ec:	61 15       	cp	r22, r1
    15ee:	71 05       	cpc	r23, r1
    15f0:	19 f4       	brne	.+6      	; 0x15f8 <fdevopen+0x18>
    15f2:	80 e0       	ldi	r24, 0x00	; 0
    15f4:	90 e0       	ldi	r25, 0x00	; 0
    15f6:	3a c0       	rjmp	.+116    	; 0x166c <fdevopen+0x8c>
    15f8:	8b 01       	movw	r16, r22
    15fa:	ec 01       	movw	r28, r24
    15fc:	6e e0       	ldi	r22, 0x0E	; 14
    15fe:	70 e0       	ldi	r23, 0x00	; 0
    1600:	81 e0       	ldi	r24, 0x01	; 1
    1602:	90 e0       	ldi	r25, 0x00	; 0
    1604:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <calloc>
    1608:	fc 01       	movw	r30, r24
    160a:	89 2b       	or	r24, r25
    160c:	91 f3       	breq	.-28     	; 0x15f2 <fdevopen+0x12>
    160e:	80 e8       	ldi	r24, 0x80	; 128
    1610:	83 83       	std	Z+3, r24	; 0x03
    1612:	01 15       	cp	r16, r1
    1614:	11 05       	cpc	r17, r1
    1616:	71 f0       	breq	.+28     	; 0x1634 <fdevopen+0x54>
    1618:	13 87       	std	Z+11, r17	; 0x0b
    161a:	02 87       	std	Z+10, r16	; 0x0a
    161c:	81 e8       	ldi	r24, 0x81	; 129
    161e:	83 83       	std	Z+3, r24	; 0x03
    1620:	80 91 54 03 	lds	r24, 0x0354	; 0x800354 <__data_end>
    1624:	90 91 55 03 	lds	r25, 0x0355	; 0x800355 <__data_end+0x1>
    1628:	89 2b       	or	r24, r25
    162a:	21 f4       	brne	.+8      	; 0x1634 <fdevopen+0x54>
    162c:	f0 93 55 03 	sts	0x0355, r31	; 0x800355 <__data_end+0x1>
    1630:	e0 93 54 03 	sts	0x0354, r30	; 0x800354 <__data_end>
    1634:	20 97       	sbiw	r28, 0x00	; 0
    1636:	c9 f0       	breq	.+50     	; 0x166a <fdevopen+0x8a>
    1638:	d1 87       	std	Z+9, r29	; 0x09
    163a:	c0 87       	std	Z+8, r28	; 0x08
    163c:	83 81       	ldd	r24, Z+3	; 0x03
    163e:	82 60       	ori	r24, 0x02	; 2
    1640:	83 83       	std	Z+3, r24	; 0x03
    1642:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <__data_end+0x2>
    1646:	90 91 57 03 	lds	r25, 0x0357	; 0x800357 <__data_end+0x3>
    164a:	89 2b       	or	r24, r25
    164c:	71 f4       	brne	.+28     	; 0x166a <fdevopen+0x8a>
    164e:	f0 93 57 03 	sts	0x0357, r31	; 0x800357 <__data_end+0x3>
    1652:	e0 93 56 03 	sts	0x0356, r30	; 0x800356 <__data_end+0x2>
    1656:	80 91 58 03 	lds	r24, 0x0358	; 0x800358 <__data_end+0x4>
    165a:	90 91 59 03 	lds	r25, 0x0359	; 0x800359 <__data_end+0x5>
    165e:	89 2b       	or	r24, r25
    1660:	21 f4       	brne	.+8      	; 0x166a <fdevopen+0x8a>
    1662:	f0 93 59 03 	sts	0x0359, r31	; 0x800359 <__data_end+0x5>
    1666:	e0 93 58 03 	sts	0x0358, r30	; 0x800358 <__data_end+0x4>
    166a:	cf 01       	movw	r24, r30
    166c:	df 91       	pop	r29
    166e:	cf 91       	pop	r28
    1670:	1f 91       	pop	r17
    1672:	0f 91       	pop	r16
    1674:	08 95       	ret

00001676 <printf>:
    1676:	a0 e0       	ldi	r26, 0x00	; 0
    1678:	b0 e0       	ldi	r27, 0x00	; 0
    167a:	e1 e4       	ldi	r30, 0x41	; 65
    167c:	fb e0       	ldi	r31, 0x0B	; 11
    167e:	0c 94 98 0f 	jmp	0x1f30	; 0x1f30 <__prologue_saves__+0x20>
    1682:	ae 01       	movw	r20, r28
    1684:	4b 5f       	subi	r20, 0xFB	; 251
    1686:	5f 4f       	sbci	r21, 0xFF	; 255
    1688:	fa 01       	movw	r30, r20
    168a:	61 91       	ld	r22, Z+
    168c:	71 91       	ld	r23, Z+
    168e:	af 01       	movw	r20, r30
    1690:	80 91 56 03 	lds	r24, 0x0356	; 0x800356 <__data_end+0x2>
    1694:	90 91 57 03 	lds	r25, 0x0357	; 0x800357 <__data_end+0x3>
    1698:	0e 94 81 0b 	call	0x1702	; 0x1702 <vfprintf>
    169c:	e2 e0       	ldi	r30, 0x02	; 2
    169e:	0c 94 b4 0f 	jmp	0x1f68	; 0x1f68 <__epilogue_restores__+0x20>

000016a2 <puts>:
    16a2:	0f 93       	push	r16
    16a4:	1f 93       	push	r17
    16a6:	cf 93       	push	r28
    16a8:	df 93       	push	r29
    16aa:	e0 91 56 03 	lds	r30, 0x0356	; 0x800356 <__data_end+0x2>
    16ae:	f0 91 57 03 	lds	r31, 0x0357	; 0x800357 <__data_end+0x3>
    16b2:	23 81       	ldd	r18, Z+3	; 0x03
    16b4:	21 ff       	sbrs	r18, 1
    16b6:	1b c0       	rjmp	.+54     	; 0x16ee <puts+0x4c>
    16b8:	8c 01       	movw	r16, r24
    16ba:	d0 e0       	ldi	r29, 0x00	; 0
    16bc:	c0 e0       	ldi	r28, 0x00	; 0
    16be:	f8 01       	movw	r30, r16
    16c0:	81 91       	ld	r24, Z+
    16c2:	8f 01       	movw	r16, r30
    16c4:	60 91 56 03 	lds	r22, 0x0356	; 0x800356 <__data_end+0x2>
    16c8:	70 91 57 03 	lds	r23, 0x0357	; 0x800357 <__data_end+0x3>
    16cc:	db 01       	movw	r26, r22
    16ce:	18 96       	adiw	r26, 0x08	; 8
    16d0:	ed 91       	ld	r30, X+
    16d2:	fc 91       	ld	r31, X
    16d4:	19 97       	sbiw	r26, 0x09	; 9
    16d6:	88 23       	and	r24, r24
    16d8:	31 f0       	breq	.+12     	; 0x16e6 <puts+0x44>
    16da:	09 95       	icall
    16dc:	89 2b       	or	r24, r25
    16de:	79 f3       	breq	.-34     	; 0x16be <puts+0x1c>
    16e0:	df ef       	ldi	r29, 0xFF	; 255
    16e2:	cf ef       	ldi	r28, 0xFF	; 255
    16e4:	ec cf       	rjmp	.-40     	; 0x16be <puts+0x1c>
    16e6:	8a e0       	ldi	r24, 0x0A	; 10
    16e8:	09 95       	icall
    16ea:	89 2b       	or	r24, r25
    16ec:	19 f0       	breq	.+6      	; 0x16f4 <puts+0x52>
    16ee:	8f ef       	ldi	r24, 0xFF	; 255
    16f0:	9f ef       	ldi	r25, 0xFF	; 255
    16f2:	02 c0       	rjmp	.+4      	; 0x16f8 <puts+0x56>
    16f4:	8d 2f       	mov	r24, r29
    16f6:	9c 2f       	mov	r25, r28
    16f8:	df 91       	pop	r29
    16fa:	cf 91       	pop	r28
    16fc:	1f 91       	pop	r17
    16fe:	0f 91       	pop	r16
    1700:	08 95       	ret

00001702 <vfprintf>:
    1702:	ab e0       	ldi	r26, 0x0B	; 11
    1704:	b0 e0       	ldi	r27, 0x00	; 0
    1706:	e7 e8       	ldi	r30, 0x87	; 135
    1708:	fb e0       	ldi	r31, 0x0B	; 11
    170a:	0c 94 88 0f 	jmp	0x1f10	; 0x1f10 <__prologue_saves__>
    170e:	6c 01       	movw	r12, r24
    1710:	7b 01       	movw	r14, r22
    1712:	8a 01       	movw	r16, r20
    1714:	fc 01       	movw	r30, r24
    1716:	17 82       	std	Z+7, r1	; 0x07
    1718:	16 82       	std	Z+6, r1	; 0x06
    171a:	83 81       	ldd	r24, Z+3	; 0x03
    171c:	81 ff       	sbrs	r24, 1
    171e:	cc c1       	rjmp	.+920    	; 0x1ab8 <vfprintf+0x3b6>
    1720:	ce 01       	movw	r24, r28
    1722:	01 96       	adiw	r24, 0x01	; 1
    1724:	3c 01       	movw	r6, r24
    1726:	f6 01       	movw	r30, r12
    1728:	93 81       	ldd	r25, Z+3	; 0x03
    172a:	f7 01       	movw	r30, r14
    172c:	93 fd       	sbrc	r25, 3
    172e:	85 91       	lpm	r24, Z+
    1730:	93 ff       	sbrs	r25, 3
    1732:	81 91       	ld	r24, Z+
    1734:	7f 01       	movw	r14, r30
    1736:	88 23       	and	r24, r24
    1738:	09 f4       	brne	.+2      	; 0x173c <vfprintf+0x3a>
    173a:	ba c1       	rjmp	.+884    	; 0x1ab0 <vfprintf+0x3ae>
    173c:	85 32       	cpi	r24, 0x25	; 37
    173e:	39 f4       	brne	.+14     	; 0x174e <vfprintf+0x4c>
    1740:	93 fd       	sbrc	r25, 3
    1742:	85 91       	lpm	r24, Z+
    1744:	93 ff       	sbrs	r25, 3
    1746:	81 91       	ld	r24, Z+
    1748:	7f 01       	movw	r14, r30
    174a:	85 32       	cpi	r24, 0x25	; 37
    174c:	29 f4       	brne	.+10     	; 0x1758 <vfprintf+0x56>
    174e:	b6 01       	movw	r22, r12
    1750:	90 e0       	ldi	r25, 0x00	; 0
    1752:	0e 94 bc 0e 	call	0x1d78	; 0x1d78 <fputc>
    1756:	e7 cf       	rjmp	.-50     	; 0x1726 <vfprintf+0x24>
    1758:	91 2c       	mov	r9, r1
    175a:	21 2c       	mov	r2, r1
    175c:	31 2c       	mov	r3, r1
    175e:	ff e1       	ldi	r31, 0x1F	; 31
    1760:	f3 15       	cp	r31, r3
    1762:	d8 f0       	brcs	.+54     	; 0x179a <vfprintf+0x98>
    1764:	8b 32       	cpi	r24, 0x2B	; 43
    1766:	79 f0       	breq	.+30     	; 0x1786 <vfprintf+0x84>
    1768:	38 f4       	brcc	.+14     	; 0x1778 <vfprintf+0x76>
    176a:	80 32       	cpi	r24, 0x20	; 32
    176c:	79 f0       	breq	.+30     	; 0x178c <vfprintf+0x8a>
    176e:	83 32       	cpi	r24, 0x23	; 35
    1770:	a1 f4       	brne	.+40     	; 0x179a <vfprintf+0x98>
    1772:	23 2d       	mov	r18, r3
    1774:	20 61       	ori	r18, 0x10	; 16
    1776:	1d c0       	rjmp	.+58     	; 0x17b2 <vfprintf+0xb0>
    1778:	8d 32       	cpi	r24, 0x2D	; 45
    177a:	61 f0       	breq	.+24     	; 0x1794 <vfprintf+0x92>
    177c:	80 33       	cpi	r24, 0x30	; 48
    177e:	69 f4       	brne	.+26     	; 0x179a <vfprintf+0x98>
    1780:	23 2d       	mov	r18, r3
    1782:	21 60       	ori	r18, 0x01	; 1
    1784:	16 c0       	rjmp	.+44     	; 0x17b2 <vfprintf+0xb0>
    1786:	83 2d       	mov	r24, r3
    1788:	82 60       	ori	r24, 0x02	; 2
    178a:	38 2e       	mov	r3, r24
    178c:	e3 2d       	mov	r30, r3
    178e:	e4 60       	ori	r30, 0x04	; 4
    1790:	3e 2e       	mov	r3, r30
    1792:	2a c0       	rjmp	.+84     	; 0x17e8 <vfprintf+0xe6>
    1794:	f3 2d       	mov	r31, r3
    1796:	f8 60       	ori	r31, 0x08	; 8
    1798:	1d c0       	rjmp	.+58     	; 0x17d4 <vfprintf+0xd2>
    179a:	37 fc       	sbrc	r3, 7
    179c:	2d c0       	rjmp	.+90     	; 0x17f8 <vfprintf+0xf6>
    179e:	20 ed       	ldi	r18, 0xD0	; 208
    17a0:	28 0f       	add	r18, r24
    17a2:	2a 30       	cpi	r18, 0x0A	; 10
    17a4:	40 f0       	brcs	.+16     	; 0x17b6 <vfprintf+0xb4>
    17a6:	8e 32       	cpi	r24, 0x2E	; 46
    17a8:	b9 f4       	brne	.+46     	; 0x17d8 <vfprintf+0xd6>
    17aa:	36 fc       	sbrc	r3, 6
    17ac:	81 c1       	rjmp	.+770    	; 0x1ab0 <vfprintf+0x3ae>
    17ae:	23 2d       	mov	r18, r3
    17b0:	20 64       	ori	r18, 0x40	; 64
    17b2:	32 2e       	mov	r3, r18
    17b4:	19 c0       	rjmp	.+50     	; 0x17e8 <vfprintf+0xe6>
    17b6:	36 fe       	sbrs	r3, 6
    17b8:	06 c0       	rjmp	.+12     	; 0x17c6 <vfprintf+0xc4>
    17ba:	8a e0       	ldi	r24, 0x0A	; 10
    17bc:	98 9e       	mul	r9, r24
    17be:	20 0d       	add	r18, r0
    17c0:	11 24       	eor	r1, r1
    17c2:	92 2e       	mov	r9, r18
    17c4:	11 c0       	rjmp	.+34     	; 0x17e8 <vfprintf+0xe6>
    17c6:	ea e0       	ldi	r30, 0x0A	; 10
    17c8:	2e 9e       	mul	r2, r30
    17ca:	20 0d       	add	r18, r0
    17cc:	11 24       	eor	r1, r1
    17ce:	22 2e       	mov	r2, r18
    17d0:	f3 2d       	mov	r31, r3
    17d2:	f0 62       	ori	r31, 0x20	; 32
    17d4:	3f 2e       	mov	r3, r31
    17d6:	08 c0       	rjmp	.+16     	; 0x17e8 <vfprintf+0xe6>
    17d8:	8c 36       	cpi	r24, 0x6C	; 108
    17da:	21 f4       	brne	.+8      	; 0x17e4 <vfprintf+0xe2>
    17dc:	83 2d       	mov	r24, r3
    17de:	80 68       	ori	r24, 0x80	; 128
    17e0:	38 2e       	mov	r3, r24
    17e2:	02 c0       	rjmp	.+4      	; 0x17e8 <vfprintf+0xe6>
    17e4:	88 36       	cpi	r24, 0x68	; 104
    17e6:	41 f4       	brne	.+16     	; 0x17f8 <vfprintf+0xf6>
    17e8:	f7 01       	movw	r30, r14
    17ea:	93 fd       	sbrc	r25, 3
    17ec:	85 91       	lpm	r24, Z+
    17ee:	93 ff       	sbrs	r25, 3
    17f0:	81 91       	ld	r24, Z+
    17f2:	7f 01       	movw	r14, r30
    17f4:	81 11       	cpse	r24, r1
    17f6:	b3 cf       	rjmp	.-154    	; 0x175e <vfprintf+0x5c>
    17f8:	98 2f       	mov	r25, r24
    17fa:	9f 7d       	andi	r25, 0xDF	; 223
    17fc:	95 54       	subi	r25, 0x45	; 69
    17fe:	93 30       	cpi	r25, 0x03	; 3
    1800:	28 f4       	brcc	.+10     	; 0x180c <vfprintf+0x10a>
    1802:	0c 5f       	subi	r16, 0xFC	; 252
    1804:	1f 4f       	sbci	r17, 0xFF	; 255
    1806:	9f e3       	ldi	r25, 0x3F	; 63
    1808:	99 83       	std	Y+1, r25	; 0x01
    180a:	0d c0       	rjmp	.+26     	; 0x1826 <vfprintf+0x124>
    180c:	83 36       	cpi	r24, 0x63	; 99
    180e:	31 f0       	breq	.+12     	; 0x181c <vfprintf+0x11a>
    1810:	83 37       	cpi	r24, 0x73	; 115
    1812:	71 f0       	breq	.+28     	; 0x1830 <vfprintf+0x12e>
    1814:	83 35       	cpi	r24, 0x53	; 83
    1816:	09 f0       	breq	.+2      	; 0x181a <vfprintf+0x118>
    1818:	59 c0       	rjmp	.+178    	; 0x18cc <vfprintf+0x1ca>
    181a:	21 c0       	rjmp	.+66     	; 0x185e <vfprintf+0x15c>
    181c:	f8 01       	movw	r30, r16
    181e:	80 81       	ld	r24, Z
    1820:	89 83       	std	Y+1, r24	; 0x01
    1822:	0e 5f       	subi	r16, 0xFE	; 254
    1824:	1f 4f       	sbci	r17, 0xFF	; 255
    1826:	88 24       	eor	r8, r8
    1828:	83 94       	inc	r8
    182a:	91 2c       	mov	r9, r1
    182c:	53 01       	movw	r10, r6
    182e:	13 c0       	rjmp	.+38     	; 0x1856 <vfprintf+0x154>
    1830:	28 01       	movw	r4, r16
    1832:	f2 e0       	ldi	r31, 0x02	; 2
    1834:	4f 0e       	add	r4, r31
    1836:	51 1c       	adc	r5, r1
    1838:	f8 01       	movw	r30, r16
    183a:	a0 80       	ld	r10, Z
    183c:	b1 80       	ldd	r11, Z+1	; 0x01
    183e:	36 fe       	sbrs	r3, 6
    1840:	03 c0       	rjmp	.+6      	; 0x1848 <vfprintf+0x146>
    1842:	69 2d       	mov	r22, r9
    1844:	70 e0       	ldi	r23, 0x00	; 0
    1846:	02 c0       	rjmp	.+4      	; 0x184c <vfprintf+0x14a>
    1848:	6f ef       	ldi	r22, 0xFF	; 255
    184a:	7f ef       	ldi	r23, 0xFF	; 255
    184c:	c5 01       	movw	r24, r10
    184e:	0e 94 b1 0e 	call	0x1d62	; 0x1d62 <strnlen>
    1852:	4c 01       	movw	r8, r24
    1854:	82 01       	movw	r16, r4
    1856:	f3 2d       	mov	r31, r3
    1858:	ff 77       	andi	r31, 0x7F	; 127
    185a:	3f 2e       	mov	r3, r31
    185c:	16 c0       	rjmp	.+44     	; 0x188a <vfprintf+0x188>
    185e:	28 01       	movw	r4, r16
    1860:	22 e0       	ldi	r18, 0x02	; 2
    1862:	42 0e       	add	r4, r18
    1864:	51 1c       	adc	r5, r1
    1866:	f8 01       	movw	r30, r16
    1868:	a0 80       	ld	r10, Z
    186a:	b1 80       	ldd	r11, Z+1	; 0x01
    186c:	36 fe       	sbrs	r3, 6
    186e:	03 c0       	rjmp	.+6      	; 0x1876 <vfprintf+0x174>
    1870:	69 2d       	mov	r22, r9
    1872:	70 e0       	ldi	r23, 0x00	; 0
    1874:	02 c0       	rjmp	.+4      	; 0x187a <vfprintf+0x178>
    1876:	6f ef       	ldi	r22, 0xFF	; 255
    1878:	7f ef       	ldi	r23, 0xFF	; 255
    187a:	c5 01       	movw	r24, r10
    187c:	0e 94 9f 0e 	call	0x1d3e	; 0x1d3e <strnlen_P>
    1880:	4c 01       	movw	r8, r24
    1882:	f3 2d       	mov	r31, r3
    1884:	f0 68       	ori	r31, 0x80	; 128
    1886:	3f 2e       	mov	r3, r31
    1888:	82 01       	movw	r16, r4
    188a:	33 fc       	sbrc	r3, 3
    188c:	1b c0       	rjmp	.+54     	; 0x18c4 <vfprintf+0x1c2>
    188e:	82 2d       	mov	r24, r2
    1890:	90 e0       	ldi	r25, 0x00	; 0
    1892:	88 16       	cp	r8, r24
    1894:	99 06       	cpc	r9, r25
    1896:	b0 f4       	brcc	.+44     	; 0x18c4 <vfprintf+0x1c2>
    1898:	b6 01       	movw	r22, r12
    189a:	80 e2       	ldi	r24, 0x20	; 32
    189c:	90 e0       	ldi	r25, 0x00	; 0
    189e:	0e 94 bc 0e 	call	0x1d78	; 0x1d78 <fputc>
    18a2:	2a 94       	dec	r2
    18a4:	f4 cf       	rjmp	.-24     	; 0x188e <vfprintf+0x18c>
    18a6:	f5 01       	movw	r30, r10
    18a8:	37 fc       	sbrc	r3, 7
    18aa:	85 91       	lpm	r24, Z+
    18ac:	37 fe       	sbrs	r3, 7
    18ae:	81 91       	ld	r24, Z+
    18b0:	5f 01       	movw	r10, r30
    18b2:	b6 01       	movw	r22, r12
    18b4:	90 e0       	ldi	r25, 0x00	; 0
    18b6:	0e 94 bc 0e 	call	0x1d78	; 0x1d78 <fputc>
    18ba:	21 10       	cpse	r2, r1
    18bc:	2a 94       	dec	r2
    18be:	21 e0       	ldi	r18, 0x01	; 1
    18c0:	82 1a       	sub	r8, r18
    18c2:	91 08       	sbc	r9, r1
    18c4:	81 14       	cp	r8, r1
    18c6:	91 04       	cpc	r9, r1
    18c8:	71 f7       	brne	.-36     	; 0x18a6 <vfprintf+0x1a4>
    18ca:	e8 c0       	rjmp	.+464    	; 0x1a9c <vfprintf+0x39a>
    18cc:	84 36       	cpi	r24, 0x64	; 100
    18ce:	11 f0       	breq	.+4      	; 0x18d4 <vfprintf+0x1d2>
    18d0:	89 36       	cpi	r24, 0x69	; 105
    18d2:	41 f5       	brne	.+80     	; 0x1924 <vfprintf+0x222>
    18d4:	f8 01       	movw	r30, r16
    18d6:	37 fe       	sbrs	r3, 7
    18d8:	07 c0       	rjmp	.+14     	; 0x18e8 <vfprintf+0x1e6>
    18da:	60 81       	ld	r22, Z
    18dc:	71 81       	ldd	r23, Z+1	; 0x01
    18de:	82 81       	ldd	r24, Z+2	; 0x02
    18e0:	93 81       	ldd	r25, Z+3	; 0x03
    18e2:	0c 5f       	subi	r16, 0xFC	; 252
    18e4:	1f 4f       	sbci	r17, 0xFF	; 255
    18e6:	08 c0       	rjmp	.+16     	; 0x18f8 <vfprintf+0x1f6>
    18e8:	60 81       	ld	r22, Z
    18ea:	71 81       	ldd	r23, Z+1	; 0x01
    18ec:	07 2e       	mov	r0, r23
    18ee:	00 0c       	add	r0, r0
    18f0:	88 0b       	sbc	r24, r24
    18f2:	99 0b       	sbc	r25, r25
    18f4:	0e 5f       	subi	r16, 0xFE	; 254
    18f6:	1f 4f       	sbci	r17, 0xFF	; 255
    18f8:	f3 2d       	mov	r31, r3
    18fa:	ff 76       	andi	r31, 0x6F	; 111
    18fc:	3f 2e       	mov	r3, r31
    18fe:	97 ff       	sbrs	r25, 7
    1900:	09 c0       	rjmp	.+18     	; 0x1914 <vfprintf+0x212>
    1902:	90 95       	com	r25
    1904:	80 95       	com	r24
    1906:	70 95       	com	r23
    1908:	61 95       	neg	r22
    190a:	7f 4f       	sbci	r23, 0xFF	; 255
    190c:	8f 4f       	sbci	r24, 0xFF	; 255
    190e:	9f 4f       	sbci	r25, 0xFF	; 255
    1910:	f0 68       	ori	r31, 0x80	; 128
    1912:	3f 2e       	mov	r3, r31
    1914:	2a e0       	ldi	r18, 0x0A	; 10
    1916:	30 e0       	ldi	r19, 0x00	; 0
    1918:	a3 01       	movw	r20, r6
    191a:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <__ultoa_invert>
    191e:	88 2e       	mov	r8, r24
    1920:	86 18       	sub	r8, r6
    1922:	45 c0       	rjmp	.+138    	; 0x19ae <vfprintf+0x2ac>
    1924:	85 37       	cpi	r24, 0x75	; 117
    1926:	31 f4       	brne	.+12     	; 0x1934 <vfprintf+0x232>
    1928:	23 2d       	mov	r18, r3
    192a:	2f 7e       	andi	r18, 0xEF	; 239
    192c:	b2 2e       	mov	r11, r18
    192e:	2a e0       	ldi	r18, 0x0A	; 10
    1930:	30 e0       	ldi	r19, 0x00	; 0
    1932:	25 c0       	rjmp	.+74     	; 0x197e <vfprintf+0x27c>
    1934:	93 2d       	mov	r25, r3
    1936:	99 7f       	andi	r25, 0xF9	; 249
    1938:	b9 2e       	mov	r11, r25
    193a:	8f 36       	cpi	r24, 0x6F	; 111
    193c:	c1 f0       	breq	.+48     	; 0x196e <vfprintf+0x26c>
    193e:	18 f4       	brcc	.+6      	; 0x1946 <vfprintf+0x244>
    1940:	88 35       	cpi	r24, 0x58	; 88
    1942:	79 f0       	breq	.+30     	; 0x1962 <vfprintf+0x260>
    1944:	b5 c0       	rjmp	.+362    	; 0x1ab0 <vfprintf+0x3ae>
    1946:	80 37       	cpi	r24, 0x70	; 112
    1948:	19 f0       	breq	.+6      	; 0x1950 <vfprintf+0x24e>
    194a:	88 37       	cpi	r24, 0x78	; 120
    194c:	21 f0       	breq	.+8      	; 0x1956 <vfprintf+0x254>
    194e:	b0 c0       	rjmp	.+352    	; 0x1ab0 <vfprintf+0x3ae>
    1950:	e9 2f       	mov	r30, r25
    1952:	e0 61       	ori	r30, 0x10	; 16
    1954:	be 2e       	mov	r11, r30
    1956:	b4 fe       	sbrs	r11, 4
    1958:	0d c0       	rjmp	.+26     	; 0x1974 <vfprintf+0x272>
    195a:	fb 2d       	mov	r31, r11
    195c:	f4 60       	ori	r31, 0x04	; 4
    195e:	bf 2e       	mov	r11, r31
    1960:	09 c0       	rjmp	.+18     	; 0x1974 <vfprintf+0x272>
    1962:	34 fe       	sbrs	r3, 4
    1964:	0a c0       	rjmp	.+20     	; 0x197a <vfprintf+0x278>
    1966:	29 2f       	mov	r18, r25
    1968:	26 60       	ori	r18, 0x06	; 6
    196a:	b2 2e       	mov	r11, r18
    196c:	06 c0       	rjmp	.+12     	; 0x197a <vfprintf+0x278>
    196e:	28 e0       	ldi	r18, 0x08	; 8
    1970:	30 e0       	ldi	r19, 0x00	; 0
    1972:	05 c0       	rjmp	.+10     	; 0x197e <vfprintf+0x27c>
    1974:	20 e1       	ldi	r18, 0x10	; 16
    1976:	30 e0       	ldi	r19, 0x00	; 0
    1978:	02 c0       	rjmp	.+4      	; 0x197e <vfprintf+0x27c>
    197a:	20 e1       	ldi	r18, 0x10	; 16
    197c:	32 e0       	ldi	r19, 0x02	; 2
    197e:	f8 01       	movw	r30, r16
    1980:	b7 fe       	sbrs	r11, 7
    1982:	07 c0       	rjmp	.+14     	; 0x1992 <vfprintf+0x290>
    1984:	60 81       	ld	r22, Z
    1986:	71 81       	ldd	r23, Z+1	; 0x01
    1988:	82 81       	ldd	r24, Z+2	; 0x02
    198a:	93 81       	ldd	r25, Z+3	; 0x03
    198c:	0c 5f       	subi	r16, 0xFC	; 252
    198e:	1f 4f       	sbci	r17, 0xFF	; 255
    1990:	06 c0       	rjmp	.+12     	; 0x199e <vfprintf+0x29c>
    1992:	60 81       	ld	r22, Z
    1994:	71 81       	ldd	r23, Z+1	; 0x01
    1996:	80 e0       	ldi	r24, 0x00	; 0
    1998:	90 e0       	ldi	r25, 0x00	; 0
    199a:	0e 5f       	subi	r16, 0xFE	; 254
    199c:	1f 4f       	sbci	r17, 0xFF	; 255
    199e:	a3 01       	movw	r20, r6
    19a0:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <__ultoa_invert>
    19a4:	88 2e       	mov	r8, r24
    19a6:	86 18       	sub	r8, r6
    19a8:	fb 2d       	mov	r31, r11
    19aa:	ff 77       	andi	r31, 0x7F	; 127
    19ac:	3f 2e       	mov	r3, r31
    19ae:	36 fe       	sbrs	r3, 6
    19b0:	0d c0       	rjmp	.+26     	; 0x19cc <vfprintf+0x2ca>
    19b2:	23 2d       	mov	r18, r3
    19b4:	2e 7f       	andi	r18, 0xFE	; 254
    19b6:	a2 2e       	mov	r10, r18
    19b8:	89 14       	cp	r8, r9
    19ba:	58 f4       	brcc	.+22     	; 0x19d2 <vfprintf+0x2d0>
    19bc:	34 fe       	sbrs	r3, 4
    19be:	0b c0       	rjmp	.+22     	; 0x19d6 <vfprintf+0x2d4>
    19c0:	32 fc       	sbrc	r3, 2
    19c2:	09 c0       	rjmp	.+18     	; 0x19d6 <vfprintf+0x2d4>
    19c4:	83 2d       	mov	r24, r3
    19c6:	8e 7e       	andi	r24, 0xEE	; 238
    19c8:	a8 2e       	mov	r10, r24
    19ca:	05 c0       	rjmp	.+10     	; 0x19d6 <vfprintf+0x2d4>
    19cc:	b8 2c       	mov	r11, r8
    19ce:	a3 2c       	mov	r10, r3
    19d0:	03 c0       	rjmp	.+6      	; 0x19d8 <vfprintf+0x2d6>
    19d2:	b8 2c       	mov	r11, r8
    19d4:	01 c0       	rjmp	.+2      	; 0x19d8 <vfprintf+0x2d6>
    19d6:	b9 2c       	mov	r11, r9
    19d8:	a4 fe       	sbrs	r10, 4
    19da:	0f c0       	rjmp	.+30     	; 0x19fa <vfprintf+0x2f8>
    19dc:	fe 01       	movw	r30, r28
    19de:	e8 0d       	add	r30, r8
    19e0:	f1 1d       	adc	r31, r1
    19e2:	80 81       	ld	r24, Z
    19e4:	80 33       	cpi	r24, 0x30	; 48
    19e6:	21 f4       	brne	.+8      	; 0x19f0 <vfprintf+0x2ee>
    19e8:	9a 2d       	mov	r25, r10
    19ea:	99 7e       	andi	r25, 0xE9	; 233
    19ec:	a9 2e       	mov	r10, r25
    19ee:	09 c0       	rjmp	.+18     	; 0x1a02 <vfprintf+0x300>
    19f0:	a2 fe       	sbrs	r10, 2
    19f2:	06 c0       	rjmp	.+12     	; 0x1a00 <vfprintf+0x2fe>
    19f4:	b3 94       	inc	r11
    19f6:	b3 94       	inc	r11
    19f8:	04 c0       	rjmp	.+8      	; 0x1a02 <vfprintf+0x300>
    19fa:	8a 2d       	mov	r24, r10
    19fc:	86 78       	andi	r24, 0x86	; 134
    19fe:	09 f0       	breq	.+2      	; 0x1a02 <vfprintf+0x300>
    1a00:	b3 94       	inc	r11
    1a02:	a3 fc       	sbrc	r10, 3
    1a04:	11 c0       	rjmp	.+34     	; 0x1a28 <vfprintf+0x326>
    1a06:	a0 fe       	sbrs	r10, 0
    1a08:	06 c0       	rjmp	.+12     	; 0x1a16 <vfprintf+0x314>
    1a0a:	b2 14       	cp	r11, r2
    1a0c:	88 f4       	brcc	.+34     	; 0x1a30 <vfprintf+0x32e>
    1a0e:	28 0c       	add	r2, r8
    1a10:	92 2c       	mov	r9, r2
    1a12:	9b 18       	sub	r9, r11
    1a14:	0e c0       	rjmp	.+28     	; 0x1a32 <vfprintf+0x330>
    1a16:	b2 14       	cp	r11, r2
    1a18:	60 f4       	brcc	.+24     	; 0x1a32 <vfprintf+0x330>
    1a1a:	b6 01       	movw	r22, r12
    1a1c:	80 e2       	ldi	r24, 0x20	; 32
    1a1e:	90 e0       	ldi	r25, 0x00	; 0
    1a20:	0e 94 bc 0e 	call	0x1d78	; 0x1d78 <fputc>
    1a24:	b3 94       	inc	r11
    1a26:	f7 cf       	rjmp	.-18     	; 0x1a16 <vfprintf+0x314>
    1a28:	b2 14       	cp	r11, r2
    1a2a:	18 f4       	brcc	.+6      	; 0x1a32 <vfprintf+0x330>
    1a2c:	2b 18       	sub	r2, r11
    1a2e:	02 c0       	rjmp	.+4      	; 0x1a34 <vfprintf+0x332>
    1a30:	98 2c       	mov	r9, r8
    1a32:	21 2c       	mov	r2, r1
    1a34:	a4 fe       	sbrs	r10, 4
    1a36:	10 c0       	rjmp	.+32     	; 0x1a58 <vfprintf+0x356>
    1a38:	b6 01       	movw	r22, r12
    1a3a:	80 e3       	ldi	r24, 0x30	; 48
    1a3c:	90 e0       	ldi	r25, 0x00	; 0
    1a3e:	0e 94 bc 0e 	call	0x1d78	; 0x1d78 <fputc>
    1a42:	a2 fe       	sbrs	r10, 2
    1a44:	17 c0       	rjmp	.+46     	; 0x1a74 <vfprintf+0x372>
    1a46:	a1 fc       	sbrc	r10, 1
    1a48:	03 c0       	rjmp	.+6      	; 0x1a50 <vfprintf+0x34e>
    1a4a:	88 e7       	ldi	r24, 0x78	; 120
    1a4c:	90 e0       	ldi	r25, 0x00	; 0
    1a4e:	02 c0       	rjmp	.+4      	; 0x1a54 <vfprintf+0x352>
    1a50:	88 e5       	ldi	r24, 0x58	; 88
    1a52:	90 e0       	ldi	r25, 0x00	; 0
    1a54:	b6 01       	movw	r22, r12
    1a56:	0c c0       	rjmp	.+24     	; 0x1a70 <vfprintf+0x36e>
    1a58:	8a 2d       	mov	r24, r10
    1a5a:	86 78       	andi	r24, 0x86	; 134
    1a5c:	59 f0       	breq	.+22     	; 0x1a74 <vfprintf+0x372>
    1a5e:	a1 fe       	sbrs	r10, 1
    1a60:	02 c0       	rjmp	.+4      	; 0x1a66 <vfprintf+0x364>
    1a62:	8b e2       	ldi	r24, 0x2B	; 43
    1a64:	01 c0       	rjmp	.+2      	; 0x1a68 <vfprintf+0x366>
    1a66:	80 e2       	ldi	r24, 0x20	; 32
    1a68:	a7 fc       	sbrc	r10, 7
    1a6a:	8d e2       	ldi	r24, 0x2D	; 45
    1a6c:	b6 01       	movw	r22, r12
    1a6e:	90 e0       	ldi	r25, 0x00	; 0
    1a70:	0e 94 bc 0e 	call	0x1d78	; 0x1d78 <fputc>
    1a74:	89 14       	cp	r8, r9
    1a76:	38 f4       	brcc	.+14     	; 0x1a86 <vfprintf+0x384>
    1a78:	b6 01       	movw	r22, r12
    1a7a:	80 e3       	ldi	r24, 0x30	; 48
    1a7c:	90 e0       	ldi	r25, 0x00	; 0
    1a7e:	0e 94 bc 0e 	call	0x1d78	; 0x1d78 <fputc>
    1a82:	9a 94       	dec	r9
    1a84:	f7 cf       	rjmp	.-18     	; 0x1a74 <vfprintf+0x372>
    1a86:	8a 94       	dec	r8
    1a88:	f3 01       	movw	r30, r6
    1a8a:	e8 0d       	add	r30, r8
    1a8c:	f1 1d       	adc	r31, r1
    1a8e:	80 81       	ld	r24, Z
    1a90:	b6 01       	movw	r22, r12
    1a92:	90 e0       	ldi	r25, 0x00	; 0
    1a94:	0e 94 bc 0e 	call	0x1d78	; 0x1d78 <fputc>
    1a98:	81 10       	cpse	r8, r1
    1a9a:	f5 cf       	rjmp	.-22     	; 0x1a86 <vfprintf+0x384>
    1a9c:	22 20       	and	r2, r2
    1a9e:	09 f4       	brne	.+2      	; 0x1aa2 <vfprintf+0x3a0>
    1aa0:	42 ce       	rjmp	.-892    	; 0x1726 <vfprintf+0x24>
    1aa2:	b6 01       	movw	r22, r12
    1aa4:	80 e2       	ldi	r24, 0x20	; 32
    1aa6:	90 e0       	ldi	r25, 0x00	; 0
    1aa8:	0e 94 bc 0e 	call	0x1d78	; 0x1d78 <fputc>
    1aac:	2a 94       	dec	r2
    1aae:	f6 cf       	rjmp	.-20     	; 0x1a9c <vfprintf+0x39a>
    1ab0:	f6 01       	movw	r30, r12
    1ab2:	86 81       	ldd	r24, Z+6	; 0x06
    1ab4:	97 81       	ldd	r25, Z+7	; 0x07
    1ab6:	02 c0       	rjmp	.+4      	; 0x1abc <vfprintf+0x3ba>
    1ab8:	8f ef       	ldi	r24, 0xFF	; 255
    1aba:	9f ef       	ldi	r25, 0xFF	; 255
    1abc:	2b 96       	adiw	r28, 0x0b	; 11
    1abe:	e2 e1       	ldi	r30, 0x12	; 18
    1ac0:	0c 94 a4 0f 	jmp	0x1f48	; 0x1f48 <__epilogue_restores__>

00001ac4 <calloc>:
    1ac4:	0f 93       	push	r16
    1ac6:	1f 93       	push	r17
    1ac8:	cf 93       	push	r28
    1aca:	df 93       	push	r29
    1acc:	86 9f       	mul	r24, r22
    1ace:	80 01       	movw	r16, r0
    1ad0:	87 9f       	mul	r24, r23
    1ad2:	10 0d       	add	r17, r0
    1ad4:	96 9f       	mul	r25, r22
    1ad6:	10 0d       	add	r17, r0
    1ad8:	11 24       	eor	r1, r1
    1ada:	c8 01       	movw	r24, r16
    1adc:	0e 94 7e 0d 	call	0x1afc	; 0x1afc <malloc>
    1ae0:	ec 01       	movw	r28, r24
    1ae2:	00 97       	sbiw	r24, 0x00	; 0
    1ae4:	29 f0       	breq	.+10     	; 0x1af0 <calloc+0x2c>
    1ae6:	a8 01       	movw	r20, r16
    1ae8:	60 e0       	ldi	r22, 0x00	; 0
    1aea:	70 e0       	ldi	r23, 0x00	; 0
    1aec:	0e 94 aa 0e 	call	0x1d54	; 0x1d54 <memset>
    1af0:	ce 01       	movw	r24, r28
    1af2:	df 91       	pop	r29
    1af4:	cf 91       	pop	r28
    1af6:	1f 91       	pop	r17
    1af8:	0f 91       	pop	r16
    1afa:	08 95       	ret

00001afc <malloc>:
    1afc:	0f 93       	push	r16
    1afe:	1f 93       	push	r17
    1b00:	cf 93       	push	r28
    1b02:	df 93       	push	r29
    1b04:	82 30       	cpi	r24, 0x02	; 2
    1b06:	91 05       	cpc	r25, r1
    1b08:	10 f4       	brcc	.+4      	; 0x1b0e <malloc+0x12>
    1b0a:	82 e0       	ldi	r24, 0x02	; 2
    1b0c:	90 e0       	ldi	r25, 0x00	; 0
    1b0e:	e0 91 5c 03 	lds	r30, 0x035C	; 0x80035c <__flp>
    1b12:	f0 91 5d 03 	lds	r31, 0x035D	; 0x80035d <__flp+0x1>
    1b16:	20 e0       	ldi	r18, 0x00	; 0
    1b18:	30 e0       	ldi	r19, 0x00	; 0
    1b1a:	a0 e0       	ldi	r26, 0x00	; 0
    1b1c:	b0 e0       	ldi	r27, 0x00	; 0
    1b1e:	30 97       	sbiw	r30, 0x00	; 0
    1b20:	19 f1       	breq	.+70     	; 0x1b68 <malloc+0x6c>
    1b22:	40 81       	ld	r20, Z
    1b24:	51 81       	ldd	r21, Z+1	; 0x01
    1b26:	02 81       	ldd	r16, Z+2	; 0x02
    1b28:	13 81       	ldd	r17, Z+3	; 0x03
    1b2a:	48 17       	cp	r20, r24
    1b2c:	59 07       	cpc	r21, r25
    1b2e:	c8 f0       	brcs	.+50     	; 0x1b62 <malloc+0x66>
    1b30:	84 17       	cp	r24, r20
    1b32:	95 07       	cpc	r25, r21
    1b34:	69 f4       	brne	.+26     	; 0x1b50 <malloc+0x54>
    1b36:	10 97       	sbiw	r26, 0x00	; 0
    1b38:	31 f0       	breq	.+12     	; 0x1b46 <malloc+0x4a>
    1b3a:	12 96       	adiw	r26, 0x02	; 2
    1b3c:	0c 93       	st	X, r16
    1b3e:	12 97       	sbiw	r26, 0x02	; 2
    1b40:	13 96       	adiw	r26, 0x03	; 3
    1b42:	1c 93       	st	X, r17
    1b44:	27 c0       	rjmp	.+78     	; 0x1b94 <malloc+0x98>
    1b46:	00 93 5c 03 	sts	0x035C, r16	; 0x80035c <__flp>
    1b4a:	10 93 5d 03 	sts	0x035D, r17	; 0x80035d <__flp+0x1>
    1b4e:	22 c0       	rjmp	.+68     	; 0x1b94 <malloc+0x98>
    1b50:	21 15       	cp	r18, r1
    1b52:	31 05       	cpc	r19, r1
    1b54:	19 f0       	breq	.+6      	; 0x1b5c <malloc+0x60>
    1b56:	42 17       	cp	r20, r18
    1b58:	53 07       	cpc	r21, r19
    1b5a:	18 f4       	brcc	.+6      	; 0x1b62 <malloc+0x66>
    1b5c:	9a 01       	movw	r18, r20
    1b5e:	bd 01       	movw	r22, r26
    1b60:	ef 01       	movw	r28, r30
    1b62:	df 01       	movw	r26, r30
    1b64:	f8 01       	movw	r30, r16
    1b66:	db cf       	rjmp	.-74     	; 0x1b1e <malloc+0x22>
    1b68:	21 15       	cp	r18, r1
    1b6a:	31 05       	cpc	r19, r1
    1b6c:	f9 f0       	breq	.+62     	; 0x1bac <malloc+0xb0>
    1b6e:	28 1b       	sub	r18, r24
    1b70:	39 0b       	sbc	r19, r25
    1b72:	24 30       	cpi	r18, 0x04	; 4
    1b74:	31 05       	cpc	r19, r1
    1b76:	80 f4       	brcc	.+32     	; 0x1b98 <malloc+0x9c>
    1b78:	8a 81       	ldd	r24, Y+2	; 0x02
    1b7a:	9b 81       	ldd	r25, Y+3	; 0x03
    1b7c:	61 15       	cp	r22, r1
    1b7e:	71 05       	cpc	r23, r1
    1b80:	21 f0       	breq	.+8      	; 0x1b8a <malloc+0x8e>
    1b82:	fb 01       	movw	r30, r22
    1b84:	93 83       	std	Z+3, r25	; 0x03
    1b86:	82 83       	std	Z+2, r24	; 0x02
    1b88:	04 c0       	rjmp	.+8      	; 0x1b92 <malloc+0x96>
    1b8a:	90 93 5d 03 	sts	0x035D, r25	; 0x80035d <__flp+0x1>
    1b8e:	80 93 5c 03 	sts	0x035C, r24	; 0x80035c <__flp>
    1b92:	fe 01       	movw	r30, r28
    1b94:	32 96       	adiw	r30, 0x02	; 2
    1b96:	44 c0       	rjmp	.+136    	; 0x1c20 <malloc+0x124>
    1b98:	fe 01       	movw	r30, r28
    1b9a:	e2 0f       	add	r30, r18
    1b9c:	f3 1f       	adc	r31, r19
    1b9e:	81 93       	st	Z+, r24
    1ba0:	91 93       	st	Z+, r25
    1ba2:	22 50       	subi	r18, 0x02	; 2
    1ba4:	31 09       	sbc	r19, r1
    1ba6:	39 83       	std	Y+1, r19	; 0x01
    1ba8:	28 83       	st	Y, r18
    1baa:	3a c0       	rjmp	.+116    	; 0x1c20 <malloc+0x124>
    1bac:	20 91 5a 03 	lds	r18, 0x035A	; 0x80035a <__brkval>
    1bb0:	30 91 5b 03 	lds	r19, 0x035B	; 0x80035b <__brkval+0x1>
    1bb4:	23 2b       	or	r18, r19
    1bb6:	41 f4       	brne	.+16     	; 0x1bc8 <malloc+0xcc>
    1bb8:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__malloc_heap_start>
    1bbc:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__malloc_heap_start+0x1>
    1bc0:	30 93 5b 03 	sts	0x035B, r19	; 0x80035b <__brkval+0x1>
    1bc4:	20 93 5a 03 	sts	0x035A, r18	; 0x80035a <__brkval>
    1bc8:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__malloc_heap_end>
    1bcc:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__malloc_heap_end+0x1>
    1bd0:	21 15       	cp	r18, r1
    1bd2:	31 05       	cpc	r19, r1
    1bd4:	41 f4       	brne	.+16     	; 0x1be6 <malloc+0xea>
    1bd6:	2d b7       	in	r18, 0x3d	; 61
    1bd8:	3e b7       	in	r19, 0x3e	; 62
    1bda:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <__malloc_margin>
    1bde:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <__malloc_margin+0x1>
    1be2:	24 1b       	sub	r18, r20
    1be4:	35 0b       	sbc	r19, r21
    1be6:	e0 91 5a 03 	lds	r30, 0x035A	; 0x80035a <__brkval>
    1bea:	f0 91 5b 03 	lds	r31, 0x035B	; 0x80035b <__brkval+0x1>
    1bee:	e2 17       	cp	r30, r18
    1bf0:	f3 07       	cpc	r31, r19
    1bf2:	a0 f4       	brcc	.+40     	; 0x1c1c <malloc+0x120>
    1bf4:	2e 1b       	sub	r18, r30
    1bf6:	3f 0b       	sbc	r19, r31
    1bf8:	28 17       	cp	r18, r24
    1bfa:	39 07       	cpc	r19, r25
    1bfc:	78 f0       	brcs	.+30     	; 0x1c1c <malloc+0x120>
    1bfe:	ac 01       	movw	r20, r24
    1c00:	4e 5f       	subi	r20, 0xFE	; 254
    1c02:	5f 4f       	sbci	r21, 0xFF	; 255
    1c04:	24 17       	cp	r18, r20
    1c06:	35 07       	cpc	r19, r21
    1c08:	48 f0       	brcs	.+18     	; 0x1c1c <malloc+0x120>
    1c0a:	4e 0f       	add	r20, r30
    1c0c:	5f 1f       	adc	r21, r31
    1c0e:	50 93 5b 03 	sts	0x035B, r21	; 0x80035b <__brkval+0x1>
    1c12:	40 93 5a 03 	sts	0x035A, r20	; 0x80035a <__brkval>
    1c16:	81 93       	st	Z+, r24
    1c18:	91 93       	st	Z+, r25
    1c1a:	02 c0       	rjmp	.+4      	; 0x1c20 <malloc+0x124>
    1c1c:	e0 e0       	ldi	r30, 0x00	; 0
    1c1e:	f0 e0       	ldi	r31, 0x00	; 0
    1c20:	cf 01       	movw	r24, r30
    1c22:	df 91       	pop	r29
    1c24:	cf 91       	pop	r28
    1c26:	1f 91       	pop	r17
    1c28:	0f 91       	pop	r16
    1c2a:	08 95       	ret

00001c2c <free>:
    1c2c:	cf 93       	push	r28
    1c2e:	df 93       	push	r29
    1c30:	00 97       	sbiw	r24, 0x00	; 0
    1c32:	09 f4       	brne	.+2      	; 0x1c36 <free+0xa>
    1c34:	81 c0       	rjmp	.+258    	; 0x1d38 <free+0x10c>
    1c36:	fc 01       	movw	r30, r24
    1c38:	32 97       	sbiw	r30, 0x02	; 2
    1c3a:	13 82       	std	Z+3, r1	; 0x03
    1c3c:	12 82       	std	Z+2, r1	; 0x02
    1c3e:	a0 91 5c 03 	lds	r26, 0x035C	; 0x80035c <__flp>
    1c42:	b0 91 5d 03 	lds	r27, 0x035D	; 0x80035d <__flp+0x1>
    1c46:	10 97       	sbiw	r26, 0x00	; 0
    1c48:	81 f4       	brne	.+32     	; 0x1c6a <free+0x3e>
    1c4a:	20 81       	ld	r18, Z
    1c4c:	31 81       	ldd	r19, Z+1	; 0x01
    1c4e:	82 0f       	add	r24, r18
    1c50:	93 1f       	adc	r25, r19
    1c52:	20 91 5a 03 	lds	r18, 0x035A	; 0x80035a <__brkval>
    1c56:	30 91 5b 03 	lds	r19, 0x035B	; 0x80035b <__brkval+0x1>
    1c5a:	28 17       	cp	r18, r24
    1c5c:	39 07       	cpc	r19, r25
    1c5e:	51 f5       	brne	.+84     	; 0x1cb4 <free+0x88>
    1c60:	f0 93 5b 03 	sts	0x035B, r31	; 0x80035b <__brkval+0x1>
    1c64:	e0 93 5a 03 	sts	0x035A, r30	; 0x80035a <__brkval>
    1c68:	67 c0       	rjmp	.+206    	; 0x1d38 <free+0x10c>
    1c6a:	ed 01       	movw	r28, r26
    1c6c:	20 e0       	ldi	r18, 0x00	; 0
    1c6e:	30 e0       	ldi	r19, 0x00	; 0
    1c70:	ce 17       	cp	r28, r30
    1c72:	df 07       	cpc	r29, r31
    1c74:	40 f4       	brcc	.+16     	; 0x1c86 <free+0x5a>
    1c76:	4a 81       	ldd	r20, Y+2	; 0x02
    1c78:	5b 81       	ldd	r21, Y+3	; 0x03
    1c7a:	9e 01       	movw	r18, r28
    1c7c:	41 15       	cp	r20, r1
    1c7e:	51 05       	cpc	r21, r1
    1c80:	f1 f0       	breq	.+60     	; 0x1cbe <free+0x92>
    1c82:	ea 01       	movw	r28, r20
    1c84:	f5 cf       	rjmp	.-22     	; 0x1c70 <free+0x44>
    1c86:	d3 83       	std	Z+3, r29	; 0x03
    1c88:	c2 83       	std	Z+2, r28	; 0x02
    1c8a:	40 81       	ld	r20, Z
    1c8c:	51 81       	ldd	r21, Z+1	; 0x01
    1c8e:	84 0f       	add	r24, r20
    1c90:	95 1f       	adc	r25, r21
    1c92:	c8 17       	cp	r28, r24
    1c94:	d9 07       	cpc	r29, r25
    1c96:	59 f4       	brne	.+22     	; 0x1cae <free+0x82>
    1c98:	88 81       	ld	r24, Y
    1c9a:	99 81       	ldd	r25, Y+1	; 0x01
    1c9c:	84 0f       	add	r24, r20
    1c9e:	95 1f       	adc	r25, r21
    1ca0:	02 96       	adiw	r24, 0x02	; 2
    1ca2:	91 83       	std	Z+1, r25	; 0x01
    1ca4:	80 83       	st	Z, r24
    1ca6:	8a 81       	ldd	r24, Y+2	; 0x02
    1ca8:	9b 81       	ldd	r25, Y+3	; 0x03
    1caa:	93 83       	std	Z+3, r25	; 0x03
    1cac:	82 83       	std	Z+2, r24	; 0x02
    1cae:	21 15       	cp	r18, r1
    1cb0:	31 05       	cpc	r19, r1
    1cb2:	29 f4       	brne	.+10     	; 0x1cbe <free+0x92>
    1cb4:	f0 93 5d 03 	sts	0x035D, r31	; 0x80035d <__flp+0x1>
    1cb8:	e0 93 5c 03 	sts	0x035C, r30	; 0x80035c <__flp>
    1cbc:	3d c0       	rjmp	.+122    	; 0x1d38 <free+0x10c>
    1cbe:	e9 01       	movw	r28, r18
    1cc0:	fb 83       	std	Y+3, r31	; 0x03
    1cc2:	ea 83       	std	Y+2, r30	; 0x02
    1cc4:	49 91       	ld	r20, Y+
    1cc6:	59 91       	ld	r21, Y+
    1cc8:	c4 0f       	add	r28, r20
    1cca:	d5 1f       	adc	r29, r21
    1ccc:	ec 17       	cp	r30, r28
    1cce:	fd 07       	cpc	r31, r29
    1cd0:	61 f4       	brne	.+24     	; 0x1cea <free+0xbe>
    1cd2:	80 81       	ld	r24, Z
    1cd4:	91 81       	ldd	r25, Z+1	; 0x01
    1cd6:	84 0f       	add	r24, r20
    1cd8:	95 1f       	adc	r25, r21
    1cda:	02 96       	adiw	r24, 0x02	; 2
    1cdc:	e9 01       	movw	r28, r18
    1cde:	99 83       	std	Y+1, r25	; 0x01
    1ce0:	88 83       	st	Y, r24
    1ce2:	82 81       	ldd	r24, Z+2	; 0x02
    1ce4:	93 81       	ldd	r25, Z+3	; 0x03
    1ce6:	9b 83       	std	Y+3, r25	; 0x03
    1ce8:	8a 83       	std	Y+2, r24	; 0x02
    1cea:	e0 e0       	ldi	r30, 0x00	; 0
    1cec:	f0 e0       	ldi	r31, 0x00	; 0
    1cee:	12 96       	adiw	r26, 0x02	; 2
    1cf0:	8d 91       	ld	r24, X+
    1cf2:	9c 91       	ld	r25, X
    1cf4:	13 97       	sbiw	r26, 0x03	; 3
    1cf6:	00 97       	sbiw	r24, 0x00	; 0
    1cf8:	19 f0       	breq	.+6      	; 0x1d00 <free+0xd4>
    1cfa:	fd 01       	movw	r30, r26
    1cfc:	dc 01       	movw	r26, r24
    1cfe:	f7 cf       	rjmp	.-18     	; 0x1cee <free+0xc2>
    1d00:	8d 91       	ld	r24, X+
    1d02:	9c 91       	ld	r25, X
    1d04:	11 97       	sbiw	r26, 0x01	; 1
    1d06:	9d 01       	movw	r18, r26
    1d08:	2e 5f       	subi	r18, 0xFE	; 254
    1d0a:	3f 4f       	sbci	r19, 0xFF	; 255
    1d0c:	82 0f       	add	r24, r18
    1d0e:	93 1f       	adc	r25, r19
    1d10:	20 91 5a 03 	lds	r18, 0x035A	; 0x80035a <__brkval>
    1d14:	30 91 5b 03 	lds	r19, 0x035B	; 0x80035b <__brkval+0x1>
    1d18:	28 17       	cp	r18, r24
    1d1a:	39 07       	cpc	r19, r25
    1d1c:	69 f4       	brne	.+26     	; 0x1d38 <free+0x10c>
    1d1e:	30 97       	sbiw	r30, 0x00	; 0
    1d20:	29 f4       	brne	.+10     	; 0x1d2c <free+0x100>
    1d22:	10 92 5d 03 	sts	0x035D, r1	; 0x80035d <__flp+0x1>
    1d26:	10 92 5c 03 	sts	0x035C, r1	; 0x80035c <__flp>
    1d2a:	02 c0       	rjmp	.+4      	; 0x1d30 <free+0x104>
    1d2c:	13 82       	std	Z+3, r1	; 0x03
    1d2e:	12 82       	std	Z+2, r1	; 0x02
    1d30:	b0 93 5b 03 	sts	0x035B, r27	; 0x80035b <__brkval+0x1>
    1d34:	a0 93 5a 03 	sts	0x035A, r26	; 0x80035a <__brkval>
    1d38:	df 91       	pop	r29
    1d3a:	cf 91       	pop	r28
    1d3c:	08 95       	ret

00001d3e <strnlen_P>:
    1d3e:	fc 01       	movw	r30, r24
    1d40:	05 90       	lpm	r0, Z+
    1d42:	61 50       	subi	r22, 0x01	; 1
    1d44:	70 40       	sbci	r23, 0x00	; 0
    1d46:	01 10       	cpse	r0, r1
    1d48:	d8 f7       	brcc	.-10     	; 0x1d40 <strnlen_P+0x2>
    1d4a:	80 95       	com	r24
    1d4c:	90 95       	com	r25
    1d4e:	8e 0f       	add	r24, r30
    1d50:	9f 1f       	adc	r25, r31
    1d52:	08 95       	ret

00001d54 <memset>:
    1d54:	dc 01       	movw	r26, r24
    1d56:	01 c0       	rjmp	.+2      	; 0x1d5a <memset+0x6>
    1d58:	6d 93       	st	X+, r22
    1d5a:	41 50       	subi	r20, 0x01	; 1
    1d5c:	50 40       	sbci	r21, 0x00	; 0
    1d5e:	e0 f7       	brcc	.-8      	; 0x1d58 <memset+0x4>
    1d60:	08 95       	ret

00001d62 <strnlen>:
    1d62:	fc 01       	movw	r30, r24
    1d64:	61 50       	subi	r22, 0x01	; 1
    1d66:	70 40       	sbci	r23, 0x00	; 0
    1d68:	01 90       	ld	r0, Z+
    1d6a:	01 10       	cpse	r0, r1
    1d6c:	d8 f7       	brcc	.-10     	; 0x1d64 <strnlen+0x2>
    1d6e:	80 95       	com	r24
    1d70:	90 95       	com	r25
    1d72:	8e 0f       	add	r24, r30
    1d74:	9f 1f       	adc	r25, r31
    1d76:	08 95       	ret

00001d78 <fputc>:
    1d78:	0f 93       	push	r16
    1d7a:	1f 93       	push	r17
    1d7c:	cf 93       	push	r28
    1d7e:	df 93       	push	r29
    1d80:	fb 01       	movw	r30, r22
    1d82:	23 81       	ldd	r18, Z+3	; 0x03
    1d84:	21 fd       	sbrc	r18, 1
    1d86:	03 c0       	rjmp	.+6      	; 0x1d8e <fputc+0x16>
    1d88:	8f ef       	ldi	r24, 0xFF	; 255
    1d8a:	9f ef       	ldi	r25, 0xFF	; 255
    1d8c:	2c c0       	rjmp	.+88     	; 0x1de6 <fputc+0x6e>
    1d8e:	22 ff       	sbrs	r18, 2
    1d90:	16 c0       	rjmp	.+44     	; 0x1dbe <fputc+0x46>
    1d92:	46 81       	ldd	r20, Z+6	; 0x06
    1d94:	57 81       	ldd	r21, Z+7	; 0x07
    1d96:	24 81       	ldd	r18, Z+4	; 0x04
    1d98:	35 81       	ldd	r19, Z+5	; 0x05
    1d9a:	42 17       	cp	r20, r18
    1d9c:	53 07       	cpc	r21, r19
    1d9e:	44 f4       	brge	.+16     	; 0x1db0 <fputc+0x38>
    1da0:	a0 81       	ld	r26, Z
    1da2:	b1 81       	ldd	r27, Z+1	; 0x01
    1da4:	9d 01       	movw	r18, r26
    1da6:	2f 5f       	subi	r18, 0xFF	; 255
    1da8:	3f 4f       	sbci	r19, 0xFF	; 255
    1daa:	31 83       	std	Z+1, r19	; 0x01
    1dac:	20 83       	st	Z, r18
    1dae:	8c 93       	st	X, r24
    1db0:	26 81       	ldd	r18, Z+6	; 0x06
    1db2:	37 81       	ldd	r19, Z+7	; 0x07
    1db4:	2f 5f       	subi	r18, 0xFF	; 255
    1db6:	3f 4f       	sbci	r19, 0xFF	; 255
    1db8:	37 83       	std	Z+7, r19	; 0x07
    1dba:	26 83       	std	Z+6, r18	; 0x06
    1dbc:	14 c0       	rjmp	.+40     	; 0x1de6 <fputc+0x6e>
    1dbe:	8b 01       	movw	r16, r22
    1dc0:	ec 01       	movw	r28, r24
    1dc2:	fb 01       	movw	r30, r22
    1dc4:	00 84       	ldd	r0, Z+8	; 0x08
    1dc6:	f1 85       	ldd	r31, Z+9	; 0x09
    1dc8:	e0 2d       	mov	r30, r0
    1dca:	09 95       	icall
    1dcc:	89 2b       	or	r24, r25
    1dce:	e1 f6       	brne	.-72     	; 0x1d88 <fputc+0x10>
    1dd0:	d8 01       	movw	r26, r16
    1dd2:	16 96       	adiw	r26, 0x06	; 6
    1dd4:	8d 91       	ld	r24, X+
    1dd6:	9c 91       	ld	r25, X
    1dd8:	17 97       	sbiw	r26, 0x07	; 7
    1dda:	01 96       	adiw	r24, 0x01	; 1
    1ddc:	17 96       	adiw	r26, 0x07	; 7
    1dde:	9c 93       	st	X, r25
    1de0:	8e 93       	st	-X, r24
    1de2:	16 97       	sbiw	r26, 0x06	; 6
    1de4:	ce 01       	movw	r24, r28
    1de6:	df 91       	pop	r29
    1de8:	cf 91       	pop	r28
    1dea:	1f 91       	pop	r17
    1dec:	0f 91       	pop	r16
    1dee:	08 95       	ret

00001df0 <__ultoa_invert>:
    1df0:	fa 01       	movw	r30, r20
    1df2:	aa 27       	eor	r26, r26
    1df4:	28 30       	cpi	r18, 0x08	; 8
    1df6:	51 f1       	breq	.+84     	; 0x1e4c <__ultoa_invert+0x5c>
    1df8:	20 31       	cpi	r18, 0x10	; 16
    1dfa:	81 f1       	breq	.+96     	; 0x1e5c <__ultoa_invert+0x6c>
    1dfc:	e8 94       	clt
    1dfe:	6f 93       	push	r22
    1e00:	6e 7f       	andi	r22, 0xFE	; 254
    1e02:	6e 5f       	subi	r22, 0xFE	; 254
    1e04:	7f 4f       	sbci	r23, 0xFF	; 255
    1e06:	8f 4f       	sbci	r24, 0xFF	; 255
    1e08:	9f 4f       	sbci	r25, 0xFF	; 255
    1e0a:	af 4f       	sbci	r26, 0xFF	; 255
    1e0c:	b1 e0       	ldi	r27, 0x01	; 1
    1e0e:	3e d0       	rcall	.+124    	; 0x1e8c <__ultoa_invert+0x9c>
    1e10:	b4 e0       	ldi	r27, 0x04	; 4
    1e12:	3c d0       	rcall	.+120    	; 0x1e8c <__ultoa_invert+0x9c>
    1e14:	67 0f       	add	r22, r23
    1e16:	78 1f       	adc	r23, r24
    1e18:	89 1f       	adc	r24, r25
    1e1a:	9a 1f       	adc	r25, r26
    1e1c:	a1 1d       	adc	r26, r1
    1e1e:	68 0f       	add	r22, r24
    1e20:	79 1f       	adc	r23, r25
    1e22:	8a 1f       	adc	r24, r26
    1e24:	91 1d       	adc	r25, r1
    1e26:	a1 1d       	adc	r26, r1
    1e28:	6a 0f       	add	r22, r26
    1e2a:	71 1d       	adc	r23, r1
    1e2c:	81 1d       	adc	r24, r1
    1e2e:	91 1d       	adc	r25, r1
    1e30:	a1 1d       	adc	r26, r1
    1e32:	20 d0       	rcall	.+64     	; 0x1e74 <__ultoa_invert+0x84>
    1e34:	09 f4       	brne	.+2      	; 0x1e38 <__ultoa_invert+0x48>
    1e36:	68 94       	set
    1e38:	3f 91       	pop	r19
    1e3a:	2a e0       	ldi	r18, 0x0A	; 10
    1e3c:	26 9f       	mul	r18, r22
    1e3e:	11 24       	eor	r1, r1
    1e40:	30 19       	sub	r19, r0
    1e42:	30 5d       	subi	r19, 0xD0	; 208
    1e44:	31 93       	st	Z+, r19
    1e46:	de f6       	brtc	.-74     	; 0x1dfe <__ultoa_invert+0xe>
    1e48:	cf 01       	movw	r24, r30
    1e4a:	08 95       	ret
    1e4c:	46 2f       	mov	r20, r22
    1e4e:	47 70       	andi	r20, 0x07	; 7
    1e50:	40 5d       	subi	r20, 0xD0	; 208
    1e52:	41 93       	st	Z+, r20
    1e54:	b3 e0       	ldi	r27, 0x03	; 3
    1e56:	0f d0       	rcall	.+30     	; 0x1e76 <__ultoa_invert+0x86>
    1e58:	c9 f7       	brne	.-14     	; 0x1e4c <__ultoa_invert+0x5c>
    1e5a:	f6 cf       	rjmp	.-20     	; 0x1e48 <__ultoa_invert+0x58>
    1e5c:	46 2f       	mov	r20, r22
    1e5e:	4f 70       	andi	r20, 0x0F	; 15
    1e60:	40 5d       	subi	r20, 0xD0	; 208
    1e62:	4a 33       	cpi	r20, 0x3A	; 58
    1e64:	18 f0       	brcs	.+6      	; 0x1e6c <__ultoa_invert+0x7c>
    1e66:	49 5d       	subi	r20, 0xD9	; 217
    1e68:	31 fd       	sbrc	r19, 1
    1e6a:	40 52       	subi	r20, 0x20	; 32
    1e6c:	41 93       	st	Z+, r20
    1e6e:	02 d0       	rcall	.+4      	; 0x1e74 <__ultoa_invert+0x84>
    1e70:	a9 f7       	brne	.-22     	; 0x1e5c <__ultoa_invert+0x6c>
    1e72:	ea cf       	rjmp	.-44     	; 0x1e48 <__ultoa_invert+0x58>
    1e74:	b4 e0       	ldi	r27, 0x04	; 4
    1e76:	a6 95       	lsr	r26
    1e78:	97 95       	ror	r25
    1e7a:	87 95       	ror	r24
    1e7c:	77 95       	ror	r23
    1e7e:	67 95       	ror	r22
    1e80:	ba 95       	dec	r27
    1e82:	c9 f7       	brne	.-14     	; 0x1e76 <__ultoa_invert+0x86>
    1e84:	00 97       	sbiw	r24, 0x00	; 0
    1e86:	61 05       	cpc	r22, r1
    1e88:	71 05       	cpc	r23, r1
    1e8a:	08 95       	ret
    1e8c:	9b 01       	movw	r18, r22
    1e8e:	ac 01       	movw	r20, r24
    1e90:	0a 2e       	mov	r0, r26
    1e92:	06 94       	lsr	r0
    1e94:	57 95       	ror	r21
    1e96:	47 95       	ror	r20
    1e98:	37 95       	ror	r19
    1e9a:	27 95       	ror	r18
    1e9c:	ba 95       	dec	r27
    1e9e:	c9 f7       	brne	.-14     	; 0x1e92 <__ultoa_invert+0xa2>
    1ea0:	62 0f       	add	r22, r18
    1ea2:	73 1f       	adc	r23, r19
    1ea4:	84 1f       	adc	r24, r20
    1ea6:	95 1f       	adc	r25, r21
    1ea8:	a0 1d       	adc	r26, r0
    1eaa:	08 95       	ret

00001eac <__divmodsi4>:
    1eac:	05 2e       	mov	r0, r21
    1eae:	97 fb       	bst	r25, 7
    1eb0:	1e f4       	brtc	.+6      	; 0x1eb8 <__divmodsi4+0xc>
    1eb2:	00 94       	com	r0
    1eb4:	0e 94 6d 0f 	call	0x1eda	; 0x1eda <__negsi2>
    1eb8:	57 fd       	sbrc	r21, 7
    1eba:	07 d0       	rcall	.+14     	; 0x1eca <__divmodsi4_neg2>
    1ebc:	0e 94 bf 0f 	call	0x1f7e	; 0x1f7e <__udivmodsi4>
    1ec0:	07 fc       	sbrc	r0, 7
    1ec2:	03 d0       	rcall	.+6      	; 0x1eca <__divmodsi4_neg2>
    1ec4:	4e f4       	brtc	.+18     	; 0x1ed8 <__divmodsi4_exit>
    1ec6:	0c 94 6d 0f 	jmp	0x1eda	; 0x1eda <__negsi2>

00001eca <__divmodsi4_neg2>:
    1eca:	50 95       	com	r21
    1ecc:	40 95       	com	r20
    1ece:	30 95       	com	r19
    1ed0:	21 95       	neg	r18
    1ed2:	3f 4f       	sbci	r19, 0xFF	; 255
    1ed4:	4f 4f       	sbci	r20, 0xFF	; 255
    1ed6:	5f 4f       	sbci	r21, 0xFF	; 255

00001ed8 <__divmodsi4_exit>:
    1ed8:	08 95       	ret

00001eda <__negsi2>:
    1eda:	90 95       	com	r25
    1edc:	80 95       	com	r24
    1ede:	70 95       	com	r23
    1ee0:	61 95       	neg	r22
    1ee2:	7f 4f       	sbci	r23, 0xFF	; 255
    1ee4:	8f 4f       	sbci	r24, 0xFF	; 255
    1ee6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ee8:	08 95       	ret

00001eea <__muluhisi3>:
    1eea:	0e 94 e1 0f 	call	0x1fc2	; 0x1fc2 <__umulhisi3>
    1eee:	a5 9f       	mul	r26, r21
    1ef0:	90 0d       	add	r25, r0
    1ef2:	b4 9f       	mul	r27, r20
    1ef4:	90 0d       	add	r25, r0
    1ef6:	a4 9f       	mul	r26, r20
    1ef8:	80 0d       	add	r24, r0
    1efa:	91 1d       	adc	r25, r1
    1efc:	11 24       	eor	r1, r1
    1efe:	08 95       	ret

00001f00 <__mulshisi3>:
    1f00:	b7 ff       	sbrs	r27, 7
    1f02:	0c 94 75 0f 	jmp	0x1eea	; 0x1eea <__muluhisi3>

00001f06 <__mulohisi3>:
    1f06:	0e 94 75 0f 	call	0x1eea	; 0x1eea <__muluhisi3>
    1f0a:	82 1b       	sub	r24, r18
    1f0c:	93 0b       	sbc	r25, r19
    1f0e:	08 95       	ret

00001f10 <__prologue_saves__>:
    1f10:	2f 92       	push	r2
    1f12:	3f 92       	push	r3
    1f14:	4f 92       	push	r4
    1f16:	5f 92       	push	r5
    1f18:	6f 92       	push	r6
    1f1a:	7f 92       	push	r7
    1f1c:	8f 92       	push	r8
    1f1e:	9f 92       	push	r9
    1f20:	af 92       	push	r10
    1f22:	bf 92       	push	r11
    1f24:	cf 92       	push	r12
    1f26:	df 92       	push	r13
    1f28:	ef 92       	push	r14
    1f2a:	ff 92       	push	r15
    1f2c:	0f 93       	push	r16
    1f2e:	1f 93       	push	r17
    1f30:	cf 93       	push	r28
    1f32:	df 93       	push	r29
    1f34:	cd b7       	in	r28, 0x3d	; 61
    1f36:	de b7       	in	r29, 0x3e	; 62
    1f38:	ca 1b       	sub	r28, r26
    1f3a:	db 0b       	sbc	r29, r27
    1f3c:	0f b6       	in	r0, 0x3f	; 63
    1f3e:	f8 94       	cli
    1f40:	de bf       	out	0x3e, r29	; 62
    1f42:	0f be       	out	0x3f, r0	; 63
    1f44:	cd bf       	out	0x3d, r28	; 61
    1f46:	09 94       	ijmp

00001f48 <__epilogue_restores__>:
    1f48:	2a 88       	ldd	r2, Y+18	; 0x12
    1f4a:	39 88       	ldd	r3, Y+17	; 0x11
    1f4c:	48 88       	ldd	r4, Y+16	; 0x10
    1f4e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1f50:	6e 84       	ldd	r6, Y+14	; 0x0e
    1f52:	7d 84       	ldd	r7, Y+13	; 0x0d
    1f54:	8c 84       	ldd	r8, Y+12	; 0x0c
    1f56:	9b 84       	ldd	r9, Y+11	; 0x0b
    1f58:	aa 84       	ldd	r10, Y+10	; 0x0a
    1f5a:	b9 84       	ldd	r11, Y+9	; 0x09
    1f5c:	c8 84       	ldd	r12, Y+8	; 0x08
    1f5e:	df 80       	ldd	r13, Y+7	; 0x07
    1f60:	ee 80       	ldd	r14, Y+6	; 0x06
    1f62:	fd 80       	ldd	r15, Y+5	; 0x05
    1f64:	0c 81       	ldd	r16, Y+4	; 0x04
    1f66:	1b 81       	ldd	r17, Y+3	; 0x03
    1f68:	aa 81       	ldd	r26, Y+2	; 0x02
    1f6a:	b9 81       	ldd	r27, Y+1	; 0x01
    1f6c:	ce 0f       	add	r28, r30
    1f6e:	d1 1d       	adc	r29, r1
    1f70:	0f b6       	in	r0, 0x3f	; 63
    1f72:	f8 94       	cli
    1f74:	de bf       	out	0x3e, r29	; 62
    1f76:	0f be       	out	0x3f, r0	; 63
    1f78:	cd bf       	out	0x3d, r28	; 61
    1f7a:	ed 01       	movw	r28, r26
    1f7c:	08 95       	ret

00001f7e <__udivmodsi4>:
    1f7e:	a1 e2       	ldi	r26, 0x21	; 33
    1f80:	1a 2e       	mov	r1, r26
    1f82:	aa 1b       	sub	r26, r26
    1f84:	bb 1b       	sub	r27, r27
    1f86:	fd 01       	movw	r30, r26
    1f88:	0d c0       	rjmp	.+26     	; 0x1fa4 <__udivmodsi4_ep>

00001f8a <__udivmodsi4_loop>:
    1f8a:	aa 1f       	adc	r26, r26
    1f8c:	bb 1f       	adc	r27, r27
    1f8e:	ee 1f       	adc	r30, r30
    1f90:	ff 1f       	adc	r31, r31
    1f92:	a2 17       	cp	r26, r18
    1f94:	b3 07       	cpc	r27, r19
    1f96:	e4 07       	cpc	r30, r20
    1f98:	f5 07       	cpc	r31, r21
    1f9a:	20 f0       	brcs	.+8      	; 0x1fa4 <__udivmodsi4_ep>
    1f9c:	a2 1b       	sub	r26, r18
    1f9e:	b3 0b       	sbc	r27, r19
    1fa0:	e4 0b       	sbc	r30, r20
    1fa2:	f5 0b       	sbc	r31, r21

00001fa4 <__udivmodsi4_ep>:
    1fa4:	66 1f       	adc	r22, r22
    1fa6:	77 1f       	adc	r23, r23
    1fa8:	88 1f       	adc	r24, r24
    1faa:	99 1f       	adc	r25, r25
    1fac:	1a 94       	dec	r1
    1fae:	69 f7       	brne	.-38     	; 0x1f8a <__udivmodsi4_loop>
    1fb0:	60 95       	com	r22
    1fb2:	70 95       	com	r23
    1fb4:	80 95       	com	r24
    1fb6:	90 95       	com	r25
    1fb8:	9b 01       	movw	r18, r22
    1fba:	ac 01       	movw	r20, r24
    1fbc:	bd 01       	movw	r22, r26
    1fbe:	cf 01       	movw	r24, r30
    1fc0:	08 95       	ret

00001fc2 <__umulhisi3>:
    1fc2:	a2 9f       	mul	r26, r18
    1fc4:	b0 01       	movw	r22, r0
    1fc6:	b3 9f       	mul	r27, r19
    1fc8:	c0 01       	movw	r24, r0
    1fca:	a3 9f       	mul	r26, r19
    1fcc:	70 0d       	add	r23, r0
    1fce:	81 1d       	adc	r24, r1
    1fd0:	11 24       	eor	r1, r1
    1fd2:	91 1d       	adc	r25, r1
    1fd4:	b2 9f       	mul	r27, r18
    1fd6:	70 0d       	add	r23, r0
    1fd8:	81 1d       	adc	r24, r1
    1fda:	11 24       	eor	r1, r1
    1fdc:	91 1d       	adc	r25, r1
    1fde:	08 95       	ret

00001fe0 <_exit>:
    1fe0:	f8 94       	cli

00001fe2 <__stop_program>:
    1fe2:	ff cf       	rjmp	.-2      	; 0x1fe2 <__stop_program>
